
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library( systemfit )
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: MASS
Loading required package: nnet
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following object(s) are masked from 'package:base':

    as.Date, as.Date.numeric

> data( "Kmenta" )
> useMatrix <- FALSE
> 
> demand <- consump ~ price + income
> supply <- consump ~ price + farmPrice + trend
> inst <- ~ income + farmPrice + trend
> inst1  <- ~ income + farmPrice
> instlist <- list( inst1, inst )
> system <- list( demand = demand, supply = supply )
> restrm <- matrix(0,1,7)  # restriction matrix "R"
> restrm[1,3] <-  1
> restrm[1,7] <- -1
> restrict <- "demand_income - supply_trend = 0"
> restr2m <- matrix(0,2,7)  # restriction matrix "R" 2
> restr2m[1,3] <-  1
> restr2m[1,7] <- -1
> restr2m[2,2] <- -1
> restr2m[2,5] <-  1
> restr2q <- c( 0, 0.5 )  # restriction vector "q" 2
> restrict2 <- c( "demand_income - supply_trend = 0",
+    "- demand_price + supply_price = 0.5" )
> tc <- matrix(0,7,6)
> tc[1,1] <- 1
> tc[2,2] <- 1
> tc[3,3] <- 1
> tc[4,4] <- 1
> tc[5,5] <- 1
> tc[6,6] <- 1
> tc[7,3] <- 1
> restr3m <- matrix(0,1,6)  # restriction matrix "R" 2
> restr3m[1,2] <- -1
> restr3m[1,5] <-  1
> restr3q <- c( 0.5 )  # restriction vector "q" 2
> restrict3 <- "- C2 + C5 = 0.5"
> 
> # It is not possible to estimate 2SLS with systemfit exactly
> # as EViews does, because EViews uses
> # methodResidCov == "geomean" for the coefficient covariance matrix and
> # methodResidCov == "noDfCor" for the residual covariance matrix.
> # systemfit uses always the same formulas for both calculations.
> 
> ## *************** 2SLS estimation ************************
> ## ************ 2SLS estimation (default)*********************
> fit2sls1 <- systemfit( system, "2SLS", data = Kmenta, inst = inst,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fit2sls1 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 4.36424 0.697214   0.548127

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.86642 4.35744
supply 4.35744 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  7.9208383 11.94738 1.0762e-09 ***
price       -0.2435565  0.0964843 -2.52431   0.021832 *  
income       0.3139918  0.0469437  6.68869 3.8109e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 12.0105264 4.12409 0.00079536 ***
price        0.2400758  0.0999339 2.40235 0.02878451 *  
farmPrice    0.2556057  0.0472501 5.40964 5.7854e-05 ***
trend        0.2529242  0.0996551 2.53800 0.02192877 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2sls1 )
[1] 40
> 
> ## *************** 2SLS estimation (singleEqSigma=F)*******************
> fit2sls1s <- systemfit( system, "2SLS", data = Kmenta, inst = inst,
+    singleEqSigma = FALSE, useMatrix = useMatrix )
> print( summary( fit2sls1s ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 4.36424 0.697214   0.548127

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.86642 4.35744
supply 4.35744 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  8.9351629 10.59111 6.6293e-09 ***
price       -0.2435565  0.1088399 -2.23775   0.038916 *  
income       0.3139918  0.0529552  5.92939 1.6486e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 10.8403780 4.56925  0.0003151 ***
price        0.2400758  0.0901976 2.66166  0.0170582 *  
farmPrice    0.2556057  0.0426466 5.99357 1.8749e-05 ***
trend        0.2529242  0.0899460 2.81196  0.0125284 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2sls1s )
[1] 40
> 
> ## ********************* 2SLS (useDfSys = TRUE) *****************
> print( summary( fit2sls1, useDfSys = TRUE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 4.36424 0.697214   0.548127

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.86642 4.35744
supply 4.35744 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  7.9208383 11.94738 1.5721e-13 ***
price       -0.2435565  0.0964843 -2.52431   0.016584 *  
income       0.3139918  0.0469437  6.68869 1.2900e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 12.0105264 4.12409 0.00023625 ***
price        0.2400758  0.0999339 2.40235 0.02207594 *  
farmPrice    0.2556057  0.0472501 5.40964 5.5059e-06 ***
trend        0.2529242  0.0996551 2.53800 0.01605307 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2sls1 )
[1] 40
> 
> ## ********************* 2SLS (methodResidCov = "noDfCor" ) *****************
> fit2sls1r <- systemfit( system, "2SLS", data = Kmenta, inst = inst,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fit2sls1r ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 2.96768 0.697214   0.524765

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.28645 3.59324
supply 3.59324 4.83166

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  7.3026521 12.95876 3.0779e-10 ***
price       -0.2435565  0.0889541 -2.73800   0.014016 *  
income       0.3139918  0.0432799  7.25491 1.3454e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 10.7425414 4.61087 0.00028922 ***
price        0.2400758  0.0893836 2.68591 0.01623367 *  
farmPrice    0.2556057  0.0422617 6.04816 1.6913e-05 ***
trend        0.2529242  0.0891342 2.83757 0.01188273 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2sls1r )
[1] 40
> 
> ## *************** 2SLS (methodResidCov="noDfCor", singleEqSigma=F) *************
> fit2sls1rs <- systemfit( system, "2SLS", data = Kmenta, inst = inst,
+    methodResidCov = "noDfCor", singleEqSigma = FALSE, useMatrix = useMatrix )
> print( summary( fit2sls1rs ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 2.96768 0.697214   0.524765

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.28645 3.59324
supply 3.59324 4.83166

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  8.1157648 11.66043 1.5591e-09 ***
price       -0.2435565  0.0988587 -2.46368   0.024715 *  
income       0.3139918  0.0480989  6.52804 5.1615e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417  9.8462622 5.03058 0.00012305 ***
price        0.2400758  0.0819260 2.93040 0.00980216 ** 
farmPrice    0.2556057  0.0387357 6.59871 6.1218e-06 ***
trend        0.2529242  0.0816975 3.09586 0.00693978 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2sls1rs )
[1] 40
> 
> ## ********************* 2SLS with restriction ********************
> ## **************** 2SLS with restriction (default)********************
> fit2sls2 <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = inst, useMatrix = useMatrix )
> print( summary( fit2sls2 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573 3.60162 0.691227    0.55332

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263

The covariance matrix of the residuals
        demand  supply
demand 3.96577 4.55271
supply 4.55271 6.13469

The correlations of the residuals
         demand   supply
demand 1.000000 0.923017
supply 0.923017 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

             Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.281641   8.869261 10.63016 2.3839e-12 ***
price       -0.224712   0.103432 -2.17255   0.036878 *  
income       0.298273   0.045400  6.56989 1.5821e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991425 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.418139 MSE: 3.965773 Root MSE: 1.991425 
Multiple R-Squared: 0.748547 Adjusted R-Squared: 0.718964 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.1843300 10.5384060 4.57226 6.1162e-05 ***
price        0.2427200  0.0896229 2.70824   0.010511 *  
farmPrice    0.2618927  0.0410593 6.37841 2.7899e-07 ***
trend        0.2982730  0.0454000 6.56989 1.5821e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.47683 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.155009 MSE: 6.134688 Root MSE: 2.47683 
Multiple R-Squared: 0.633906 Adjusted R-Squared: 0.565263 

> nobs( fit2sls2 )
[1] 40
> # the same with symbolically specified restrictions
> fit2sls2Sym <- systemfit( system, "2SLS", data = Kmenta,
+    restrict.matrix = restrict, inst = inst, useMatrix = useMatrix )
> all.equal( fit2sls2, fit2sls2Sym )
[1] "Component 2: target, current do not match when deparsed"
> nobs( fit2sls2Sym )
[1] 40
> 
> ## ************* 2SLS with restriction (singleEqSigma=T) *****************
> fit2sls2s <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = inst, singleEqSigma = TRUE, x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fit2sls2s ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573 3.60162 0.691227    0.55332

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263

The covariance matrix of the residuals
        demand  supply
demand 3.96577 4.55271
supply 4.55271 6.13469

The correlations of the residuals
         demand   supply
demand 1.000000 0.923017
supply 0.923017 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.2816413  8.0090459 11.77189 1.5277e-13 ***
price       -0.2247122  0.0946243 -2.37478   0.023344 *  
income       0.2982730  0.0429717  6.94114 5.3085e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991425 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.418139 MSE: 3.965773 Root MSE: 1.991425 
Multiple R-Squared: 0.748547 Adjusted R-Squared: 0.718964 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.1843300 11.8000692 4.08339 0.00025481 ***
price        0.2427200  0.1005785 2.41324 0.02134917 *  
farmPrice    0.2618927  0.0459275 5.70230 2.0987e-06 ***
trend        0.2982730  0.0429717 6.94114 5.3085e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.47683 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.155009 MSE: 6.134688 Root MSE: 2.47683 
Multiple R-Squared: 0.633906 Adjusted R-Squared: 0.565263 

> nobs( fit2sls2s )
[1] 40
> 
> ## ********************* 2SLS with restriction (useDfSys=T) **************
> print( summary( fit2sls2, useDfSys = TRUE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573 3.60162 0.691227    0.55332

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263

The covariance matrix of the residuals
        demand  supply
demand 3.96577 4.55271
supply 4.55271 6.13469

The correlations of the residuals
         demand   supply
demand 1.000000 0.923017
supply 0.923017 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

             Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.281641   8.869261 10.63016 2.3839e-12 ***
price       -0.224712   0.103432 -2.17255   0.036878 *  
income       0.298273   0.045400  6.56989 1.5821e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991425 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.418139 MSE: 3.965773 Root MSE: 1.991425 
Multiple R-Squared: 0.748547 Adjusted R-Squared: 0.718964 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.1843300 10.5384060 4.57226 6.1162e-05 ***
price        0.2427200  0.0896229 2.70824   0.010511 *  
farmPrice    0.2618927  0.0410593 6.37841 2.7899e-07 ***
trend        0.2982730  0.0454000 6.56989 1.5821e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.47683 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.155009 MSE: 6.134688 Root MSE: 2.47683 
Multiple R-Squared: 0.633906 Adjusted R-Squared: 0.565263 

> nobs( fit2sls2 )
[1] 40
> 
> ## ********************* 2SLS with restriction (methodResidCov = "noDfCor") **************
> fit2sls2r <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = inst, methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fit2sls2r ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573  2.4491 0.691227   0.525563

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263

The covariance matrix of the residuals
        demand  supply
demand 3.37091 3.75426
supply 3.75426 4.90775

The correlations of the residuals
         demand   supply
demand 1.000000 0.923017
supply 0.923017 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.2816413  8.1770548 11.53002 2.6978e-13 ***
price       -0.2247122  0.0953600 -2.35646   0.024352 *  
income       0.2982730  0.0418567  7.12605 3.0950e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991425 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.418139 MSE: 3.965773 Root MSE: 1.991425 
Multiple R-Squared: 0.748547 Adjusted R-Squared: 0.718964 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.1843300  9.7159303 4.95931 1.9394e-05 ***
price        0.2427200  0.0826282 2.93750  0.0059029 ** 
farmPrice    0.2618927  0.0378548 6.91835 5.6747e-08 ***
trend        0.2982730  0.0418567 7.12605 3.0950e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.47683 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.155009 MSE: 6.134688 Root MSE: 2.47683 
Multiple R-Squared: 0.633906 Adjusted R-Squared: 0.565263 

> nobs( fit2sls2r )
[1] 40
> 
> ## ******** 2SLS with restriction (methodResidCov="noDfCor", singleEqSigma=TRUE) *********
> fit2sls2rs <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = inst, methodResidCov = "noDfCor", singleEqSigma = TRUE,
+    useMatrix = useMatrix )
> print( summary( fit2sls2rs ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573  2.4491 0.691227   0.525563

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263

The covariance matrix of the residuals
        demand  supply
demand 3.37091 3.75426
supply 3.75426 4.90775

The correlations of the residuals
         demand   supply
demand 1.000000 0.923017
supply 0.923017 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.2816413  7.3833738 12.76945 1.5765e-14 ***
price       -0.2247122  0.0870930 -2.58014   0.014369 *  
income       0.2982730  0.0393933  7.57167 8.5491e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991425 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.418139 MSE: 3.965773 Root MSE: 1.991425 
Multiple R-Squared: 0.748547 Adjusted R-Squared: 0.718964 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.1843300 10.5574244 4.56402 6.2666e-05 ***
price        0.2427200  0.0899615 2.69804   0.010779 *  
farmPrice    0.2618927  0.0410963 6.37266 2.8379e-07 ***
trend        0.2982730  0.0393933 7.57167 8.5491e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.47683 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.155009 MSE: 6.134688 Root MSE: 2.47683 
Multiple R-Squared: 0.633906 Adjusted R-Squared: 0.565263 

> nobs( fit2sls2rs )
[1] 40
> 
> ## ********************* 2SLS with restriction via restrict.regMat ******************
> ## *************** 2SLS with restriction via restrict.regMat (default )***************
> fit2sls3 <- systemfit( system, "2SLS", data = Kmenta, restrict.regMat = tc,
+    inst = inst, methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fit2sls3, useDfSys = TRUE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573  2.4491 0.691227   0.525563

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263

The covariance matrix of the residuals
        demand  supply
demand 3.37091 3.75426
supply 3.75426 4.90775

The correlations of the residuals
         demand   supply
demand 1.000000 0.923017
supply 0.923017 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.2816413  8.1770548 11.53002 2.6978e-13 ***
price       -0.2247122  0.0953600 -2.35646   0.024352 *  
income       0.2982730  0.0418567  7.12605 3.0950e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991425 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.418139 MSE: 3.965773 Root MSE: 1.991425 
Multiple R-Squared: 0.748547 Adjusted R-Squared: 0.718964 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.1843300  9.7159303 4.95931 1.9394e-05 ***
price        0.2427200  0.0826282 2.93750  0.0059029 ** 
farmPrice    0.2618927  0.0378548 6.91835 5.6747e-08 ***
trend        0.2982730  0.0418567 7.12605 3.0950e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.47683 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.155009 MSE: 6.134688 Root MSE: 2.47683 
Multiple R-Squared: 0.633906 Adjusted R-Squared: 0.565263 

> nobs( fit2sls3 )
[1] 40
> 
> 
> ## ***************** 2SLS with 2 restrictions *******************
> ## ************** 2SLS with 2 restrictions (default) **************
> fit2sls4 <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, inst = inst, useMatrix = useMatrix )
> print( summary( fit2sls4 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 3.77774 0.690334   0.567505

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.88713 4.52876
supply 4.52876 6.24816

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.4189230 14.90996 < 2.22e-16 ***
price       -0.2432787  0.0663384 -3.66724  0.0008077 ***
income       0.3027102  0.0407936  7.42053  1.104e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.8940642 5.89857 1.0503e-06 ***
price        0.2567213  0.0663384 3.86987 0.00045412 ***
farmPrice    0.2636897  0.0398249 6.62123 1.1840e-07 ***
trend        0.3027102  0.0407936 7.42053 1.1040e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls4 )
[1] 40
> # the same with symbolically specified restrictions
> fit2sls4Sym <- systemfit( system, "2SLS", data = Kmenta,
+    restrict.matrix = restrict2, inst = inst, useMatrix = useMatrix )
> all.equal( fit2sls4, fit2sls4Sym )
[1] "Component 2: target, current do not match when deparsed"
> nobs( fit2sls4Sym )
[1] 40
> 
> ## ************ 2SLS with 2 restrictions (singleEqSigma=T) **************
> fit2sls4s <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, inst = inst, singleEqSigma = TRUE,
+    useMatrix = useMatrix )
> print( summary( fit2sls4s ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 3.77774 0.690334   0.567505

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.88713 4.52876
supply 4.52876 6.24816

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.3056286 15.17785 < 2.22e-16 ***
price       -0.2432787  0.0684193 -3.55571   0.001104 ** 
income       0.3027102  0.0393859  7.68576 5.0916e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  8.3295677 5.59017 2.6797e-06 ***
price        0.2567213  0.0684193 3.75218 0.00063525 ***
farmPrice    0.2636897  0.0455240 5.79232 1.4501e-06 ***
trend        0.3027102  0.0393859 7.68576 5.0916e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls4s )
[1] 40
> 
> ## ***************** 2SLS with 2 restrictions (useDfSys=T) **************
> print( summary( fit2sls4, useDfSys = TRUE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 3.77774 0.690334   0.567505

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.88713 4.52876
supply 4.52876 6.24816

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.4189230 14.90996 < 2.22e-16 ***
price       -0.2432787  0.0663384 -3.66724  0.0008077 ***
income       0.3027102  0.0407936  7.42053  1.104e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.8940642 5.89857 1.0503e-06 ***
price        0.2567213  0.0663384 3.86987 0.00045412 ***
farmPrice    0.2636897  0.0398249 6.62123 1.1840e-07 ***
trend        0.3027102  0.0407936 7.42053 1.1040e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls4 )
[1] 40
> 
> ## ***************** 2SLS with 2 restrictions (methodResidCov="noDfCor") **************
> fit2sls4r <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, inst = inst, methodResidCov = "noDfCor",
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fit2sls4r ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 2.56886 0.690334    0.54023

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.30406 3.73451
supply 3.73451 4.99853

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.0043527 15.93942 < 2.22e-16 ***
price       -0.2432787  0.0620539 -3.92044 0.00039275 ***
income       0.3027102  0.0381589  7.93288 2.4925e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.3842209 6.30584 3.0599e-07 ***
price        0.2567213  0.0620539 4.13707 0.00020962 ***
farmPrice    0.2636897  0.0372528 7.07839 3.0274e-08 ***
trend        0.3027102  0.0381589 7.93288 2.4925e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls4r )
[1] 40
> 
> ## ***** 2SLS with 2 restrictions (methodResidCov="noDfCor", singleEqSigma=T) *******
> fit2sls4rs <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, inst = inst, methodResidCov = "noDfCor",
+    singleEqSigma = TRUE, useMatrix = useMatrix )
> print( summary( fit2sls4rs ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 2.56886 0.690334    0.54023

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.30406 3.73451
supply 3.73451 4.99853

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  5.7578907 16.62169 < 2.22e-16 ***
price       -0.2432787  0.0621283 -3.91575 0.00039808 ***
income       0.3027102  0.0360405  8.39916  6.601e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.5359804 6.17885 4.4916e-07 ***
price        0.2567213  0.0621283 4.13212 0.00021267 ***
farmPrice    0.2636897  0.0407358 6.47317 1.8476e-07 ***
trend        0.3027102  0.0360405 8.39916 6.6010e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls4rs )
[1] 40
> 
> ## ************* 2SLS with 2 restrictions via R and restrict.regMat ******************
> ## ******** 2SLS with 2 restrictions via R and restrict.regMat (default) *************
> fit2sls5 <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, inst = inst,
+    useMatrix = useMatrix )
> print( summary( fit2sls5 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 3.77774 0.690334   0.567505

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.88713 4.52876
supply 4.52876 6.24816

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.4189230 14.90996 < 2.22e-16 ***
price       -0.2432787  0.0663384 -3.66724  0.0008077 ***
income       0.3027102  0.0407936  7.42053  1.104e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.8940642 5.89857 1.0503e-06 ***
price        0.2567213  0.0663384 3.86987 0.00045412 ***
farmPrice    0.2636897  0.0398249 6.62123 1.1840e-07 ***
trend        0.3027102  0.0407936 7.42053 1.1040e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls5 )
[1] 40
> # the same with symbolically specified restrictions
> fit2sls5Sym <- systemfit( system, "2SLS", data = Kmenta,
+    restrict.matrix = restrict3, restrict.regMat = tc, inst = inst,
+    useMatrix = useMatrix )
> all.equal( fit2sls5, fit2sls5Sym )
[1] "Component 2: target, current do not match when deparsed"
> nobs( fit2sls5Sym )
[1] 40
> 
> ## ******* 2SLS with 2 restrictions via R and restrict.regMat (singleEqSigma=T) ******
> fit2sls5s <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, inst = inst,
+    singleEqSigma = TRUE, useMatrix = useMatrix )
> print( summary( fit2sls5s ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 3.77774 0.690334   0.567505

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.88713 4.52876
supply 4.52876 6.24816

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.3056286 15.17785 < 2.22e-16 ***
price       -0.2432787  0.0684193 -3.55571   0.001104 ** 
income       0.3027102  0.0393859  7.68576 5.0916e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  8.3295677 5.59017 2.6797e-06 ***
price        0.2567213  0.0684193 3.75218 0.00063525 ***
farmPrice    0.2636897  0.0455240 5.79232 1.4501e-06 ***
trend        0.3027102  0.0393859 7.68576 5.0916e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls5s )
[1] 40
> 
> ## ********** 2SLS with 2 restrictions via R and restrict.regMat (useDfSys=T) *******
> print( summary( fit2sls5, useDfSys = TRUE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 3.77774 0.690334   0.567505

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.88713 4.52876
supply 4.52876 6.24816

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.4189230 14.90996 < 2.22e-16 ***
price       -0.2432787  0.0663384 -3.66724  0.0008077 ***
income       0.3027102  0.0407936  7.42053  1.104e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.8940642 5.89857 1.0503e-06 ***
price        0.2567213  0.0663384 3.86987 0.00045412 ***
farmPrice    0.2636897  0.0398249 6.62123 1.1840e-07 ***
trend        0.3027102  0.0407936 7.42053 1.1040e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls5 )
[1] 40
> 
> ## ************* 2SLS with 2 restrictions via R and restrict.regMat (methodResidCov="noDfCor") *********
> fit2sls5r <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, inst = inst,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fit2sls5r ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 2.56886 0.690334    0.54023

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.30406 3.73451
supply 3.73451 4.99853

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  6.0043527 15.93942 < 2.22e-16 ***
price       -0.2432787  0.0620539 -3.92044 0.00039275 ***
income       0.3027102  0.0381589  7.93288 2.4925e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.3842209 6.30584 3.0599e-07 ***
price        0.2567213  0.0620539 4.13707 0.00020962 ***
farmPrice    0.2636897  0.0372528 7.07839 3.0274e-08 ***
trend        0.3027102  0.0381589 7.93288 2.4925e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls5r )
[1] 40
> 
> ## ** 2SLS with 2 restrictions via R and restrict.regMat (methodResidCov="noDfCor", singleEqSigma=T) **
> fit2sls5rs <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, inst = inst,
+    methodResidCov = "noDfCor", singleEqSigma = TRUE,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fit2sls5rs ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 2.56886 0.690334    0.54023

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222

The covariance matrix of the residuals
        demand  supply
demand 3.30406 3.73451
supply 3.73451 4.99853

The correlations of the residuals
         demand   supply
demand 1.000000 0.918943
supply 0.918943 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.7058701  5.7578907 16.62169 < 2.22e-16 ***
price       -0.2432787  0.0621283 -3.91575 0.00039808 ***
income       0.3027102  0.0360405  8.39916  6.601e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.97158 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.081175 MSE: 3.887128 Root MSE: 1.97158 
Multiple R-Squared: 0.753534 Adjusted R-Squared: 0.724538 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.5637132  7.5359804 6.17885 4.4916e-07 ***
price        0.2567213  0.0621283 4.13212 0.00021267 ***
farmPrice    0.2636897  0.0407358 6.47317 1.8476e-07 ***
trend        0.3027102  0.0360405 8.39916 6.6010e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.499633 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 99.970628 MSE: 6.248164 Root MSE: 2.499633 
Multiple R-Squared: 0.627134 Adjusted R-Squared: 0.557222 

> nobs( fit2sls5rs )
[1] 40
> 
> ## *********** 2SLS estimation with different instruments **************
> ## ******* 2SLS estimation with different instruments (default) *********
> fit2slsd1 <- systemfit( system, "2SLS", data = Kmenta, inst = instlist,
+    useMatrix = useMatrix )
> print( summary( fit2slsd1 ) )

systemfit results 
method: 2SLS 

        N DF    SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.08 9.24969 0.694011   0.512239

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.96744 3.83562
supply 3.83562 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.783569
supply 0.783569 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 106.7893583  11.1435450  9.58307 2.8797e-08 ***
price        -0.4115989   0.1448445 -2.84166   0.011271 *  
income        0.3616812   0.0564061  6.41210 6.4389e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.446561 MSE: 3.967445 Root MSE: 1.991845 
Multiple R-Squared: 0.748441 Adjusted R-Squared: 0.718846 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 12.0105264 4.12409 0.00079536 ***
price        0.2400758  0.0999339 2.40235 0.02878451 *  
farmPrice    0.2556057  0.0472501 5.40964 5.7854e-05 ***
trend        0.2529242  0.0996551 2.53800 0.02192877 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2slsd1 )
[1] 40
> 
> ## *********** 2SLS estimation with different instruments (singleEqSigma=F)*****
> fit2slsd1s <- systemfit( system, "2SLS", data = Kmenta, inst = instlist,
+    singleEqSigma = FALSE, useMatrix = useMatrix )
> print( summary( fit2slsd1s ) )

systemfit results 
method: 2SLS 

        N DF    SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.08 9.24969 0.694011   0.512239

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.96744 3.83562
supply 3.83562 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.783569
supply 0.783569 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 106.7893583  12.4749416  8.56031 1.4348e-07 ***
price        -0.4115989   0.1621501 -2.53838   0.021211 *  
income        0.3616812   0.0631453  5.72776 2.4639e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.446561 MSE: 3.967445 Root MSE: 1.991845 
Multiple R-Squared: 0.748441 Adjusted R-Squared: 0.718846 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 10.8975620 4.54528 0.00033108 ***
price        0.2400758  0.0906734 2.64770 0.01755142 *  
farmPrice    0.2556057  0.0428716 5.96212 1.9899e-05 ***
trend        0.2529242  0.0904205 2.79720 0.01291574 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2slsd1s )
[1] 40
> 
> ## ********* 2SLS estimation with different instruments (useDfSys=T) *******
> print( summary( fit2slsd1, useDfSys = TRUE ) )

systemfit results 
method: 2SLS 

        N DF    SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.08 9.24969 0.694011   0.512239

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.96744 3.83562
supply 3.83562 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.783569
supply 0.783569 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 106.7893583  11.1435450  9.58307 4.6518e-11 ***
price        -0.4115989   0.1448445 -2.84166  0.0076363 ** 
income        0.3616812   0.0564061  6.41210 2.8834e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.446561 MSE: 3.967445 Root MSE: 1.991845 
Multiple R-Squared: 0.748441 Adjusted R-Squared: 0.718846 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 12.0105264 4.12409 0.00023625 ***
price        0.2400758  0.0999339 2.40235 0.02207594 *  
farmPrice    0.2556057  0.0472501 5.40964 5.5059e-06 ***
trend        0.2529242  0.0996551 2.53800 0.01605307 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2slsd1 )
[1] 40
> 
> ## ********* 2SLS estimation with different instruments (methodResidCov="noDfCor") ******
> fit2slsd1r <- systemfit( system, "2SLS", data = Kmenta, inst = instlist,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fit2slsd1r ) )

systemfit results 
method: 2SLS 

        N DF    SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.08 6.28979 0.694011   0.500365

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.37233 3.16294
supply 3.16294 4.83166

The correlations of the residuals
         demand   supply
demand 1.000000 0.783569
supply 0.783569 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 106.7893583  10.2738409 10.39430 8.7577e-09 ***
price        -0.4115989   0.1335401 -3.08221  0.0067571 ** 
income        0.3616812   0.0520038  6.95489 2.3231e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.446561 MSE: 3.967445 Root MSE: 1.991845 
Multiple R-Squared: 0.748441 Adjusted R-Squared: 0.718846 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 10.7425414 4.61087 0.00028922 ***
price        0.2400758  0.0893836 2.68591 0.01623367 *  
farmPrice    0.2556057  0.0422617 6.04816 1.6913e-05 ***
trend        0.2529242  0.0891342 2.83757 0.01188273 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2slsd1r )
[1] 40
> 
> ## 2SLS estimation with different instruments (methodResidCov="noDfCor",singleEqSigma=F)
> fit2slsd1r <- systemfit( system, "2SLS", data = Kmenta, inst = instlist,
+    methodResidCov = "noDfCor", singleEqSigma = FALSE,
+    useMatrix = useMatrix )
> print( summary( fit2slsd1r ) )

systemfit results 
method: 2SLS 

        N DF    SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.08 6.28979 0.694011   0.500365

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.37233 3.16294
supply 3.16294 4.83166

The correlations of the residuals
         demand   supply
demand 1.000000 0.783569
supply 0.783569 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 106.7893583  11.3309284  9.42459 3.6641e-08 ***
price        -0.4115989   0.1472802 -2.79467   0.012444 *  
income        0.3616812   0.0573546  6.30606 7.8948e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.446561 MSE: 3.967445 Root MSE: 1.991845 
Multiple R-Squared: 0.748441 Adjusted R-Squared: 0.718846 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417  9.8982023 5.00419 0.00012977 ***
price        0.2400758  0.0823582 2.91502 0.01012043 *  
farmPrice    0.2556057  0.0389401 6.56408 6.5179e-06 ***
trend        0.2529242  0.0821285 3.07962 0.00717988 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> nobs( fit2slsd1r )
[1] 40
> 
> ## **** 2SLS estimation with different instruments and restriction *******
> ## ** 2SLS estimation with different instruments and restriction (default) ****
> fit2slsd2 <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = instlist, useMatrix = useMatrix )
> print( summary( fit2slsd2 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 4.88798 0.692732   0.560231

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672

The covariance matrix of the residuals
        demand  supply
demand 3.79088 4.34523
supply 4.34523 6.27004

The correlations of the residuals
         demand   supply
demand 1.000000 0.891266
supply 0.891266 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 103.5936052  11.8929582  8.71050 3.5331e-10 ***
price        -0.3448803   0.1454805 -2.37063   0.023569 *  
income        0.3260285   0.0511102  6.37894 2.7855e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.947019 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.445035 MSE: 3.790884 Root MSE: 1.947019 
Multiple R-Squared: 0.759636 Adjusted R-Squared: 0.731358 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.3592252 10.5362362 4.49489 7.6819e-05 ***
price        0.2443384  0.0894148 2.73264  0.0098953 ** 
farmPrice    0.2657406  0.0410905 6.46721 2.1440e-07 ***
trend        0.3260285  0.0511102 6.37894 2.7855e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.504004 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.320616 MSE: 6.270038 Root MSE: 2.504004 
Multiple R-Squared: 0.625829 Adjusted R-Squared: 0.555672 

> nobs( fit2slsd2 )
[1] 40
> 
> ## 2SLS estimation with different instruments and restriction (singleEqSigma=T)
> fit2slsd2s <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = instlist, singleEqSigma = TRUE, useMatrix = useMatrix )
> print( summary( fit2slsd2s ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 4.88798 0.692732   0.560231

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672

The covariance matrix of the residuals
        demand  supply
demand 3.79088 4.34523
supply 4.34523 6.27004

The correlations of the residuals
         demand   supply
demand 1.000000 0.891266
supply 0.891266 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 103.5936052  10.6343901  9.74138 2.2722e-11 ***
price        -0.3448803   0.1327478 -2.59801   0.013762 *  
income        0.3260285   0.0484539  6.72863 9.9054e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.947019 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.445035 MSE: 3.790884 Root MSE: 1.947019 
Multiple R-Squared: 0.759636 Adjusted R-Squared: 0.731358 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.3592252 11.9465757 3.96425 0.00035872 ***
price        0.2443384  0.1016896 2.40279 0.02187554 *  
farmPrice    0.2657406  0.0465266 5.71158 2.0411e-06 ***
trend        0.3260285  0.0484539 6.72863 9.9054e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.504004 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.320616 MSE: 6.270038 Root MSE: 2.504004 
Multiple R-Squared: 0.625829 Adjusted R-Squared: 0.555672 

> nobs( fit2slsd2s )
[1] 40
> 
> ## **** 2SLS estimation with different instruments and restriction (useDfSys=F)
> print( summary( fit2slsd2, useDfSys = FALSE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 4.88798 0.692732   0.560231

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672

The covariance matrix of the residuals
        demand  supply
demand 3.79088 4.34523
supply 4.34523 6.27004

The correlations of the residuals
         demand   supply
demand 1.000000 0.891266
supply 0.891266 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 103.5936052  11.8929582  8.71050 1.1246e-07 ***
price        -0.3448803   0.1454805 -2.37063   0.029845 *  
income        0.3260285   0.0511102  6.37894 6.8616e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.947019 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.445035 MSE: 3.790884 Root MSE: 1.947019 
Multiple R-Squared: 0.759636 Adjusted R-Squared: 0.731358 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.3592252 10.5362362 4.49489  0.0003674 ***
price        0.2443384  0.0894148 2.73264  0.0147509 *  
farmPrice    0.2657406  0.0410905 6.46721 7.7742e-06 ***
trend        0.3260285  0.0511102 6.37894 9.1390e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.504004 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.320616 MSE: 6.270038 Root MSE: 2.504004 
Multiple R-Squared: 0.625829 Adjusted R-Squared: 0.555672 

> nobs( fit2slsd2 )
[1] 40
> 
> ## **** 2SLS estimation with different instruments and restriction (methodResidCov="noDfCor")
> fit2slsd2r <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = instlist, methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fit2slsd2r ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 3.32382 0.692732   0.537401

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672

The covariance matrix of the residuals
        demand  supply
demand 3.22225 3.58317
supply 3.58317 5.01603

The correlations of the residuals
         demand   supply
demand 1.000000 0.891266
supply 0.891266 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 103.5936052  10.9647657  9.44786 4.8937e-11 ***
price        -0.3448803   0.1341264 -2.57131   0.014678 *  
income        0.3260285   0.0471212  6.91893 5.6652e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.947019 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.445035 MSE: 3.790884 Root MSE: 1.947019 
Multiple R-Squared: 0.759636 Adjusted R-Squared: 0.731358 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.3592252  9.7139298 4.87539 2.4902e-05 ***
price        0.2443384  0.0824363 2.96396   0.005515 ** 
farmPrice    0.2657406  0.0378835 7.01467 4.2819e-08 ***
trend        0.3260285  0.0471212 6.91893 5.6652e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.504004 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.320616 MSE: 6.270038 Root MSE: 2.504004 
Multiple R-Squared: 0.625829 Adjusted R-Squared: 0.555672 

> nobs( fit2slsd2r )
[1] 40
> 
> ## 2SLS estimation with different instr. and restr. (methodResidCov="noDfCor", singleEqSigma=T)
> fit2slsd2rs <- systemfit( system, "2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = instlist, methodResidCov = "noDfCor", singleEqSigma = TRUE,
+    useMatrix = useMatrix )
> print( summary( fit2slsd2rs ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 3.32382 0.692732   0.537401

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672

The covariance matrix of the residuals
        demand  supply
demand 3.22225 3.58317
supply 3.58317 5.01603

The correlations of the residuals
         demand   supply
demand 1.000000 0.891266
supply 0.891266 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 103.5936052   9.7929422 10.57839 2.7107e-12 ***
price        -0.3448803   0.1219861 -2.82721  0.0078123 ** 
income        0.3260285   0.0443578  7.34998 1.6173e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.947019 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.445035 MSE: 3.790884 Root MSE: 1.947019 
Multiple R-Squared: 0.759636 Adjusted R-Squared: 0.731358 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.3592252 10.6890378 4.43064 9.2780e-05 ***
price        0.2443384  0.0909557 2.68635   0.011094 *  
farmPrice    0.2657406  0.0416353 6.38258 2.7556e-07 ***
trend        0.3260285  0.0443578 7.34998 1.6173e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.504004 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.320616 MSE: 6.270038 Root MSE: 2.504004 
Multiple R-Squared: 0.625829 Adjusted R-Squared: 0.555672 

> nobs( fit2slsd2rs )
[1] 40
> 
> ## **** 2SLS estimation with different instruments and restriction via restrict.regMat *
> ## 2SLS estimation with different instruments and restriction via restrict.regMat (default)
> fit2slsd3 <- systemfit( system, "2SLS", data = Kmenta, restrict.regMat = tc,
+    inst = instlist, useMatrix = useMatrix )
> print( summary( fit2slsd3 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 4.88798 0.692732   0.560231

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672

The covariance matrix of the residuals
        demand  supply
demand 3.79088 4.34523
supply 4.34523 6.27004

The correlations of the residuals
         demand   supply
demand 1.000000 0.891266
supply 0.891266 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 103.5936052  11.8929582  8.71050 3.5331e-10 ***
price        -0.3448803   0.1454805 -2.37063   0.023569 *  
income        0.3260285   0.0511102  6.37894 2.7855e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.947019 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.445035 MSE: 3.790884 Root MSE: 1.947019 
Multiple R-Squared: 0.759636 Adjusted R-Squared: 0.731358 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.3592252 10.5362362 4.49489 7.6819e-05 ***
price        0.2443384  0.0894148 2.73264  0.0098953 ** 
farmPrice    0.2657406  0.0410905 6.46721 2.1440e-07 ***
trend        0.3260285  0.0511102 6.37894 2.7855e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.504004 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.320616 MSE: 6.270038 Root MSE: 2.504004 
Multiple R-Squared: 0.625829 Adjusted R-Squared: 0.555672 

> nobs( fit2slsd3 )
[1] 40
> 
> ## **** 2SLS estimation with different instr. and restr. via restrict.regMat (methodResidCov="noDfCor")
> fit2slsd3r <- systemfit( system, "2SLS", data = Kmenta, restrict.regMat = tc,
+    inst = instlist, methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fit2slsd3r ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 3.32382 0.692732   0.537401

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672

The covariance matrix of the residuals
        demand  supply
demand 3.22225 3.58317
supply 3.58317 5.01603

The correlations of the residuals
         demand   supply
demand 1.000000 0.891266
supply 0.891266 1.000000


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 103.5936052  10.9647657  9.44786 4.8937e-11 ***
price        -0.3448803   0.1341264 -2.57131   0.014678 *  
income        0.3260285   0.0471212  6.91893 5.6652e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.947019 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.445035 MSE: 3.790884 Root MSE: 1.947019 
Multiple R-Squared: 0.759636 Adjusted R-Squared: 0.731358 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.3592252  9.7139298 4.87539 2.4902e-05 ***
price        0.2443384  0.0824363 2.96396   0.005515 ** 
farmPrice    0.2657406  0.0378835 7.01467 4.2819e-08 ***
trend        0.3260285  0.0471212 6.91893 5.6652e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.504004 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.320616 MSE: 6.270038 Root MSE: 2.504004 
Multiple R-Squared: 0.625829 Adjusted R-Squared: 0.555672 

> nobs( fit2slsd3r )
[1] 40
> 
> 
> ## *********** estimations with a single regressor ************
> fit2slsS1 <- systemfit(
+    list( consump ~ price - 1, price ~ consump + trend ), "2SLS",
+    data = Kmenta, inst = ~ farmPrice + trend + income, useMatrix = useMatrix )
> print( summary( fit2slsS1 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov    OLS-R2 McElroy-R2
system 40 36 1543.74 179.335 -0.650411   0.852456

     N DF     SSR     MSE    RMSE        R2    Adj R2
eq1 20 19 861.480 45.3411 6.73358 -2.213109 -2.213109
eq2 20 17 682.257 40.1328 6.33504 -0.022489 -0.142782

The covariance matrix of the residuals
         eq1      eq2
eq1  45.3411 -40.5010
eq2 -40.5010  40.1328

The correlations of the residuals
          eq1       eq2
eq1  1.000000 -0.950278
eq2 -0.950278  1.000000


2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1
Instruments: ~farmPrice + trend + income

       Estimate Std. Error t value   Pr(>|t|)    
price 1.0060425  0.0150302 66.9345 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 6.733578 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.480497 MSE: 45.341079 Root MSE: 6.733578 
Multiple R-Squared: -2.213109 Adjusted R-Squared: -2.213109 


2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ consump + trend
Instruments: ~farmPrice + trend + income

              Estimate Std. Error  t value Pr(>|t|)
(Intercept) 55.5365164 46.2667678  1.20035  0.24646
consump      0.4452989  0.4622029  0.96343  0.34884
trend       -0.0426021  0.2495778 -0.17070  0.86648

Residual standard error: 6.335044 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 682.257396 MSE: 40.132788 Root MSE: 6.335044 
Multiple R-Squared: -0.022489 Adjusted R-Squared: -0.142782 

> nobs( fit2slsS1 )
[1] 40
> fit2slsS2 <- systemfit(
+    list( consump ~ price - 1, consump ~ trend - 1 ), "2SLS",
+    data = Kmenta, inst = ~ farmPrice + price + income, useMatrix = useMatrix )
> print( summary( fit2slsS2 ) )

systemfit results 
method: 2SLS 

        N DF   SSR detRCov   OLS-R2 McElroy-R2
system 40 38 47456  111148 -87.4996   -5.27524

     N DF       SSR       MSE     RMSE         R2     Adj R2
eq1 20 19   861.449   45.3394  6.73345   -2.21299   -2.21299
eq2 20 19 46594.549 2452.3447 49.52115 -172.78614 -172.78614

The covariance matrix of the residuals
         eq1        eq2
eq1 45.33940   -6.33258
eq2 -6.33258 2452.34470

The correlations of the residuals
           eq1        eq2
eq1  1.0000000 -0.0448498
eq2 -0.0448498  1.0000000


2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1
Instruments: ~farmPrice + price + income

       Estimate Std. Error t value   Pr(>|t|)    
price 1.0056434  0.0150286 66.9155 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 6.733453 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.448515 MSE: 45.339396 Root MSE: 6.733453 
Multiple R-Squared: -2.21299 Adjusted R-Squared: -2.21299 


2SLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ trend - 1
Instruments: ~farmPrice + price + income

      Estimate Std. Error t value   Pr(>|t|)    
trend  7.57760    0.93412 8.11202 1.3624e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.521154 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46594.549257 MSE: 2452.344698 Root MSE: 49.521154 
Multiple R-Squared: -172.78614 Adjusted R-Squared: -172.78614 

> nobs( fit2slsS2 )
[1] 40
> fit2slsS3 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "2SLS",
+    data = Kmenta, inst = instlist, useMatrix = useMatrix )
> print( summary( fit2slsS3 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 38 97978.1  687515 -103.748   -10.6088

     N DF     SSR     MSE   RMSE        R2    Adj R2
eq1 20 19 50950.0 2681.58 51.784 -189.0308 -189.0308
eq2 20 19 47028.1 2475.16 49.751  -69.4803  -69.4803

The covariance matrix of the residuals
        eq1     eq2
eq1 2681.58 2439.23
eq2 2439.23 2475.16

The correlations of the residuals
        eq1     eq2
eq1 1.00000 0.98909
eq2 0.98909 1.00000


2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1
Instruments: ~income + farmPrice

      Estimate Std. Error t value   Pr(>|t|)    
trend  8.64882    1.04544 8.27293 1.0147e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 51.783957 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 50949.98529 MSE: 2681.578173 Root MSE: 51.783957 
Multiple R-Squared: -189.030839 Adjusted R-Squared: -189.030839 


2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1
Instruments: ~income + farmPrice + trend

      Estimate Std. Error t value  Pr(>|t|)    
trend 7.318426   0.928669 7.88055 2.094e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.751015 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47028.107165 MSE: 2475.163535 Root MSE: 49.751015 
Multiple R-Squared: -69.480332 Adjusted R-Squared: -69.480332 

> nobs( fit2slsS3 )
[1] 40
> fit2slsS4 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "2SLS",
+    data = Kmenta, inst = ~ farmPrice + trend + income,
+    restrict.matrix = matrix( c( 1, -1 ), nrow = 1 ), useMatrix = useMatrix )
> print( summary( fit2slsS4 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 39 93547.8  111736 -99.0119   -1.02688

     N DF     SSR     MSE    RMSE        R2    Adj R2
eq1 20 19 46514.3 2448.12 49.4785 -172.4868 -172.4868
eq2 20 19 47033.5 2475.45 49.7539  -69.4884  -69.4884

The covariance matrix of the residuals
        eq1     eq2
eq1 2448.12 2438.95
eq2 2438.95 2475.45

The correlations of the residuals
         eq1      eq2
eq1 1.000000 0.988344
eq2 0.988344 1.000000


2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1
Instruments: ~farmPrice + trend + income

      Estimate Std. Error t value   Pr(>|t|)    
trend  7.36165    0.64644  11.388 5.6843e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.478482 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46514.283492 MSE: 2448.120184 Root MSE: 49.478482 
Multiple R-Squared: -172.486769 Adjusted R-Squared: -172.486769 


2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1
Instruments: ~farmPrice + trend + income

      Estimate Std. Error t value   Pr(>|t|)    
trend  7.36165    0.64644  11.388 5.6843e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.753851 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47033.468761 MSE: 2475.445724 Root MSE: 49.753851 
Multiple R-Squared: -69.488367 Adjusted R-Squared: -69.488367 

> nobs( fit2slsS4 )
[1] 40
> fit2slsS5 <- systemfit(
+    list( consump ~ 1, price ~ 1 ), "2SLS",
+    data = Kmenta, inst = ~ farmPrice, useMatrix = useMatrix )
> print( summary( fit2slsS1 ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov    OLS-R2 McElroy-R2
system 40 36 1543.74 179.335 -0.650411   0.852456

     N DF     SSR     MSE    RMSE        R2    Adj R2
eq1 20 19 861.480 45.3411 6.73358 -2.213109 -2.213109
eq2 20 17 682.257 40.1328 6.33504 -0.022489 -0.142782

The covariance matrix of the residuals
         eq1      eq2
eq1  45.3411 -40.5010
eq2 -40.5010  40.1328

The correlations of the residuals
          eq1       eq2
eq1  1.000000 -0.950278
eq2 -0.950278  1.000000


2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1
Instruments: ~farmPrice + trend + income

       Estimate Std. Error t value   Pr(>|t|)    
price 1.0060425  0.0150302 66.9345 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 6.733578 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.480497 MSE: 45.341079 Root MSE: 6.733578 
Multiple R-Squared: -2.213109 Adjusted R-Squared: -2.213109 


2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ consump + trend
Instruments: ~farmPrice + trend + income

              Estimate Std. Error  t value Pr(>|t|)
(Intercept) 55.5365164 46.2667678  1.20035  0.24646
consump      0.4452989  0.4622029  0.96343  0.34884
trend       -0.0426021  0.2495778 -0.17070  0.86648

Residual standard error: 6.335044 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 682.257396 MSE: 40.132788 Root MSE: 6.335044 
Multiple R-Squared: -0.022489 Adjusted R-Squared: -0.142782 

> 
> 
> ## **************** shorter summaries **********************
> print( summary( fit2sls1, useDfSys = TRUE, residCov = FALSE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 4.36424 0.697214   0.548127

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  7.9208383 11.94738 1.5721e-13 ***
price       -0.2435565  0.0964843 -2.52431   0.016584 *  
income       0.3139918  0.0469437  6.68869 1.2900e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 12.0105264 4.12409 0.00023625 ***
price        0.2400758  0.0999339 2.40235 0.02207594 *  
farmPrice    0.2556057  0.0472501 5.40964 5.5059e-06 ***
trend        0.2529242  0.0996551 2.53800 0.01605307 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> 
> print( summary( fit2sls1, equations = FALSE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 4.36424 0.697214   0.548127

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals
        demand  supply
demand 3.86642 4.35744
supply 4.35744 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 94.6333039  7.9208383 11.94738 1.0762e-09 ***
demand_price       -0.2435565  0.0964843 -2.52431 0.02183240 *  
demand_income       0.3139918  0.0469437  6.68869 3.8109e-06 ***
supply_(Intercept) 49.5324417 12.0105264  4.12409 0.00079536 ***
supply_price        0.2400758  0.0999339  2.40235 0.02878451 *  
supply_farmPrice    0.2556057  0.0472501  5.40964 5.7854e-05 ***
supply_trend        0.2529242  0.0996551  2.53800 0.02192877 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2sls1rs, residCov = FALSE, equations = FALSE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 2.96768 0.697214   0.524765

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 94.6333039  8.1157648 11.66043 1.5591e-09 ***
demand_price       -0.2435565  0.0988587 -2.46368 0.02471472 *  
demand_income       0.3139918  0.0480989  6.52804 5.1615e-06 ***
supply_(Intercept) 49.5324417  9.8462622  5.03058 0.00012305 ***
supply_price        0.2400758  0.0819260  2.93040 0.00980216 ** 
supply_farmPrice    0.2556057  0.0387357  6.59871 6.1218e-06 ***
supply_trend        0.2529242  0.0816975  3.09586 0.00693978 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2sls2Sym, useDfSys = FALSE ), equations = FALSE )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573 3.60162 0.691227    0.55332

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263

The covariance matrix of the residuals
        demand  supply
demand 3.96577 4.55271
supply 4.55271 6.13469

The correlations of the residuals
         demand   supply
demand 1.000000 0.923017
supply 0.923017 1.000000


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 94.2816413  8.8692612 10.63016 6.2759e-09 ***
demand_price       -0.2247122  0.1034324 -2.17255 0.04424569 *  
demand_income       0.2982730  0.0454000  6.56989 4.7677e-06 ***
supply_(Intercept) 48.1843300 10.5384060  4.57226 0.00031316 ***
supply_price        0.2427200  0.0896229  2.70824 0.01550809 *  
supply_farmPrice    0.2618927  0.0410593  6.37841 9.1479e-06 ***
supply_trend        0.2982730  0.0454000  6.56989 6.4495e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2sls2 ), residCov = FALSE )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573 3.60162 0.691227    0.55332

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263


2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

             Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.281641   8.869261 10.63016 2.3839e-12 ***
price       -0.224712   0.103432 -2.17255   0.036878 *  
income       0.298273   0.045400  6.56989 1.5821e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991425 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.418139 MSE: 3.965773 Root MSE: 1.991425 
Multiple R-Squared: 0.748547 Adjusted R-Squared: 0.718964 


2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.1843300 10.5384060 4.57226 6.1162e-05 ***
price        0.2427200  0.0896229 2.70824   0.010511 *  
farmPrice    0.2618927  0.0410593 6.37841 2.7899e-07 ***
trend        0.2982730  0.0454000 6.56989 1.5821e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.47683 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.155009 MSE: 6.134688 Root MSE: 2.47683 
Multiple R-Squared: 0.633906 Adjusted R-Squared: 0.565263 

> 
> print( summary( fit2sls3, useDfSys = FALSE, residCov = FALSE,
+    equations = FALSE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.573  2.4491 0.691227   0.525563

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4181 3.96577 1.99143 0.748547 0.718964
supply 20 16 98.1550 6.13469 2.47683 0.633906 0.565263


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 94.2816413  8.1770548 11.53002 1.8495e-09 ***
demand_price       -0.2247122  0.0953600 -2.35646 0.03070831 *  
demand_income       0.2982730  0.0418567  7.12605 1.6986e-06 ***
supply_(Intercept) 48.1843300  9.7159303  4.95931 0.00014207 ***
supply_price        0.2427200  0.0826282  2.93750 0.00965854 ** 
supply_farmPrice    0.2618927  0.0378548  6.91835 3.4586e-06 ***
supply_trend        0.2982730  0.0418567  7.12605 2.4044e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2sls4s ), equations = FALSE, residCov = FALSE )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 3.77774 0.690334   0.567505

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 95.7058701  6.3056286 15.17785 < 2.22e-16 ***
demand_price       -0.2432787  0.0684193 -3.55571 0.00110400 ** 
demand_income       0.3027102  0.0393859  7.68576 5.0916e-09 ***
supply_(Intercept) 46.5637132  8.3295677  5.59017 2.6797e-06 ***
supply_price        0.2567213  0.0684193  3.75218 0.00063525 ***
supply_farmPrice    0.2636897  0.0455240  5.79232 1.4501e-06 ***
supply_trend        0.3027102  0.0393859  7.68576 5.0916e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2sls5r, equations = FALSE, residCov = FALSE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.052 2.56886 0.690334    0.54023

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.0812 3.88713 1.97158 0.753534 0.724538
supply 20 16 99.9706 6.24816 2.49963 0.627134 0.557222


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 95.7058701  6.0043527 15.93942 < 2.22e-16 ***
demand_price       -0.2432787  0.0620539 -3.92044 0.00039275 ***
demand_income       0.3027102  0.0381589  7.93288 2.4925e-09 ***
supply_(Intercept) 46.5637132  7.3842209  6.30584 3.0599e-07 ***
supply_price        0.2567213  0.0620539  4.13707 0.00020962 ***
supply_farmPrice    0.2636897  0.0372528  7.07839 3.0274e-08 ***
supply_trend        0.3027102  0.0381589  7.93288 2.4925e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2slsd1s ), residCov = FALSE, equations = FALSE )

systemfit results 
method: 2SLS 

        N DF    SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.08 9.24969 0.694011   0.512239

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004


Coefficients:
                      Estimate  Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 106.7893583  12.4749416  8.56031 1.4348e-07 ***
demand_price        -0.4115989   0.1621501 -2.53838 0.02121061 *  
demand_income        0.3616812   0.0631453  5.72776 2.4639e-05 ***
supply_(Intercept)  49.5324417  10.8975620  4.54528 0.00033108 ***
supply_price         0.2400758   0.0906734  2.64770 0.01755142 *  
supply_farmPrice     0.2556057   0.0428716  5.96212 1.9899e-05 ***
supply_trend         0.2529242   0.0904205  2.79720 0.01291574 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2slsd2, residCov = FALSE, equations = FALSE ) )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 4.88798 0.692732   0.560231

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672


Coefficients:
                      Estimate  Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 103.5936052  11.8929582  8.71050 3.5331e-10 ***
demand_price        -0.3448803   0.1454805 -2.37063  0.0235692 *  
demand_income        0.3260285   0.0511102  6.37894 2.7855e-07 ***
supply_(Intercept)  47.3592252  10.5362362  4.49489 7.6819e-05 ***
supply_price         0.2443384   0.0894148  2.73264  0.0098953 ** 
supply_farmPrice     0.2657406   0.0410905  6.46721 2.1440e-07 ***
supply_trend         0.3260285   0.0511102  6.37894 2.7855e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fit2slsd3r ), residCov = FALSE, equations = FALSE )

systemfit results 
method: 2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 164.766 3.32382 0.692732   0.537401

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.445 3.79088 1.94702 0.759636 0.731358
supply 20 16 100.321 6.27004 2.50400 0.625829 0.555672


Coefficients:
                      Estimate  Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 103.5936052  10.9647657  9.44786 4.8937e-11 ***
demand_price        -0.3448803   0.1341264 -2.57131   0.014678 *  
demand_income        0.3260285   0.0471212  6.91893 5.6652e-08 ***
supply_(Intercept)  47.3592252   9.7139298  4.87539 2.4902e-05 ***
supply_price         0.2443384   0.0824363  2.96396   0.005515 ** 
supply_farmPrice     0.2657406   0.0378835  7.01467 4.2819e-08 ***
supply_trend         0.3260285   0.0471212  6.91893 5.6652e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> 
> ## ****************** residuals **************************
> print( residuals( fit2sls1 ) )
       demand      supply
1   0.8431358 -0.43484924
2  -0.6977241 -1.21307836
3   2.3589601  1.70902028
4   1.4898215  0.79558067
5   2.1390993  1.59415675
6   1.2766798  0.65949720
7   1.5710280  1.43462590
8  -3.0659057 -4.87240247
9  -1.1248574 -2.39745009
10  2.4920014  3.14274752
11 -0.1076273  0.06887481
12 -2.2916434 -1.39781154
13 -1.5980935 -1.11362011
14 -0.2712910  1.16839025
15  1.9579965  3.48646205
16 -3.4304568 -3.82853007
17 -0.3129594  0.67934006
18 -2.1512704 -2.77132858
19  1.5915359  2.66683272
20 -0.6684295  0.62354227
> print( residuals( fit2sls1$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 0.8431358 -0.6977241  2.3589601  1.4898215  2.1390993  1.2766798  1.5710280 
         8          9         10         11         12         13         14 
-3.0659057 -1.1248574  2.4920014 -0.1076273 -2.2916434 -1.5980935 -0.2712910 
        15         16         17         18         19         20 
 1.9579965 -3.4304568 -0.3129594 -2.1512704  1.5915359 -0.6684295 
> 
> print( residuals( fit2sls2s ) )
        demand      supply
1   0.67809823 -0.01348357
2  -0.77669575 -0.85439804
3   2.28146355  2.02454383
4   1.41572079  1.06921037
5   2.21273120  1.75979402
6   1.33389633  0.79228436
7   1.64034582  1.53415309
8  -2.99394908 -4.85440499
9  -1.07222261 -2.39589381
10  2.52193139  3.16367679
11 -0.32961054  0.16276913
12 -2.59304711 -1.28642226
13 -1.85585634 -1.07289946
14 -0.35649940  1.10872790
15  2.13780975  3.25967067
16 -3.28199527 -4.12645560
17 -0.07600483  0.33309386
18 -2.11868085 -3.09608001
19  1.69011965  2.31221537
20 -0.45755494  0.17989834
> print( residuals( fit2sls2s$eq[[ 2 ]] ) )
          1           2           3           4           5           6 
-0.01348357 -0.85439804  2.02454383  1.06921037  1.75979402  0.79228436 
          7           8           9          10          11          12 
 1.53415309 -4.85440499 -2.39589381  3.16367679  0.16276913 -1.28642226 
         13          14          15          16          17          18 
-1.07289946  1.10872790  3.25967067 -4.12645560  0.33309386 -3.09608001 
         19          20 
 2.31221537  0.17989834 
> 
> print( residuals( fit2sls3 ) )
        demand      supply
1   0.67809823 -0.01348357
2  -0.77669575 -0.85439804
3   2.28146355  2.02454383
4   1.41572079  1.06921037
5   2.21273120  1.75979402
6   1.33389633  0.79228436
7   1.64034582  1.53415309
8  -2.99394908 -4.85440499
9  -1.07222261 -2.39589381
10  2.52193139  3.16367679
11 -0.32961054  0.16276913
12 -2.59304711 -1.28642226
13 -1.85585634 -1.07289946
14 -0.35649940  1.10872790
15  2.13780975  3.25967067
16 -3.28199527 -4.12645560
17 -0.07600483  0.33309386
18 -2.11868085 -3.09608001
19  1.69011965  2.31221537
20 -0.45755494  0.17989834
> print( residuals( fit2sls3$eq[[ 1 ]] ) )
          1           2           3           4           5           6 
 0.67809823 -0.77669575  2.28146355  1.41572079  2.21273120  1.33389633 
          7           8           9          10          11          12 
 1.64034582 -2.99394908 -1.07222261  2.52193139 -0.32961054 -2.59304711 
         13          14          15          16          17          18 
-1.85585634 -0.35649940  2.13780975 -3.28199527 -0.07600483 -2.11868085 
         19          20 
 1.69011965 -0.45755494 
> 
> print( residuals( fit2sls4r ) )
       demand      supply
1   0.7287123  0.02194309
2  -0.6981701 -0.88056422
3   2.3485910  2.00554752
4   1.4960773  1.03257852
5   2.1652128  1.78698149
6   1.3102862  0.79933497
7   1.6346475  1.51889666
8  -2.9514179 -4.93340859
9  -1.1344131 -2.36090943
10  2.3970269  3.28183815
11 -0.3588039  0.28571387
12 -2.5241009 -1.22566330
13 -1.7448236 -1.07821392
14 -0.3491781  1.13824116
15  2.0221398  3.29811236
16 -3.3446758 -4.14395515
17 -0.3220079  0.46863079
18 -2.0749325 -3.17790862
19  1.7384609  2.20715572
20 -0.3386310 -0.04435106
> print( residuals( fit2sls4r$eq[[ 2 ]] ) )
          1           2           3           4           5           6 
 0.02194309 -0.88056422  2.00554752  1.03257852  1.78698149  0.79933497 
          7           8           9          10          11          12 
 1.51889666 -4.93340859 -2.36090943  3.28183815  0.28571387 -1.22566330 
         13          14          15          16          17          18 
-1.07821392  1.13824116  3.29811236 -4.14395515  0.46863079 -3.17790862 
         19          20 
 2.20715572 -0.04435106 
> 
> print( residuals( fit2sls5rs ) )
       demand      supply
1   0.7287123  0.02194309
2  -0.6981701 -0.88056422
3   2.3485910  2.00554752
4   1.4960773  1.03257852
5   2.1652128  1.78698149
6   1.3102862  0.79933497
7   1.6346475  1.51889666
8  -2.9514179 -4.93340859
9  -1.1344131 -2.36090943
10  2.3970269  3.28183815
11 -0.3588039  0.28571387
12 -2.5241009 -1.22566330
13 -1.7448236 -1.07821392
14 -0.3491781  1.13824116
15  2.0221398  3.29811236
16 -3.3446758 -4.14395515
17 -0.3220079  0.46863079
18 -2.0749325 -3.17790862
19  1.7384609  2.20715572
20 -0.3386310 -0.04435106
> print( residuals( fit2sls5rs$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 0.7287123 -0.6981701  2.3485910  1.4960773  2.1652128  1.3102862  1.6346475 
         8          9         10         11         12         13         14 
-2.9514179 -1.1344131  2.3970269 -0.3588039 -2.5241009 -1.7448236 -0.3491781 
        15         16         17         18         19         20 
 2.0221398 -3.3446758 -0.3220079 -2.0749325  1.7384609 -0.3386310 
> 
> print( residuals( fit2slsd1 ) )
        demand      supply
1   1.37754421 -0.43484924
2   0.01250751 -1.21307836
3   2.97280508  1.70902028
4   2.21210574  0.79558067
5   1.69196496  1.59415675
6   1.04066455  0.65949720
7   1.47679961  1.43462590
8  -2.75825263 -4.87240247
9  -1.68069158 -2.39745009
10  1.42653037  3.14274752
11 -0.20293023  0.06887481
12 -1.51225698 -1.39781154
13 -0.49576532 -1.11362011
14 -0.15281105  1.16839025
15  0.86918902  3.48646205
16 -4.05472577 -3.82853007
17 -2.53094129  0.67934006
18 -1.80700101 -2.77132858
19  1.92994046  2.66683272
20  0.18532435  0.62354227
> print( residuals( fit2slsd1$eq[[ 2 ]] ) )
          1           2           3           4           5           6 
-0.43484924 -1.21307836  1.70902028  0.79558067  1.59415675  0.65949720 
          7           8           9          10          11          12 
 1.43462590 -4.87240247 -2.39745009  3.14274752  0.06887481 -1.39781154 
         13          14          15          16          17          18 
-1.11362011  1.16839025  3.48646205 -3.82853007  0.67934006 -2.77132858 
         19          20 
 2.66683272  0.62354227 
> 
> print( residuals( fit2slsd2r ) )
       demand      supply
1   0.9959255  0.24441111
2  -0.2683923 -0.63486962
3   2.7151276  2.21765837
4   1.9364516  1.23668400
5   1.9073597  1.86117145
6   1.1839406  0.87355605
7   1.6089208  1.59506819
8  -2.7087881 -4.84338972
9  -1.4756378 -2.39494130
10  1.7051966  3.17648645
11 -0.5401670  0.22023666
12 -2.1666827 -1.21824703
13 -1.1496791 -1.04797660
14 -0.3157932  1.07221188
15  1.3945206  3.12086419
16 -3.6803954 -4.30879937
17 -1.6693011  0.12117567
18 -1.8289166 -3.29484244
19  2.0156788  2.09517366
20  0.3406315 -0.09163162
> print( residuals( fit2slsd2r$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 0.9959255 -0.2683923  2.7151276  1.9364516  1.9073597  1.1839406  1.6089208 
         8          9         10         11         12         13         14 
-2.7087881 -1.4756378  1.7051966 -0.5401670 -2.1666827 -1.1496791 -0.3157932 
        15         16         17         18         19         20 
 1.3945206 -3.6803954 -1.6693011 -1.8289166  2.0156788  0.3406315 
> 
> 
> ## *************** coefficients *********************
> print( round( coef( fit2sls1s ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         94.633304          -0.243557           0.313992          49.532442 
      supply_price   supply_farmPrice       supply_trend 
          0.240076           0.255606           0.252924 
> print( round( coef( fit2sls1s$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
  94.633304   -0.243557    0.313992 
> 
> print( round( coef( fit2sls2 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         94.281641          -0.224712           0.298273          48.184330 
      supply_price   supply_farmPrice       supply_trend 
          0.242720           0.261893           0.298273 
> print( round( coef( fit2sls2$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  48.184330    0.242720    0.261893    0.298273 
> 
> print( round( coef( fit2sls3 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         94.281641          -0.224712           0.298273          48.184330 
      supply_price   supply_farmPrice       supply_trend 
          0.242720           0.261893           0.298273 
> print( round( coef( fit2sls3, modified.regMat = TRUE ), digits = 6 ) )
       C1        C2        C3        C4        C5        C6 
94.281641 -0.224712  0.298273 48.184330  0.242720  0.261893 
> print( round( coef( fit2sls3$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
  94.281641   -0.224712    0.298273 
> 
> print( round( coef( fit2sls4s ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         95.705870          -0.243279           0.302710          46.563713 
      supply_price   supply_farmPrice       supply_trend 
          0.256721           0.263690           0.302710 
> print( round( coef( fit2sls4s$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  46.563713    0.256721    0.263690    0.302710 
> 
> print( round( coef( fit2sls5r ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         95.705870          -0.243279           0.302710          46.563713 
      supply_price   supply_farmPrice       supply_trend 
          0.256721           0.263690           0.302710 
> print( round( coef( fit2sls5r, modified.regMat = TRUE ), digits = 6 ) )
       C1        C2        C3        C4        C5        C6 
95.705870 -0.243279  0.302710 46.563713  0.256721  0.263690 
> print( round( coef( fit2sls5r$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  46.563713    0.256721    0.263690    0.302710 
> 
> 
> ## *************** coefficients with stats *********************
> print( round( coef( summary( fit2sls1s ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 94.633304   8.935163 10.591111 0.000000
demand_price       -0.243557   0.108840 -2.237751 0.038916
demand_income       0.313992   0.052955  5.929390 0.000016
supply_(Intercept) 49.532442  10.840378  4.569254 0.000315
supply_price        0.240076   0.090198  2.661665 0.017058
supply_farmPrice    0.255606   0.042647  5.993572 0.000019
supply_trend        0.252924   0.089946  2.811956 0.012528
> print( round( coef( summary( fit2sls1s$eq[[ 1 ]] ) ), digits = 6 ) )
             Estimate Std. Error   t value Pr(>|t|)
(Intercept) 94.633304   8.935163 10.591111 0.000000
price       -0.243557   0.108840 -2.237751 0.038916
income       0.313992   0.052955  5.929390 0.000016
> 
> print( round( coef( summary( fit2sls2, useDfSys = FALSE ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 94.281641   8.869261 10.630157 0.000000
demand_price       -0.224712   0.103432 -2.172551 0.044246
demand_income       0.298273   0.045400  6.569893 0.000005
supply_(Intercept) 48.184330  10.538406  4.572260 0.000313
supply_price        0.242720   0.089623  2.708237 0.015508
supply_farmPrice    0.261893   0.041059  6.378406 0.000009
supply_trend        0.298273   0.045400  6.569893 0.000006
> print( round( coef( summary( fit2sls2$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 48.184330  10.538406 4.572260 0.000313
price        0.242720   0.089623 2.708237 0.015508
farmPrice    0.261893   0.041059 6.378406 0.000009
trend        0.298273   0.045400 6.569893 0.000006
> 
> print( round( coef( summary( fit2sls3 ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 94.281641   8.177055 11.530024 0.000000
demand_price       -0.224712   0.095360 -2.356462 0.024352
demand_income       0.298273   0.041857  7.126050 0.000000
supply_(Intercept) 48.184330   9.715930  4.959312 0.000019
supply_price        0.242720   0.082628  2.937495 0.005903
supply_farmPrice    0.261893   0.037855  6.918353 0.000000
supply_trend        0.298273   0.041857  7.126050 0.000000
> print( round( coef( summary( fit2sls3 ), modified.regMat = TRUE ), digits = 6 ) )
    Estimate Std. Error   t value Pr(>|t|)
C1 94.281641   8.177055 11.530024 0.000000
C2 -0.224712   0.095360 -2.356462 0.024352
C3  0.298273   0.041857  7.126050 0.000000
C4 48.184330   9.715930  4.959312 0.000019
C5  0.242720   0.082628  2.937495 0.005903
C6  0.261893   0.037855  6.918353 0.000000
> print( round( coef( summary( fit2sls3$eq[[ 1 ]] ) ), digits = 6 ) )
             Estimate Std. Error   t value Pr(>|t|)
(Intercept) 94.281641   8.177055 11.530024 0.000000
price       -0.224712   0.095360 -2.356462 0.024352
income       0.298273   0.041857  7.126050 0.000000
> 
> print( round( coef( summary( fit2sls4s ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 95.705870   6.305629 15.177848 0.000000
demand_price       -0.243279   0.068419 -3.555705 0.001104
demand_income       0.302710   0.039386  7.685760 0.000000
supply_(Intercept) 46.563713   8.329568  5.590172 0.000003
supply_price        0.256721   0.068419  3.752178 0.000635
supply_farmPrice    0.263690   0.045524  5.792320 0.000001
supply_trend        0.302710   0.039386  7.685760 0.000000
> print( round( coef( summary( fit2sls4s$eq[[ 2 ]] ) ), digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 46.563713   8.329568 5.590172 0.000003
price        0.256721   0.068419 3.752178 0.000635
farmPrice    0.263690   0.045524 5.792320 0.000001
trend        0.302710   0.039386 7.685760 0.000000
> 
> print( round( coef( summary( fit2sls5r, useDfSys = FALSE ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 95.705870   6.004353 15.939415 0.000000
demand_price       -0.243279   0.062054 -3.920441 0.001102
demand_income       0.302710   0.038159  7.932884 0.000000
supply_(Intercept) 46.563713   7.384221  6.305840 0.000010
supply_price        0.256721   0.062054  4.137068 0.000774
supply_farmPrice    0.263690   0.037253  7.078394 0.000003
supply_trend        0.302710   0.038159  7.932884 0.000001
> print( round( coef( summary( fit2sls5r, useDfSys = FALSE ),
+    modified.regMat = TRUE ), digits = 6 ) )
    Estimate Std. Error   t value Pr(>|t|)
C1 95.705870   6.004353 15.939415       NA
C2 -0.243279   0.062054 -3.920441       NA
C3  0.302710   0.038159  7.932884       NA
C4 46.563713   7.384221  6.305840       NA
C5  0.256721   0.062054  4.137068       NA
C6  0.263690   0.037253  7.078394       NA
> print( round( coef( summary( fit2sls5r$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 46.563713   7.384221 6.305840 0.000010
price        0.256721   0.062054 4.137068 0.000774
farmPrice    0.263690   0.037253 7.078394 0.000003
trend        0.302710   0.038159 7.932884 0.000001
> 
> 
> ## *********** variance covariance matrix of the coefficients *******
> print( round( vcov( fit2sls1s ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          79.837136    -0.856939      0.062737
demand_price                -0.856939     0.011846     -0.003362
demand_income                0.062737    -0.003362      0.002804
supply_(Intercept)           0.000000     0.000000      0.000000
supply_price                 0.000000     0.000000      0.000000
supply_farmPrice             0.000000     0.000000      0.000000
supply_trend                 0.000000     0.000000      0.000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000     0.000000         0.000000
demand_price                 0.000000     0.000000         0.000000
demand_income                0.000000     0.000000         0.000000
supply_(Intercept)         117.513794    -0.892363        -0.263795
supply_price                -0.892363     0.008136         0.000763
supply_farmPrice            -0.263795     0.000763         0.001819
supply_trend                -0.240505     0.000472         0.001122
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.240505
supply_price           0.000472
supply_farmPrice       0.001122
supply_trend           0.008090
> print( round( vcov( fit2sls1s$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   79.837136 -0.856939  0.062737
price         -0.856939  0.011846 -0.003362
income         0.062737 -0.003362  0.002804
> 
> print( round( vcov( fit2sls1r ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          53.328728    -0.572408      0.041906
demand_price                -0.572408     0.007913     -0.002246
demand_income                0.041906    -0.002246      0.001873
supply_(Intercept)           0.000000     0.000000      0.000000
supply_price                 0.000000     0.000000      0.000000
supply_farmPrice             0.000000     0.000000      0.000000
supply_trend                 0.000000     0.000000      0.000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000     0.000000         0.000000
demand_price                 0.000000     0.000000         0.000000
demand_income                0.000000     0.000000         0.000000
supply_(Intercept)         115.402196    -0.876328        -0.259055
supply_price                -0.876328     0.007989         0.000749
supply_farmPrice            -0.259055     0.000749         0.001786
supply_trend                -0.236183     0.000463         0.001101
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.236183
supply_price           0.000463
supply_farmPrice       0.001101
supply_trend           0.007945
> print( round( vcov( fit2sls1r$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  115.402196 -0.876328 -0.259055 -0.236183
price         -0.876328  0.007989  0.000749  0.000463
farmPrice     -0.259055  0.000749  0.001786  0.001101
trend         -0.236183  0.000463  0.001101  0.007945
> 
> print( round( vcov( fit2sls2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          78.663794    -0.829021      0.046112
demand_price                -0.829021     0.010698     -0.002471
demand_income                0.046112    -0.002471      0.002061
supply_(Intercept)          -1.370813     0.073457     -0.061273
supply_price                 0.002689    -0.000144      0.000120
supply_farmPrice             0.006393    -0.000343      0.000286
supply_trend                 0.046112    -0.002471      0.002061
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -1.370813     0.002689         0.006393
demand_price                 0.073457    -0.000144        -0.000343
demand_income               -0.061273     0.000120         0.000286
supply_(Intercept)         111.058001    -0.872938        -0.236592
supply_price                -0.872938     0.008032         0.000707
supply_farmPrice            -0.236592     0.000707         0.001686
supply_trend                -0.061273     0.000120         0.000286
                   supply_trend
demand_(Intercept)     0.046112
demand_price          -0.002471
demand_income          0.002061
supply_(Intercept)    -0.061273
supply_price           0.000120
supply_farmPrice       0.000286
supply_trend           0.002061
> print( round( vcov( fit2sls2$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   78.663794 -0.829021  0.046112
price         -0.829021  0.010698 -0.002471
income         0.046112 -0.002471  0.002061
> 
> print( round( vcov( fit2sls3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          66.864225    -0.704668      0.039196
demand_price                -0.704668     0.009094     -0.002100
demand_income                0.039196    -0.002100      0.001752
supply_(Intercept)          -1.165191     0.062438     -0.052082
supply_price                 0.002285    -0.000122      0.000102
supply_farmPrice             0.005434    -0.000291      0.000243
supply_trend                 0.039196    -0.002100      0.001752
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -1.165191     0.002285         0.005434
demand_price                 0.062438    -0.000122        -0.000291
demand_income               -0.052082     0.000102         0.000243
supply_(Intercept)          94.399301    -0.741997        -0.201104
supply_price                -0.741997     0.006827         0.000601
supply_farmPrice            -0.201104     0.000601         0.001433
supply_trend                -0.052082     0.000102         0.000243
                   supply_trend
demand_(Intercept)     0.039196
demand_price          -0.002100
demand_income          0.001752
supply_(Intercept)    -0.052082
supply_price           0.000102
supply_farmPrice       0.000243
supply_trend           0.001752
> print( round( vcov( fit2sls3, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3        C4        C5        C6
C1 66.864225 -0.704668  0.039196 -1.165191  0.002285  0.005434
C2 -0.704668  0.009094 -0.002100  0.062438 -0.000122 -0.000291
C3  0.039196 -0.002100  0.001752 -0.052082  0.000102  0.000243
C4 -1.165191  0.062438 -0.052082 94.399301 -0.741997 -0.201104
C5  0.002285 -0.000122  0.000102 -0.741997  0.006827  0.000601
C6  0.005434 -0.000291  0.000243 -0.201104  0.000601  0.001433
> print( round( vcov( fit2sls3$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)   94.399301 -0.741997 -0.201104 -0.052082
price         -0.741997  0.006827  0.000601  0.000102
farmPrice     -0.201104  0.000601  0.001433  0.000243
trend         -0.052082  0.000102  0.000243  0.001752
> 
> print( round( vcov( fit2sls4s ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          39.760952    -0.358128     -0.038417
demand_price                -0.358128     0.004681     -0.001129
demand_income               -0.038417    -0.001129      0.001551
supply_(Intercept)          39.694908    -0.480685      0.085946
supply_price                -0.358128     0.004681     -0.001129
supply_farmPrice            -0.035932     0.000252      0.000110
supply_trend                -0.038417    -0.001129      0.001551
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          39.694908    -0.358128        -0.035932
demand_price                -0.480685     0.004681         0.000252
demand_income                0.085946    -0.001129         0.000110
supply_(Intercept)          69.381697    -0.480685        -0.226588
supply_price                -0.480685     0.004681         0.000252
supply_farmPrice            -0.226588     0.000252         0.002072
supply_trend                 0.085946    -0.001129         0.000110
                   supply_trend
demand_(Intercept)    -0.038417
demand_price          -0.001129
demand_income          0.001551
supply_(Intercept)     0.085946
supply_price          -0.001129
supply_farmPrice       0.000110
supply_trend           0.001551
> print( round( vcov( fit2sls4s$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   39.760952 -0.358128 -0.038417
price         -0.358128  0.004681 -0.001129
income        -0.038417 -0.001129  0.001551
> 
> print( round( vcov( fit2sls5r ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          36.052251    -0.302514     -0.057288
demand_price                -0.302514     0.003851     -0.000847
demand_income               -0.057288    -0.000847      0.001456
supply_(Intercept)          34.112051    -0.397307      0.057684
supply_price                -0.302514     0.003851     -0.000847
supply_farmPrice            -0.033671     0.000218      0.000122
supply_trend                -0.057288    -0.000847      0.001456
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          34.112051    -0.302514        -0.033671
demand_price                -0.397307     0.003851         0.000218
demand_income                0.057684    -0.000847         0.000122
supply_(Intercept)          54.526718    -0.397307        -0.157170
supply_price                -0.397307     0.003851         0.000218
supply_farmPrice            -0.157170     0.000218         0.001388
supply_trend                 0.057684    -0.000847         0.000122
                   supply_trend
demand_(Intercept)    -0.057288
demand_price          -0.000847
demand_income          0.001456
supply_(Intercept)     0.057684
supply_price          -0.000847
supply_farmPrice       0.000122
supply_trend           0.001456
> print( round( vcov( fit2sls5r, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3        C4        C5        C6
C1 36.052251 -0.302514 -0.057288 34.112051 -0.302514 -0.033671
C2 -0.302514  0.003851 -0.000847 -0.397307  0.003851  0.000218
C3 -0.057288 -0.000847  0.001456  0.057684 -0.000847  0.000122
C4 34.112051 -0.397307  0.057684 54.526718 -0.397307 -0.157170
C5 -0.302514  0.003851 -0.000847 -0.397307  0.003851  0.000218
C6 -0.033671  0.000218  0.000122 -0.157170  0.000218  0.001388
> print( round( vcov( fit2sls5r$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)   54.526718 -0.397307 -0.157170  0.057684
price         -0.397307  0.003851  0.000218 -0.000847
farmPrice     -0.157170  0.000218  0.001388  0.000122
trend          0.057684 -0.000847  0.000122  0.001456
> 
> print( round( vcov( fit2slsd1 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)         124.178595    -1.517672      0.285189
demand_price                -1.517672     0.020980     -0.005954
demand_income                0.285189    -0.005954      0.003182
supply_(Intercept)           0.000000     0.000000      0.000000
supply_price                 0.000000     0.000000      0.000000
supply_farmPrice             0.000000     0.000000      0.000000
supply_trend                 0.000000     0.000000      0.000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000     0.000000         0.000000
demand_price                 0.000000     0.000000         0.000000
demand_income                0.000000     0.000000         0.000000
supply_(Intercept)         144.252745    -1.095410        -0.323818
supply_price                -1.095410     0.009987         0.000936
supply_farmPrice            -0.323818     0.000936         0.002233
supply_trend                -0.295229     0.000579         0.001377
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.295229
supply_price           0.000579
supply_farmPrice       0.001377
supply_trend           0.009931
> print( round( vcov( fit2slsd1$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)  124.178595 -1.517672  0.285189
price         -1.517672  0.020980 -0.005954
income         0.285189 -0.005954  0.003182
> 
> print( round( vcov( fit2slsd2rs ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          95.901717    -1.129212      0.176368
demand_price                -1.129212     0.014881     -0.003682
demand_income                0.176368    -0.003682      0.001968
supply_(Intercept)          -5.243009     0.109460     -0.058492
supply_price                 0.010284    -0.000215      0.000115
supply_farmPrice             0.024451    -0.000510      0.000273
supply_trend                 0.176368    -0.003682      0.001968
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -5.243009     0.010284         0.024451
demand_price                 0.109460    -0.000215        -0.000510
demand_income               -0.058492     0.000115         0.000273
supply_(Intercept)         114.255530    -0.898881        -0.243056
supply_price                -0.898881     0.008273         0.000727
supply_farmPrice            -0.243056     0.000727         0.001733
supply_trend                -0.058492     0.000115         0.000273
                   supply_trend
demand_(Intercept)     0.176368
demand_price          -0.003682
demand_income          0.001968
supply_(Intercept)    -0.058492
supply_price           0.000115
supply_farmPrice       0.000273
supply_trend           0.001968
> print( round( vcov( fit2slsd2rs$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  114.255530 -0.898881 -0.243056 -0.058492
price         -0.898881  0.008273  0.000727  0.000115
farmPrice     -0.243056  0.000727  0.001733  0.000273
trend         -0.058492  0.000115  0.000273  0.001968
> 
> print( round( vcov( fit2slsd3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)         141.442455    -1.640068      0.234151
demand_price                -1.640068     0.021165     -0.004888
demand_income                0.234151    -0.004888      0.002612
supply_(Intercept)          -6.960747     0.145321     -0.077656
supply_price                 0.013653    -0.000285      0.000152
supply_farmPrice             0.032462    -0.000678      0.000362
supply_trend                 0.234151    -0.004888      0.002612
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -6.960747     0.013653         0.032462
demand_price                 0.145321    -0.000285        -0.000678
demand_income               -0.077656     0.000152         0.000362
supply_(Intercept)         111.012272    -0.869653        -0.237751
supply_price                -0.869653     0.007995         0.000708
supply_farmPrice            -0.237751     0.000708         0.001688
supply_trend                -0.077656     0.000152         0.000362
                   supply_trend
demand_(Intercept)     0.234151
demand_price          -0.004888
demand_income          0.002612
supply_(Intercept)    -0.077656
supply_price           0.000152
supply_farmPrice       0.000362
supply_trend           0.002612
> print( round( vcov( fit2slsd3, modified.regMat = TRUE ), digits = 6 ) )
           C1        C2        C3         C4        C5        C6
C1 141.442455 -1.640068  0.234151  -6.960747  0.013653  0.032462
C2  -1.640068  0.021165 -0.004888   0.145321 -0.000285 -0.000678
C3   0.234151 -0.004888  0.002612  -0.077656  0.000152  0.000362
C4  -6.960747  0.145321 -0.077656 111.012272 -0.869653 -0.237751
C5   0.013653 -0.000285  0.000152  -0.869653  0.007995  0.000708
C6   0.032462 -0.000678  0.000362  -0.237751  0.000708  0.001688
> print( round( vcov( fit2slsd3$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)  141.442455 -1.640068  0.234151
price         -1.640068  0.021165 -0.004888
income         0.234151 -0.004888  0.002612
> 
> 
> ## *********** confidence intervals of coefficients *************
> print( confint( fit2sls1 ) )
                    2.5 %  97.5 %
demand_(Intercept) 77.922 111.345
demand_price       -0.447  -0.040
demand_income       0.215   0.413
supply_(Intercept) 24.071  74.994
supply_price        0.028   0.452
supply_farmPrice    0.155   0.356
supply_trend        0.042   0.464
> print( confint( fit2sls1$eq[[ 1 ]], level = 0.9 ) )
               5 %    95 %
(Intercept) 80.854 108.412
price       -0.411  -0.076
income       0.232   0.396
> 
> print( confint( fit2sls2s, level = 0.9 ) )
                      5 %    95 %
demand_(Intercept) 78.005 110.558
demand_price       -0.417  -0.032
demand_income       0.211   0.386
supply_(Intercept) 24.204  72.165
supply_price        0.038   0.447
supply_farmPrice    0.169   0.355
supply_trend        0.211   0.386
> print( confint( fit2sls2s$eq[[ 2 ]], level = 0.99 ) )
             0.5 % 99.5 %
(Intercept) 15.989 80.380
price       -0.032  0.517
farmPrice    0.137  0.387
trend        0.181  0.416
> 
> print( confint( fit2sls3, level = 0.99, useDfSys = TRUE ) )
                    0.5 %  99.5 %
demand_(Intercept) 77.664 110.899
demand_price       -0.419  -0.031
demand_income       0.213   0.383
supply_(Intercept) 28.439  67.929
supply_price        0.075   0.411
supply_farmPrice    0.185   0.339
supply_trend        0.213   0.383
> print( confint( fit2sls3$eq[[ 1 ]], level = 0.5, useDfSys = TRUE ) )
              25 %   75 %
(Intercept) 88.707 99.857
price       -0.290 -0.160
income       0.270  0.327
> 
> print( confint( fit2sls4r, level = 0.5 ) )
                     25 %    75 %
demand_(Intercept) 83.516 107.895
demand_price       -0.369  -0.117
demand_income       0.225   0.380
supply_(Intercept) 31.573  61.554
supply_price        0.131   0.383
supply_farmPrice    0.188   0.339
supply_trend        0.225   0.380
> print( confint( fit2sls4r$eq[[ 2 ]], level = 0.25 ) )
            37.5 % 62.5 %
(Intercept) 44.192 48.935
price        0.237  0.277
farmPrice    0.252  0.276
trend        0.290  0.315
> 
> print( confint( fit2sls5rs, level = 0.25 ) )
                   37.5 %  62.5 %
demand_(Intercept) 84.017 107.395
demand_price       -0.369  -0.117
demand_income       0.230   0.376
supply_(Intercept) 31.265  61.863
supply_price        0.131   0.383
supply_farmPrice    0.181   0.346
supply_trend        0.230   0.376
> print( confint( fit2sls5rs$eq[[ 1 ]], level = 0.975 ) )
             1.3 %  98.8 %
(Intercept) 82.221 109.191
price       -0.389  -0.098
income       0.218   0.387
> 
> print( confint( fit2slsd1, level = 0.975, useDfSys = TRUE ) )
                    1.3 %  98.8 %
demand_(Intercept) 84.118 129.461
demand_price       -0.706  -0.117
demand_income       0.247   0.476
supply_(Intercept) 25.097  73.968
supply_price        0.037   0.443
supply_farmPrice    0.159   0.352
supply_trend        0.050   0.456
> print( confint( fit2slsd1$eq[[ 2 ]], level = 0.999, useDfSys = TRUE ) )
             0.1 %  100 %
(Intercept)  6.163 92.901
price       -0.121  0.601
farmPrice    0.085  0.426
trend       -0.107  0.613
> 
> print( confint( fit2slsd2r, level = 0.999 ) )
                    0.1 %   100 %
demand_(Intercept) 81.311 125.877
demand_price       -0.617  -0.072
demand_income       0.230   0.422
supply_(Intercept) 27.618  67.100
supply_price        0.077   0.412
supply_farmPrice    0.189   0.343
supply_trend        0.230   0.422
> print( confint( fit2slsd2r$eq[[ 1 ]] ) )
             2.5 %  97.5 %
(Intercept) 81.311 125.877
price       -0.617  -0.072
income       0.230   0.422
> 
> 
> ## *********** fitted values *************
> print( fitted( fit2sls1, se.fit = TRUE, interval = "prediction" ) )
      demand    supply
1   97.64186  98.91985
2   99.88472 100.40008
3   99.80404 100.45398
4  100.01418 100.70842
5  102.10090 102.64584
6  101.96632 102.58350
7  102.42197 102.55837
8  102.96591 104.77240
9  101.47486 102.74745
10 100.32800  99.67725
11  95.54263  95.36613
12  94.71564  93.82181
13  96.13309  95.64862
14  99.02829  97.58861
15 103.83900 102.31054
16 103.65546 104.05353
17 103.83496 102.84266
18 102.08027 102.70033
19 103.63146 102.55617
20 106.90043 105.60846
> print( fitted( fit2sls1$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.64186  99.88472  99.80404 100.01418 102.10090 101.96632 102.42197 102.96591 
        9        10        11        12        13        14        15        16 
101.47486 100.32800  95.54263  94.71564  96.13309  99.02829 103.83900 103.65546 
       17        18        19        20 
103.83496 102.08027 103.63146 106.90043 
> 
> print( fitted( fit2sls2s ) )
      demand    supply
1   97.80690  98.49848
2   99.96370 100.04140
3   99.88154 100.13846
4  100.08828 100.43479
5  102.02727 102.48021
6  101.90910 102.45072
7  102.35265 102.45885
8  102.89395 104.75440
9  101.42222 102.74589
10 100.29807  99.65632
11  95.76461  95.27223
12  95.01705  93.71042
13  96.39086  95.60790
14  99.11350  97.64827
15 103.65919 102.53733
16 103.50700 104.35146
17 103.59800 103.18891
18 102.04768 103.02508
19 103.53288 102.91078
20 106.68955 106.05210
> print( fitted( fit2sls2s$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.49848 100.04140 100.13846 100.43479 102.48021 102.45072 102.45885 104.75440 
        9        10        11        12        13        14        15        16 
102.74589  99.65632  95.27223  93.71042  95.60790  97.64827 102.53733 104.35146 
       17        18        19        20 
103.18891 103.02508 102.91078 106.05210 
> 
> print( fitted( fit2sls3 ) )
      demand    supply
1   97.80690  98.49848
2   99.96370 100.04140
3   99.88154 100.13846
4  100.08828 100.43479
5  102.02727 102.48021
6  101.90910 102.45072
7  102.35265 102.45885
8  102.89395 104.75440
9  101.42222 102.74589
10 100.29807  99.65632
11  95.76461  95.27223
12  95.01705  93.71042
13  96.39086  95.60790
14  99.11350  97.64827
15 103.65919 102.53733
16 103.50700 104.35146
17 103.59800 103.18891
18 102.04768 103.02508
19 103.53288 102.91078
20 106.68955 106.05210
> print( fitted( fit2sls3$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.80690  99.96370  99.88154 100.08828 102.02727 101.90910 102.35265 102.89395 
        9        10        11        12        13        14        15        16 
101.42222 100.29807  95.76461  95.01705  96.39086  99.11350 103.65919 103.50700 
       17        18        19        20 
103.59800 102.04768 103.53288 106.68955 
> 
> print( fitted( fit2sls4r ) )
      demand    supply
1   97.75629  98.46306
2   99.88517 100.06756
3   99.81441 100.15745
4  100.00792 100.47142
5  102.07479 102.45302
6  101.93271 102.44367
7  102.35835 102.47410
8  102.85142 104.83341
9  101.48441 102.71091
10 100.42297  99.53816
11  95.79380  95.14929
12  94.94810  93.64966
13  96.27982  95.61321
14  99.10618  97.61876
15 103.77486 102.49889
16 103.56968 104.36896
17 103.84401 103.05337
18 102.00393 103.10691
19 103.48454 103.01584
20 106.57063 106.27635
> print( fitted( fit2sls4r$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.46306 100.06756 100.15745 100.47142 102.45302 102.44367 102.47410 104.83341 
        9        10        11        12        13        14        15        16 
102.71091  99.53816  95.14929  93.64966  95.61321  97.61876 102.49889 104.36896 
       17        18        19        20 
103.05337 103.10691 103.01584 106.27635 
> 
> print( fitted( fit2sls5rs ) )
      demand    supply
1   97.75629  98.46306
2   99.88517 100.06756
3   99.81441 100.15745
4  100.00792 100.47142
5  102.07479 102.45302
6  101.93271 102.44367
7  102.35835 102.47410
8  102.85142 104.83341
9  101.48441 102.71091
10 100.42297  99.53816
11  95.79380  95.14929
12  94.94810  93.64966
13  96.27982  95.61321
14  99.10618  97.61876
15 103.77486 102.49889
16 103.56968 104.36896
17 103.84401 103.05337
18 102.00393 103.10691
19 103.48454 103.01584
20 106.57063 106.27635
> print( fitted( fit2sls5rs$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.75629  99.88517  99.81441 100.00792 102.07479 101.93271 102.35835 102.85142 
        9        10        11        12        13        14        15        16 
101.48441 100.42297  95.79380  94.94810  96.27982  99.10618 103.77486 103.56968 
       17        18        19        20 
103.84401 102.00393 103.48454 106.57063 
> 
> print( fitted( fit2slsd1 ) )
      demand    supply
1   97.10746  98.91985
2   99.17449 100.40008
3   99.19019 100.45398
4   99.29189 100.70842
5  102.54804 102.64584
6  102.20234 102.58350
7  102.51620 102.55837
8  102.65825 104.77240
9  102.03069 102.74745
10 101.39347  99.67725
11  95.63793  95.36613
12  93.93626  93.82181
13  95.03077  95.64862
14  98.90981  97.58861
15 104.92781 102.31054
16 104.27973 104.05353
17 106.05294 102.84266
18 101.73600 102.70033
19 103.29306 102.55617
20 106.04668 105.60846
> print( fitted( fit2slsd1$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.91985 100.40008 100.45398 100.70842 102.64584 102.58350 102.55837 104.77240 
        9        10        11        12        13        14        15        16 
102.74745  99.67725  95.36613  93.82181  95.64862  97.58861 102.31054 104.05353 
       17        18        19        20 
102.84266 102.70033 102.55617 105.60846 
> 
> print( fitted( fit2slsd2r ) )
      demand    supply
1   97.48907  98.24059
2   99.45539  99.82187
3   99.44787  99.94534
4   99.56755 100.26732
5  102.33264 102.37883
6  102.05906 102.36944
7  102.38408 102.39793
8  102.60879 104.74339
9  101.82564 102.74494
10 101.11480  99.64351
11  95.97517  95.21476
12  94.59068  93.64225
13  95.68468  95.58298
14  99.07279  97.68479
15 104.40248 102.67614
16 103.90540 104.53380
17 105.19130 103.40082
18 101.75792 103.22384
19 103.20732 103.12783
20 105.89137 106.32363
> print( fitted( fit2slsd2r$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.48907  99.45539  99.44787  99.56755 102.33264 102.05906 102.38408 102.60879 
        9        10        11        12        13        14        15        16 
101.82564 101.11480  95.97517  94.59068  95.68468  99.07279 104.40248 103.90540 
       17        18        19        20 
105.19130 101.75792 103.20732 105.89137 
> 
> 
> ## *********** predicted values *************
> predictData <- Kmenta
> predictData$consump <- NULL
> predictData$price <- Kmenta$price * 0.9
> predictData$income <- Kmenta$income * 1.1
> 
> print( predict( fit2sls1, se.fit = TRUE, interval = "prediction" ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     97.64186     0.6609226   93.26521  102.01852    98.91985     1.0792946
2     99.88472     0.5996838   95.54751  104.22194   100.40008     1.0644681
3     99.80404     0.5644068   95.48795  104.12013   100.45398     0.9622159
4    100.01418     0.6049375   95.67371  104.35464   100.70842     0.9379245
5    102.10090     0.5164204   97.81164  106.39017   102.64584     0.9144790
6    101.96632     0.4737788   97.69902  106.23362   102.58350     0.8078823
7    102.42197     0.4928575   98.14507  106.69888   102.55837     0.7357100
8    102.96591     0.6145952   98.61941  107.31240   104.77240     0.9944498
9    101.47486     0.5444659   97.17018  105.77953   102.74745     0.8080159
10   100.32800     0.8221799   95.83137  104.82463    99.67725     1.0226082
11    95.54263     0.9633960   90.92288  100.16238    95.36613     1.2276149
12    94.71564     1.0063163   90.05534   99.37594    93.82181     1.4278125
13    96.13309     0.9149729   91.55737  100.70881    95.64862     1.2716031
14    99.02829     0.5175667   94.73841  103.31817    97.58861     0.9171871
15   103.83900     0.7932021   99.36560  108.31240   102.31054     0.8986032
16   103.65546     0.6363997   99.29501  108.01590   104.05353     0.9358447
17   103.83496     1.3479513   98.80519  108.86473   102.84266     1.6650589
18   102.08027     0.5485578   97.77328  106.38726   102.70033     0.9883293
19   103.63146     0.6950313   99.23136  108.03157   102.55617     1.1294989
20   106.90043     1.3055643  101.92068  111.88018   105.60846     1.7325747
   supply.lwr supply.upr
1    93.22979  104.60991
2    94.72258  106.07757
3    94.85910  106.04886
4    95.13211  106.28473
5    97.08706  108.20463
6    97.09944  108.06757
7    97.12015  107.99660
8    99.15225  110.39255
9    97.26330  108.23160
10   94.03444  105.32007
11   89.54251  101.18974
12   87.79657   99.84705
13   89.78274  101.51450
14   92.02782  103.14940
15   96.76340  107.85767
16   98.47879  109.62827
17   96.54972  109.13560
18   97.08503  108.31563
19   96.82248  108.28985
20   99.23413  111.98278
> print( predict( fit2sls1$eq[[ 1 ]], se.fit = TRUE, interval = "prediction" ) )
         fit    se.fit       lwr       upr
1   97.64186 0.6609226  93.26521 102.01852
2   99.88472 0.5996838  95.54751 104.22194
3   99.80404 0.5644068  95.48795 104.12013
4  100.01418 0.6049375  95.67371 104.35464
5  102.10090 0.5164204  97.81164 106.39017
6  101.96632 0.4737788  97.69902 106.23362
7  102.42197 0.4928575  98.14507 106.69888
8  102.96591 0.6145952  98.61941 107.31240
9  101.47486 0.5444659  97.17018 105.77953
10 100.32800 0.8221799  95.83137 104.82463
11  95.54263 0.9633960  90.92288 100.16238
12  94.71564 1.0063163  90.05534  99.37594
13  96.13309 0.9149729  91.55737 100.70881
14  99.02829 0.5175667  94.73841 103.31817
15 103.83900 0.7932021  99.36560 108.31240
16 103.65546 0.6363997  99.29501 108.01590
17 103.83496 1.3479513  98.80519 108.86473
18 102.08027 0.5485578  97.77328 106.38726
19 103.63146 0.6950313  99.23136 108.03157
20 106.90043 1.3055643 101.92068 111.88018
> 
> print( predict( fit2sls2s, se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1    102.66819       2.225974   99.08699   106.2494    96.06344       2.749365
2    105.21778       2.225608  101.63953   108.7960    97.51070       2.635864
3    105.09015       2.238054  101.41263   108.7677    97.62788       2.648594
4    105.36570       2.227634  101.77114   108.9603    97.89822       2.621390
5    107.20624       2.516389  101.66717   112.7453   100.10153       2.830510
6    107.14164       2.463977  101.91700   112.3663   100.03672       2.765308
7    107.70191       2.451934  102.55124   112.8526   100.00577       2.703919
8    108.46348       2.410443  103.57332   113.3536   102.21160       2.646537
9    106.47080       2.525769  100.87665   112.0649   100.40496       2.869350
10   104.99972       2.656638   98.66824   111.3312    97.44204       3.097818
11   100.09637       2.421625   95.13510   105.0577    93.01287       3.173138
12    99.53095       2.222666   95.97649   103.0854    91.31232       3.142170
13   101.22671       2.131887   98.48646   103.9670    93.11012       2.950080
14   104.03502       2.321225   99.74078   108.3293    95.25127       2.910730
15   108.87182       2.739001  102.10061   115.6430   100.22860       2.915878
16   108.85416       2.616682  102.74221   114.9661   101.96185       2.793555
17   108.41707       3.087667   99.92067   116.9135   101.08943       3.371806
18   107.49902       2.361150  102.93127   112.0668   100.50040       2.648902
19   109.21152       2.444416  104.10739   114.3156   100.34356       2.635438
20   113.03086       2.665962  106.64877   119.4130   103.29747       2.579621
   supply.lwr supply.upr
1    91.76618  100.36071
2    94.26388  100.75752
3    94.24942  101.00635
4    94.80705  100.98939
5    95.16828  105.03477
6    95.60880  104.46464
7    96.10021  103.91133
8    98.85410  105.56910
9    95.18891  105.62100
10   90.74259  104.14148
11   85.87100  100.15475
12   84.35022   98.27442
13   87.33966   98.88058
14   89.74599  100.75655
15   94.68811  105.76909
16   97.30973  106.61398
17   92.85143  109.32743
18   97.11881  103.88200
19   97.10122  103.58590
20  100.70156  105.89338
> print( predict( fit2sls2s$eq[[ 2 ]], se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
         fit  se.pred       lwr       upr
1   96.06344 2.749365  91.76618 100.36071
2   97.51070 2.635864  94.26388 100.75752
3   97.62788 2.648594  94.24942 101.00635
4   97.89822 2.621390  94.80705 100.98939
5  100.10153 2.830510  95.16828 105.03477
6  100.03672 2.765308  95.60880 104.46464
7  100.00577 2.703919  96.10021 103.91133
8  102.21160 2.646537  98.85410 105.56910
9  100.40496 2.869350  95.18891 105.62100
10  97.44204 3.097818  90.74259 104.14148
11  93.01287 3.173138  85.87100 100.15475
12  91.31232 3.142170  84.35022  98.27442
13  93.11012 2.950080  87.33966  98.88058
14  95.25127 2.910730  89.74599 100.75655
15 100.22860 2.915878  94.68811 105.76909
16 101.96185 2.793555  97.30973 106.61398
17 101.08943 3.371806  92.85143 109.32743
18 100.50040 2.648902  97.11881 103.88200
19 100.34356 2.635438  97.10122 103.58590
20 103.29747 2.579621 100.70156 105.89338
> 
> print( predict( fit2sls3, se.pred = TRUE, interval = "prediction",
+    level = 0.975, useDfSys = TRUE ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1     97.80690       2.089613   92.90664   102.7072    98.49848       2.548858
2     99.96370       2.082174   95.08088   104.8465   100.04140       2.568088
3     99.88154       2.071727   95.02322   104.7399   100.13846       2.554321
4    100.08828       2.084240   95.20062   104.9759   100.43479       2.559997
5    102.02727       2.058631   97.19966   106.8549   102.48021       2.576899
6    101.90910       2.048911   97.10429   106.7139   102.45072       2.557083
7    102.35265       2.052807   97.53871   107.1666   102.45885       2.545842
8    102.89395       2.087447   97.99877   107.7891   104.75440       2.609918
9    101.42222       2.067929   96.57281   106.2716   102.74589       2.565570
10   100.29807       2.165009   95.22100   105.3751    99.65632       2.617311
11    95.76461       2.199615   90.60639   100.9228    95.27223       2.673181
12    95.01705       2.196964   89.86504   100.1691    93.71042       2.738871
13    96.39086       2.167658   91.30758   101.4741    95.60790       2.690508
14    99.11350       2.057841   94.28775   103.9393    97.64827       2.588917
15   103.65919       2.135389   98.65158   108.6668   102.53733       2.561581
16   103.50700       2.084513   98.61870   108.3953   104.35146       2.552799
17   103.59800       2.402706   97.96352   109.2325   103.18891       2.782114
18   102.04768       2.070101   97.19318   106.9022   103.02508       2.558309
19   103.53288       2.111647   98.58095   108.4848   102.91078       2.588432
20   106.68955       2.383546  101.10001   112.2791   106.05210       2.776381
   supply.lwr supply.upr
1    92.52127   104.4757
2    94.01909   106.0637
3    94.14843   106.1285
4    94.43145   106.4381
5    96.43723   108.5232
6    96.45421   108.4472
7    96.48871   108.4290
8    98.63400   110.8748
9    96.72949   108.7623
10   93.51858   105.7941
11   89.00347   101.5410
12   87.28762   100.1332
13   89.29851   101.9173
14   91.57712   103.7194
15   96.53028   108.5444
16   98.36500   110.3379
17   96.66469   109.7131
18   97.02570   109.0245
19   96.84077   108.9808
20   99.54133   112.5629
> print( predict( fit2sls3$eq[[ 1 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.975, useDfSys = TRUE ) )
         fit  se.pred       lwr      upr
1   97.80690 2.089613  92.90664 102.7072
2   99.96370 2.082174  95.08088 104.8465
3   99.88154 2.071727  95.02322 104.7399
4  100.08828 2.084240  95.20062 104.9759
5  102.02727 2.058631  97.19966 106.8549
6  101.90910 2.048911  97.10429 106.7139
7  102.35265 2.052807  97.53871 107.1666
8  102.89395 2.087447  97.99877 107.7891
9  101.42222 2.067929  96.57281 106.2716
10 100.29807 2.165009  95.22100 105.3751
11  95.76461 2.199615  90.60639 100.9228
12  95.01705 2.196964  89.86504 100.1691
13  96.39086 2.167658  91.30758 101.4741
14  99.11350 2.057841  94.28775 103.9393
15 103.65919 2.135389  98.65158 108.6668
16 103.50700 2.084513  98.61870 108.3953
17 103.59800 2.402706  97.96352 109.2325
18 102.04768 2.070101  97.19318 106.9022
19 103.53288 2.111647  98.58095 108.4848
20 106.68955 2.383546 101.10001 112.2791
> 
> print( predict( fit2sls4r, se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     97.75629     0.6022526   97.56287   97.94971    98.46306     0.5863893
2     99.88517     0.5258244   99.71630  100.05404   100.06756     0.6717522
3     99.81441     0.5082769   99.65117   99.97765   100.15745     0.6208697
4    100.00792     0.5297904   99.83778  100.17807   100.47142     0.6321361
5    102.07479     0.4883252  101.91796  102.23162   102.45302     0.7041916
6    101.93271     0.4737247  101.78057  102.08485   102.44367     0.6359186
7    102.35835     0.4984636  102.19827  102.51844   102.47410     0.5865717
8    102.85142     0.6042731  102.65735  103.04549   104.83341     0.7638958
9    101.48441     0.5023324  101.32308  101.64574   102.71091     0.6557812
10   100.42297     0.6964977  100.19929  100.64666    99.53816     0.7101293
11    95.79380     0.9284547   95.49562   96.09199    95.14929     0.8849209
12    94.94810     0.8892157   94.66252   95.23368    93.64966     1.1464076
13    96.27982     0.7393540   96.04237   96.51727    95.61321     1.0520961
14    99.10618     0.5185525   98.93964   99.27272    97.61876     0.7457424
15   103.77486     0.6255546  103.57396  103.97576   102.49889     0.6369121
16   103.56968     0.5660946  103.38787  103.75148   104.36896     0.6152392
17   103.84401     0.9420280  103.54147  104.14655   103.05337     1.1529596
18   102.00393     0.5396427  101.83062  102.17724   103.10691     0.5559605
19   103.48454     0.6774846  103.26696  103.70212   103.01584     0.6310429
20   106.57063     1.2264979  106.17673  106.96453   106.27635     0.8997136
   supply.lwr supply.upr
1    98.27473   98.65138
2    99.85183  100.28330
3    99.95805  100.35685
4   100.26841  100.67444
5   102.22686  102.67918
6   102.23943  102.64790
7   102.28572  102.66249
8   104.58808  105.07874
9   102.50030  102.92152
10   99.31010   99.76623
11   94.86509   95.43349
12   93.28148   94.01784
13   95.27532   95.95110
14   97.37926   97.85826
15  102.29434  102.70344
16  104.17137  104.56654
17  102.68309  103.42365
18  102.92836  103.28546
19  102.81318  103.21851
20  105.98740  106.56530
> print( predict( fit2sls4r$eq[[ 2 ]], se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
         fit    se.fit       lwr       upr
1   98.46306 0.5863893  98.27473  98.65138
2  100.06756 0.6717522  99.85183 100.28330
3  100.15745 0.6208697  99.95805 100.35685
4  100.47142 0.6321361 100.26841 100.67444
5  102.45302 0.7041916 102.22686 102.67918
6  102.44367 0.6359186 102.23943 102.64790
7  102.47410 0.5865717 102.28572 102.66249
8  104.83341 0.7638958 104.58808 105.07874
9  102.71091 0.6557812 102.50030 102.92152
10  99.53816 0.7101293  99.31010  99.76623
11  95.14929 0.8849209  94.86509  95.43349
12  93.64966 1.1464076  93.28148  94.01784
13  95.61321 1.0520961  95.27532  95.95110
14  97.61876 0.7457424  97.37926  97.85826
15 102.49889 0.6369121 102.29434 102.70344
16 104.36896 0.6152392 104.17137 104.56654
17 103.05337 1.1529596 102.68309 103.42365
18 103.10691 0.5559605 102.92836 103.28546
19 103.01584 0.6310429 102.81318 103.21851
20 106.27635 0.8997136 105.98740 106.56530
> 
> print( predict( fit2sls5rs, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1    102.84262     0.7127555       2.096461  101.41375   104.2715    95.88755
2    105.37614     0.7416395       2.106456  103.94046   106.8118    97.39089
3    105.25797     0.7514362       2.109925  103.81992   106.6960    97.50206
4    105.52295     0.7486930       2.108950  104.08556   106.9603    97.78853
5    107.47999     1.0797363       2.247879  105.94792   109.0121    99.93712
6    107.39450     1.0313100       2.225023  105.87801   108.9110    99.89042
7    107.94104     1.0396472       2.228900  106.42190   109.4602    99.87952
8    108.66329     1.0438859       2.230880  107.14281   110.1838   102.14392
9    106.75492     1.0728555       2.244582  105.22509   108.2847   100.23494
10   105.33345     1.1884358       2.302066  103.76444   106.9025    97.19615
11   100.33172     1.0129194       2.216559   98.82099   101.8424    92.75960
12    99.67956     0.7703657       2.116741   98.23687   101.1223    91.11323
13   101.34428     0.5844928       2.056395   99.94272   102.7458    92.97135
14   104.25126     0.8328255       2.140263  102.79253   105.7100    95.08348
15   109.20985     1.3099668       2.367095  107.59652   110.8232   100.05698
16   109.14626     1.2135199       2.315115  107.56836   110.7242   101.84151
17   108.86645     1.5824283       2.528084  107.14340   110.5895   100.83278
18   107.69471     0.9575056       2.191790  106.20087   109.1886   100.43660
19   109.40868     1.1107097       2.262919  107.86635   110.9510   100.30053
20   113.17905     1.5292558       2.495146  111.47845   114.8796   103.36282
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      0.7464495       2.608707   94.10955   97.66555
2      0.6278670       2.577282   95.63430   99.14747
3      0.6418427       2.580722   95.74313   99.26098
4      0.6072546       2.572338   96.03532   99.54174
5      0.9784057       2.684295   98.10761  101.76664
6      0.8814916       2.650508   98.08393  101.69691
7      0.7861216       2.620334   98.09360  101.66545
8      0.7802274       2.618572  100.35920  103.92864
9      1.0307962       2.703832   98.39210  102.07777
10     1.2118259       2.777892   95.30283   99.08946
11     1.3390967       2.835726   90.82687   94.69233
12     1.4779053       2.903854   89.13407   93.09239
13     1.2919619       2.813775   91.05358   94.88911
14     1.1233953       2.740471   93.21568   96.95129
15     1.1052626       2.733088   98.19421  101.91976
16     0.9964375       2.690920  100.00747  103.67554
17     1.6357861       2.987300   98.79675  102.86882
18     0.7767247       2.617530   98.65258  102.22061
19     0.7754977       2.617167   98.51676  102.08430
20     0.5995610       2.570533  101.61084  105.11480
> print( predict( fit2sls5rs$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
         fit    se.fit  se.pred       lwr      upr
1  102.84262 0.7127555 2.096461 101.41375 104.2715
2  105.37614 0.7416395 2.106456 103.94046 106.8118
3  105.25797 0.7514362 2.109925 103.81992 106.6960
4  105.52295 0.7486930 2.108950 104.08556 106.9603
5  107.47999 1.0797363 2.247879 105.94792 109.0121
6  107.39450 1.0313100 2.225023 105.87801 108.9110
7  107.94104 1.0396472 2.228900 106.42190 109.4602
8  108.66329 1.0438859 2.230880 107.14281 110.1838
9  106.75492 1.0728555 2.244582 105.22509 108.2847
10 105.33345 1.1884358 2.302066 103.76444 106.9025
11 100.33172 1.0129194 2.216559  98.82099 101.8424
12  99.67956 0.7703657 2.116741  98.23687 101.1223
13 101.34428 0.5844928 2.056395  99.94272 102.7458
14 104.25126 0.8328255 2.140263 102.79253 105.7100
15 109.20985 1.3099668 2.367095 107.59652 110.8232
16 109.14626 1.2135199 2.315115 107.56836 110.7242
17 108.86645 1.5824283 2.528084 107.14340 110.5895
18 107.69471 0.9575056 2.191790 106.20087 109.1886
19 109.40868 1.1107097 2.262919 107.86635 110.9510
20 113.17905 1.5292558 2.495146 111.47845 114.8796
> 
> print( predict( fit2slsd1, se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99, useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1     97.10746     0.7508704       2.128674   95.05512   99.15979    98.91985
2     99.17449     0.7570668       2.130867   97.10522  101.24377   100.40008
3     99.19019     0.6923617       2.108746   97.29778  101.08261   100.45398
4     99.29189     0.7659186       2.134028   97.19843  101.38536   100.70842
5    102.54804     0.5954544       2.078945  100.92049  104.17558   102.64584
6    102.20234     0.5028654       2.054341  100.82787  103.57681   102.58350
7    102.51620     0.5028407       2.054335  101.14180  103.89060   102.55837
8    102.65825     0.6526104       2.096031  100.87449  104.44202   104.77240
9    102.03069     0.6551457       2.096822  100.24000  103.82139   102.74745
10   101.39347     1.0738008       2.262851   98.45848  104.32846    99.67725
11    95.63793     0.9777828       2.218897   92.96538   98.31048    95.36613
12    93.93626     1.1335581       2.291811   90.83793   97.03458    93.82181
13    95.03077     1.1622346       2.306130   91.85406   98.20747    95.64862
14    98.90981     0.5296748       2.061068   97.46206  100.35756    97.58861
15   104.92781     1.0608295       2.256724  102.02827  107.82735   102.31054
16   104.27973     0.7571632       2.130901  102.21019  106.34926   104.05353
17   106.05294     1.9634801       2.796909  100.68621  111.41968   102.84266
18   101.73600     0.5972787       2.079468  100.10347  103.36853   102.70033
19   103.29306     0.7362296       2.123553  101.28074  105.30538   102.55617
20   106.04668     1.4296874       2.451826  102.13894  109.95441   105.60846
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      1.0792946       2.684112   95.96984  101.86986
2      1.0644681       2.678184   97.49059  103.30956
3      0.9622159       2.639211   97.82398  103.08398
4      0.9379245       2.630452   98.14481  103.27203
5      0.9144790       2.622184  100.14632  105.14537
6      0.8078823       2.586939  100.37534  104.79167
7      0.7357100       2.565316  100.54748  104.56927
8      0.9944498       2.651133  102.05430  107.49051
9      0.8080159       2.586980  100.53892  104.95598
10     1.0226082       2.661824   96.88218  102.47232
11     1.2276149       2.747110   92.01071   98.72154
12     1.4278125       2.842222   89.91921   97.72442
13     1.2716031       2.767048   92.17298   99.12426
14     0.9171871       2.623130   95.08168  100.09554
15     0.8986032       2.616690   99.85441  104.76667
16     0.9358447       2.629712  101.49561  106.61145
17     1.6650589       2.968501   98.29159  107.39373
18     0.9883293       2.648844   99.99895  105.40171
19     1.1294989       2.704690   99.46893  105.64340
20     1.7325747       3.006891  100.87285  110.34406
> print( predict( fit2slsd1$eq[[ 2 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99, useDfSys = TRUE ) )
         fit    se.fit  se.pred       lwr       upr
1   98.91985 1.0792946 2.684112  95.96984 101.86986
2  100.40008 1.0644681 2.678184  97.49059 103.30956
3  100.45398 0.9622159 2.639211  97.82398 103.08398
4  100.70842 0.9379245 2.630452  98.14481 103.27203
5  102.64584 0.9144790 2.622184 100.14632 105.14537
6  102.58350 0.8078823 2.586939 100.37534 104.79167
7  102.55837 0.7357100 2.565316 100.54748 104.56927
8  104.77240 0.9944498 2.651133 102.05430 107.49051
9  102.74745 0.8080159 2.586980 100.53892 104.95598
10  99.67725 1.0226082 2.661824  96.88218 102.47232
11  95.36613 1.2276149 2.747110  92.01071  98.72154
12  93.82181 1.4278125 2.842222  89.91921  97.72442
13  95.64862 1.2716031 2.767048  92.17298  99.12426
14  97.58861 0.9171871 2.623130  95.08168 100.09554
15 102.31054 0.8986032 2.616690  99.85441 104.76667
16 104.05353 0.9358447 2.629712 101.49561 106.61145
17 102.84266 1.6650589 2.968501  98.29159 107.39373
18 102.70033 0.9883293 2.648844  99.99895 105.40171
19 102.55617 1.1294989 2.704690  99.46893 105.64340
20 105.60846 1.7325747 3.006891 100.87285 110.34406
> 
> print( predict( fit2slsd2r, se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     103.7985     1.3416693   99.80028   107.7967    95.78931     1.0256747
2     106.2333     1.2698050  102.30274   110.1638    97.27430     0.7855460
3     106.1678     1.3233527  102.18710   110.1486    97.41803     0.8044703
4     106.3734     1.2686638  102.44386   110.3029    97.71383     0.7335750
5     108.9663     2.0625537  104.17017   113.7624    99.98429     1.1304312
6     108.7657     1.9249247  104.13607   113.3953    99.93935     1.0136386
7     109.2343     1.8583246  104.68311   113.7854    99.92850     0.8930596
8     109.7364     1.6682453  105.40097   114.0719   102.18363     0.7647236
9     108.3013     2.1157310  103.43943   113.1632   100.38840     1.1871717
10    107.1595     2.4529840  101.86388   112.4551    97.41446     1.5249217
11    101.6340     1.8525862   97.08950   106.1784    92.94034     1.6273476
12    100.5053     1.2648814   96.57929   104.4313    91.22816     1.5872198
13    101.9920     0.9801918   98.30605   105.6779    93.06854     1.3140307
14    105.4325     1.6262487  101.14290   109.7221    95.27180     1.2530602
15    111.0443     2.5305012  105.64542   116.4432   100.35201     1.2685223
16    110.7273     2.2336305  105.71695   115.7377   102.12826     1.0752092
17    111.3174     3.2827532  104.86358   117.7711   101.28735     1.8879861
18    108.7490     1.5905602  104.49779   113.0001   100.68233     0.7964566
19    110.4642     1.7033471  106.08990   114.8385   100.54348     0.7715686
20    113.9492     1.8734309  109.38042   118.5181   103.55064     0.6561771
   supply.lwr supply.upr
1    91.21379  100.36483
2    92.83675  101.71185
3    92.97080  101.86526
4    93.30179  102.12587
5    95.33873  104.62984
6    95.37151  104.50720
7    95.43319  104.42381
8    97.75649  106.61076
9    95.70255  105.07424
10   92.45702  102.37191
11   87.89064   97.99003
12   86.21512   96.24120
13   88.28687   97.85021
14   90.53715  100.00645
15   95.60561  105.09842
16   97.52034  106.73618
17   95.98460  106.59009
18   96.23923  105.12544
19   96.11295  104.97401
20   99.17359  107.92768
> print( predict( fit2slsd2r$eq[[ 1 ]], se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
        fit    se.fit       lwr      upr
1  103.7985 1.3416693  99.80028 107.7967
2  106.2333 1.2698050 102.30274 110.1638
3  106.1678 1.3233527 102.18710 110.1486
4  106.3734 1.2686638 102.44386 110.3029
5  108.9663 2.0625537 104.17017 113.7624
6  108.7657 1.9249247 104.13607 113.3953
7  109.2343 1.8583246 104.68311 113.7854
8  109.7364 1.6682453 105.40097 114.0719
9  108.3013 2.1157310 103.43943 113.1632
10 107.1595 2.4529840 101.86388 112.4551
11 101.6340 1.8525862  97.08950 106.1784
12 100.5053 1.2648814  96.57929 104.4313
13 101.9920 0.9801918  98.30605 105.6779
14 105.4325 1.6262487 101.14290 109.7221
15 111.0443 2.5305012 105.64542 116.4432
16 110.7273 2.2336305 105.71695 115.7377
17 111.3174 3.2827532 104.86358 117.7711
18 108.7490 1.5905602 104.49779 113.0001
19 110.4642 1.7033471 106.08990 114.8385
20 113.9492 1.8734309 109.38042 118.5181
> 
> # predict just one observation
> smallData <- data.frame( price = 130, income = 150, farmPrice = 120,
+    trend = 25 )
> 
> print( predict( fit2sls1rs, newdata = smallData ) )
  demand.pred supply.pred
1    110.0697    117.7381
> print( predict( fit2sls1rs$eq[[ 1 ]], newdata = smallData ) )
       fit
1 110.0697
> 
> print( predict( fit2sls2, se.fit = TRUE, level = 0.9,
+    newdata = smallData ) )
  demand.pred demand.se.fit supply.pred supply.se.fit
1      109.81      2.785617    118.6219      3.179108
> print( predict( fit2sls2$eq[[ 1 ]], se.pred = TRUE, level = 0.99,
+    newdata = smallData ) )
     fit  se.pred
1 109.81 3.424242
> 
> print( predict( fit2sls3, interval = "prediction", level = 0.975,
+    newdata = smallData ) )
  demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1      109.81   102.1889   117.4311    118.6219    109.623   127.6207
> print( predict( fit2sls3$eq[[ 1 ]], interval = "confidence", level = 0.8,
+    newdata = smallData ) )
     fit      lwr      upr
1 109.81 106.4535 113.1665
> 
> print( predict( fit2sls4r, se.fit = TRUE, interval = "confidence",
+    level = 0.999, newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1    109.4862      2.238684   101.4467   117.5256     119.148      2.093947
  supply.lwr supply.upr
1   111.6283   126.6677
> print( predict( fit2sls4r$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.75, newdata = smallData ) )
      fit  se.pred      lwr      upr
1 119.148 3.260794 115.3336 122.9624
> 
> print( predict( fit2sls5s, se.fit = TRUE, interval = "prediction",
+    newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1    109.4862      2.263064   103.3929   115.5794     119.148      2.329153
  supply.lwr supply.upr
1   112.2119    126.084
> print( predict( fit2sls5s$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    newdata = smallData ) )
       fit se.pred      lwr      upr
1 109.4862 3.00143 104.8919 114.0804
> 
> print( predict( fit2slsd3, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1    107.6634      3.328382       3.856036   105.0345   110.2924    119.1628
  supply.se.fit supply.se.pred supply.lwr supply.upr
1      3.204772       4.067014     116.39   121.9356
> print( predict( fit2slsd3$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
       fit   se.fit  se.pred      lwr      upr
1 107.6634 3.328382 3.856036 106.5943 108.7326
> 
> 
> ## ************ correlation of predicted values ***************
> print( correlation.systemfit( fit2sls1, 1, 2 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fit2sls2s, 2, 1 ) )
               [,1]
 [1,]  0.4134528494
 [2,]  0.1537593302
 [3,]  0.1529619870
 [4,]  0.1126714843
 [5,] -0.0714418267
 [6,] -0.0539432738
 [7,] -0.0509610138
 [8,] -0.0054423289
 [9,] -0.0004762012
[10,] -0.0018944877
[11,]  0.0473510924
[12,]  0.0649726704
[13,]  0.0245905438
[14,] -0.0280362915
[15,]  0.1753264294
[16,]  0.2548776263
[17,]  0.1045402043
[18,]  0.0655787703
[19,]  0.1470076607
[20,]  0.1245927216
> 
> print( correlation.systemfit( fit2sls3, 1, 2 ) )
               [,1]
 [1,]  0.4487714448
 [2,]  0.1687531815
 [3,]  0.1685022033
 [4,]  0.1251895256
 [5,] -0.0807937659
 [6,] -0.0609605769
 [7,] -0.0578047639
 [8,] -0.0061813325
 [9,] -0.0005400768
[10,] -0.0021426189
[11,]  0.0545373301
[12,]  0.0760721824
[13,]  0.0286763923
[14,] -0.0319743741
[15,]  0.1989939490
[16,]  0.2855094262
[17,]  0.1183826317
[18,]  0.0718423392
[19,]  0.1627146776
[20,]  0.1399454098
> 
> print( correlation.systemfit( fit2sls4r, 2, 1 ) )
             [,1]
 [1,]  0.40776447
 [2,]  0.28657962
 [3,]  0.25275596
 [4,]  0.28358564
 [5,] -0.02999664
 [6,] -0.05371896
 [7,] -0.06270576
 [8,]  0.10435074
 [9,]  0.10034116
[10,]  0.45299108
[11,]  0.12930417
[12,]  0.01836606
[13,]  0.04485549
[14,] -0.04094499
[15,]  0.42288166
[16,]  0.26489138
[17,]  0.65543770
[18,]  0.26933806
[19,]  0.38314231
[20,]  0.57837847
> 
> print( correlation.systemfit( fit2sls5rs, 1, 2 ) )
              [,1]
 [1,]  0.384378855
 [2,]  0.306972984
 [3,]  0.266903991
 [4,]  0.301633717
 [5,] -0.027681878
 [6,] -0.050860398
 [7,] -0.058945562
 [8,]  0.101018851
 [9,]  0.100719807
[10,]  0.455474580
[11,]  0.108167324
[12,]  0.005524089
[13,]  0.042185360
[14,] -0.040536614
[15,]  0.420999509
[16,]  0.249735676
[17,]  0.657223160
[18,]  0.242863697
[19,]  0.343361348
[20,]  0.547173845
> 
> print( correlation.systemfit( fit2slsd1, 2, 1 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fit2slsd2r, 1, 2 ) )
              [,1]
 [1,]  0.513196716
 [2,]  0.272634870
 [3,]  0.262210907
 [4,]  0.213068245
 [5,] -0.119732911
 [6,] -0.082823922
 [7,] -0.061583819
 [8,] -0.002245194
 [9,] -0.001025947
[10,] -0.008924276
[11,]  0.045757587
[12,]  0.087101893
[13,]  0.034233589
[14,] -0.034250389
[15,]  0.256247552
[16,]  0.350697869
[17,]  0.175054811
[18,] -0.024428362
[19,]  0.072765830
[20,]  0.051416198
> 
> 
> ## ************ Log-Likelihood values ***************
> print( logLik( fit2sls1 ) )
'log Lik.' -67.63536 (df=8)
> 
> print( logLik( fit2sls2s ) )
'log Lik.' -65.71475 (df=7)
> 
> print( logLik( fit2sls3 ) )
'log Lik.' -65.71475 (df=7)
> 
> print( logLik( fit2sls4r ) )
'log Lik.' -66.19217 (df=6)
> 
> print( logLik( fit2sls5rs ) )
'log Lik.' -66.19217 (df=6)
> 
> print( logLik( fit2slsd1 ) )
'log Lik.' -75.14682 (df=8)
> 
> print( logLik( fit2slsd2r ) )
'log Lik.' -68.7687 (df=7)
> 
> 
> ## ************** F tests ****************
> # testing first restriction
> print( linearHypothesis( fit2sls1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0625 0.8042
> linearHypothesis( fit2sls1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0625 0.8042
> 
> print( linearHypothesis( fit2sls1s, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1s

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0696 0.7936
> linearHypothesis( fit2sls1s, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1s

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0696 0.7936
> 
> print( linearHypothesis( fit2sls1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0625 0.8042
> linearHypothesis( fit2sls1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0625 0.8042
> 
> print( linearHypothesis( fit2sls1r, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1r

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0772 0.7829
> linearHypothesis( fit2sls1r, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1r

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0772 0.7829
> 
> # testing second restriction
> restrOnly2m <- matrix(0,1,7)
> restrOnly2q <- 0.5
> restrOnly2m[1,2] <- -1
> restrOnly2m[1,5] <-  1
> restrictOnly2 <- "- demand_price + supply_price = 0.5"
> # first restriction not imposed 
> print( linearHypothesis( fit2sls1, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0028  0.958
> linearHypothesis( fit2sls1, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     34                 
2     33  1 0.0028  0.958
> 
> # first restriction imposed
> print( linearHypothesis( fit2sls2, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2

  Res.Df Df      F Pr(>F)
1     35                 
2     34  1 0.0115 0.9154
> linearHypothesis( fit2sls2, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2

  Res.Df Df      F Pr(>F)
1     35                 
2     34  1 0.0115 0.9154
> 
> print( linearHypothesis( fit2sls2r, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2r

  Res.Df Df      F Pr(>F)
1     35                 
2     34  1 0.0135 0.9083
> linearHypothesis( fit2sls2r, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2r

  Res.Df Df      F Pr(>F)
1     35                 
2     34  1 0.0135 0.9083
> 
> print( linearHypothesis( fit2sls3, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls3

  Res.Df Df      F Pr(>F)
1     35                 
2     34  1 0.0135 0.9083
> linearHypothesis( fit2sls3, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls3

  Res.Df Df      F Pr(>F)
1     35                 
2     34  1 0.0135 0.9083
> 
> # testing both of the restrictions
> print( linearHypothesis( fit2sls1, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     35                 
2     33  2 0.0351 0.9656
> linearHypothesis( fit2sls1, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df      F Pr(>F)
1     35                 
2     33  2 0.0351 0.9656
> 
> 
> ## ************** Wald tests ****************
> # testing first restriction
> print( linearHypothesis( fit2sls1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3073     0.5793
> linearHypothesis( fit2sls1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3073     0.5793
> 
> print( linearHypothesis( fit2sls1s, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1s

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3423     0.5585
> linearHypothesis( fit2sls1s, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1s

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3423     0.5585
> 
> print( linearHypothesis( fit2sls1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3073     0.5793
> linearHypothesis( fit2sls1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3073     0.5793
> 
> print( linearHypothesis( fit2sls1r, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1r

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3798     0.5377
> linearHypothesis( fit2sls1r, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fit2sls1r

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.3798     0.5377
> 
> # testing second restriction
> # first restriction not imposed
> print( linearHypothesis( fit2sls1, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.0139     0.9062
> linearHypothesis( fit2sls1, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     33  1 0.0139     0.9062
> # first restriction imposed
> print( linearHypothesis( fit2sls2, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     34  1 0.0558     0.8133
> linearHypothesis( fit2sls2, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     34  1 0.0558     0.8133
> 
> print( linearHypothesis( fit2sls2r, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2r

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     34  1 0.0656     0.7978
> linearHypothesis( fit2sls2r, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls2r

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     34  1 0.0656     0.7978
> 
> print( linearHypothesis( fit2sls3, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls3

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     34  1 0.0656     0.7978
> linearHypothesis( fit2sls3, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls3

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     34  1 0.0656     0.7978
> 
> # testing both of the restrictions
> print( linearHypothesis( fit2sls1, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     33  2 0.3451     0.8415
> linearHypothesis( fit2sls1, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fit2sls1

  Res.Df Df  Chisq Pr(>Chisq)
1     35                     
2     33  2 0.3451     0.8415
> 
> 
> ## **************** model frame ************************
> print( mf <- model.frame( fit2sls1 ) )
   consump   price income farmPrice trend
1   98.485 100.323   87.4      98.0     1
2   99.187 104.264   97.6      99.1     2
3  102.163 103.435   96.7      99.1     3
4  101.504 104.506   98.2      98.1     4
5  104.240  98.001   99.8     110.8     5
6  103.243  99.456  100.5     108.2     6
7  103.993 101.066  103.2     105.6     7
8   99.900 104.763  107.8     109.8     8
9  100.350  96.446   96.6     108.7     9
10 102.820  91.228   88.9     100.6    10
11  95.435  93.085   75.1      81.0    11
12  92.424  98.801   76.9      68.6    12
13  94.535 102.908   84.6      70.9    13
14  98.757  98.756   90.6      81.4    14
15 105.797  95.119  103.1     102.3    15
16 100.225  98.451  105.1     105.0    16
17 103.522  86.498   96.4     110.5    17
18  99.929 104.016  104.4      92.5    18
19 105.223 105.769  110.7      89.3    19
20 106.232 113.490  127.1      93.0    20
> print( mf1 <- model.frame( fit2sls1$eq[[ 1 ]] ) )
   consump   price income
1   98.485 100.323   87.4
2   99.187 104.264   97.6
3  102.163 103.435   96.7
4  101.504 104.506   98.2
5  104.240  98.001   99.8
6  103.243  99.456  100.5
7  103.993 101.066  103.2
8   99.900 104.763  107.8
9  100.350  96.446   96.6
10 102.820  91.228   88.9
11  95.435  93.085   75.1
12  92.424  98.801   76.9
13  94.535 102.908   84.6
14  98.757  98.756   90.6
15 105.797  95.119  103.1
16 100.225  98.451  105.1
17 103.522  86.498   96.4
18  99.929 104.016  104.4
19 105.223 105.769  110.7
20 106.232 113.490  127.1
> print( attributes( mf1 )$terms )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> print( mf2 <- model.frame( fit2sls1$eq[[ 2 ]] ) )
   consump   price farmPrice trend
1   98.485 100.323      98.0     1
2   99.187 104.264      99.1     2
3  102.163 103.435      99.1     3
4  101.504 104.506      98.1     4
5  104.240  98.001     110.8     5
6  103.243  99.456     108.2     6
7  103.993 101.066     105.6     7
8   99.900 104.763     109.8     8
9  100.350  96.446     108.7     9
10 102.820  91.228     100.6    10
11  95.435  93.085      81.0    11
12  92.424  98.801      68.6    12
13  94.535 102.908      70.9    13
14  98.757  98.756      81.4    14
15 105.797  95.119     102.3    15
16 100.225  98.451     105.0    16
17 103.522  86.498     110.5    17
18  99.929 104.016      92.5    18
19 105.223 105.769      89.3    19
20 106.232 113.490      93.0    20
> print( attributes( mf2 )$terms )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> print( all.equal( mf, model.frame( fit2sls2s ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fit2sls2s$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fit2sls3 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fit2sls3$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fit2sls4r ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fit2sls4r$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fit2sls5rs ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fit2sls5rs$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> fit2sls1$eq[[ 1 ]]$modelInst
   income farmPrice trend
1    87.4      98.0     1
2    97.6      99.1     2
3    96.7      99.1     3
4    98.2      98.1     4
5    99.8     110.8     5
6   100.5     108.2     6
7   103.2     105.6     7
8   107.8     109.8     8
9    96.6     108.7     9
10   88.9     100.6    10
11   75.1      81.0    11
12   76.9      68.6    12
13   84.6      70.9    13
14   90.6      81.4    14
15  103.1     102.3    15
16  105.1     105.0    16
17   96.4     110.5    17
18  104.4      92.5    18
19  110.7      89.3    19
20  127.1      93.0    20
> fit2sls1$eq[[ 2 ]]$modelInst
   income farmPrice trend
1    87.4      98.0     1
2    97.6      99.1     2
3    96.7      99.1     3
4    98.2      98.1     4
5    99.8     110.8     5
6   100.5     108.2     6
7   103.2     105.6     7
8   107.8     109.8     8
9    96.6     108.7     9
10   88.9     100.6    10
11   75.1      81.0    11
12   76.9      68.6    12
13   84.6      70.9    13
14   90.6      81.4    14
15  103.1     102.3    15
16  105.1     105.0    16
17   96.4     110.5    17
18  104.4      92.5    18
19  110.7      89.3    19
20  127.1      93.0    20
> 
> fit2sls2s$eq[[ 1 ]]$modelInst
   income farmPrice trend
1    87.4      98.0     1
2    97.6      99.1     2
3    96.7      99.1     3
4    98.2      98.1     4
5    99.8     110.8     5
6   100.5     108.2     6
7   103.2     105.6     7
8   107.8     109.8     8
9    96.6     108.7     9
10   88.9     100.6    10
11   75.1      81.0    11
12   76.9      68.6    12
13   84.6      70.9    13
14   90.6      81.4    14
15  103.1     102.3    15
16  105.1     105.0    16
17   96.4     110.5    17
18  104.4      92.5    18
19  110.7      89.3    19
20  127.1      93.0    20
> fit2sls2s$eq[[ 2 ]]$modelInst
   income farmPrice trend
1    87.4      98.0     1
2    97.6      99.1     2
3    96.7      99.1     3
4    98.2      98.1     4
5    99.8     110.8     5
6   100.5     108.2     6
7   103.2     105.6     7
8   107.8     109.8     8
9    96.6     108.7     9
10   88.9     100.6    10
11   75.1      81.0    11
12   76.9      68.6    12
13   84.6      70.9    13
14   90.6      81.4    14
15  103.1     102.3    15
16  105.1     105.0    16
17   96.4     110.5    17
18  104.4      92.5    18
19  110.7      89.3    19
20  127.1      93.0    20
> 
> fit2sls5rs$eq[[ 1 ]]$modelInst
   income farmPrice trend
1    87.4      98.0     1
2    97.6      99.1     2
3    96.7      99.1     3
4    98.2      98.1     4
5    99.8     110.8     5
6   100.5     108.2     6
7   103.2     105.6     7
8   107.8     109.8     8
9    96.6     108.7     9
10   88.9     100.6    10
11   75.1      81.0    11
12   76.9      68.6    12
13   84.6      70.9    13
14   90.6      81.4    14
15  103.1     102.3    15
16  105.1     105.0    16
17   96.4     110.5    17
18  104.4      92.5    18
19  110.7      89.3    19
20  127.1      93.0    20
> fit2sls5rs$eq[[ 2 ]]$modelInst
   income farmPrice trend
1    87.4      98.0     1
2    97.6      99.1     2
3    96.7      99.1     3
4    98.2      98.1     4
5    99.8     110.8     5
6   100.5     108.2     6
7   103.2     105.6     7
8   107.8     109.8     8
9    96.6     108.7     9
10   88.9     100.6    10
11   75.1      81.0    11
12   76.9      68.6    12
13   84.6      70.9    13
14   90.6      81.4    14
15  103.1     102.3    15
16  105.1     105.0    16
17   96.4     110.5    17
18  104.4      92.5    18
19  110.7      89.3    19
20  127.1      93.0    20
> 
> 
> ## **************** model matrix ************************
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fit2sls1$eq[[ 1 ]]$x ) )
[1] TRUE
> print( mm <- model.matrix( fit2sls1 ) )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1                   1      100.323          87.4                  0
demand_2                   1      104.264          97.6                  0
demand_3                   1      103.435          96.7                  0
demand_4                   1      104.506          98.2                  0
demand_5                   1       98.001          99.8                  0
demand_6                   1       99.456         100.5                  0
demand_7                   1      101.066         103.2                  0
demand_8                   1      104.763         107.8                  0
demand_9                   1       96.446          96.6                  0
demand_10                  1       91.228          88.9                  0
demand_11                  1       93.085          75.1                  0
demand_12                  1       98.801          76.9                  0
demand_13                  1      102.908          84.6                  0
demand_14                  1       98.756          90.6                  0
demand_15                  1       95.119         103.1                  0
demand_16                  1       98.451         105.1                  0
demand_17                  1       86.498          96.4                  0
demand_18                  1      104.016         104.4                  0
demand_19                  1      105.769         110.7                  0
demand_20                  1      113.490         127.1                  0
supply_1                   0        0.000           0.0                  1
supply_2                   0        0.000           0.0                  1
supply_3                   0        0.000           0.0                  1
supply_4                   0        0.000           0.0                  1
supply_5                   0        0.000           0.0                  1
supply_6                   0        0.000           0.0                  1
supply_7                   0        0.000           0.0                  1
supply_8                   0        0.000           0.0                  1
supply_9                   0        0.000           0.0                  1
supply_10                  0        0.000           0.0                  1
supply_11                  0        0.000           0.0                  1
supply_12                  0        0.000           0.0                  1
supply_13                  0        0.000           0.0                  1
supply_14                  0        0.000           0.0                  1
supply_15                  0        0.000           0.0                  1
supply_16                  0        0.000           0.0                  1
supply_17                  0        0.000           0.0                  1
supply_18                  0        0.000           0.0                  1
supply_19                  0        0.000           0.0                  1
supply_20                  0        0.000           0.0                  1
          supply_price supply_farmPrice supply_trend
demand_1         0.000              0.0            0
demand_2         0.000              0.0            0
demand_3         0.000              0.0            0
demand_4         0.000              0.0            0
demand_5         0.000              0.0            0
demand_6         0.000              0.0            0
demand_7         0.000              0.0            0
demand_8         0.000              0.0            0
demand_9         0.000              0.0            0
demand_10        0.000              0.0            0
demand_11        0.000              0.0            0
demand_12        0.000              0.0            0
demand_13        0.000              0.0            0
demand_14        0.000              0.0            0
demand_15        0.000              0.0            0
demand_16        0.000              0.0            0
demand_17        0.000              0.0            0
demand_18        0.000              0.0            0
demand_19        0.000              0.0            0
demand_20        0.000              0.0            0
supply_1       100.323             98.0            1
supply_2       104.264             99.1            2
supply_3       103.435             99.1            3
supply_4       104.506             98.1            4
supply_5        98.001            110.8            5
supply_6        99.456            108.2            6
supply_7       101.066            105.6            7
supply_8       104.763            109.8            8
supply_9        96.446            108.7            9
supply_10       91.228            100.6           10
supply_11       93.085             81.0           11
supply_12       98.801             68.6           12
supply_13      102.908             70.9           13
supply_14       98.756             81.4           14
supply_15       95.119            102.3           15
supply_16       98.451            105.0           16
supply_17       86.498            110.5           17
supply_18      104.016             92.5           18
supply_19      105.769             89.3           19
supply_20      113.490             93.0           20
> print( mm1 <- model.matrix( fit2sls1$eq[[ 1 ]] ) )
   (Intercept)   price income
1            1 100.323   87.4
2            1 104.264   97.6
3            1 103.435   96.7
4            1 104.506   98.2
5            1  98.001   99.8
6            1  99.456  100.5
7            1 101.066  103.2
8            1 104.763  107.8
9            1  96.446   96.6
10           1  91.228   88.9
11           1  93.085   75.1
12           1  98.801   76.9
13           1 102.908   84.6
14           1  98.756   90.6
15           1  95.119  103.1
16           1  98.451  105.1
17           1  86.498   96.4
18           1 104.016  104.4
19           1 105.769  110.7
20           1 113.490  127.1
attr(,"assign")
[1] 0 1 2
> print( mm2 <- model.matrix( fit2sls1$eq[[ 2 ]] ) )
   (Intercept)   price farmPrice trend
1            1 100.323      98.0     1
2            1 104.264      99.1     2
3            1 103.435      99.1     3
4            1 104.506      98.1     4
5            1  98.001     110.8     5
6            1  99.456     108.2     6
7            1 101.066     105.6     7
8            1 104.763     109.8     8
9            1  96.446     108.7     9
10           1  91.228     100.6    10
11           1  93.085      81.0    11
12           1  98.801      68.6    12
13           1 102.908      70.9    13
14           1  98.756      81.4    14
15           1  95.119     102.3    15
16           1  98.451     105.0    16
17           1  86.498     110.5    17
18           1 104.016      92.5    18
19           1 105.769      89.3    19
20           1 113.490      93.0    20
attr(,"assign")
[1] 0 1 2 3
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fit2sls1s ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls1s$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls1s$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fit2sls1s$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fit2sls2s$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fit2sls2s ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls2s$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls2s$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fit2sls2Sym ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls2Sym$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls2Sym$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fit2sls2Sym$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fit2sls3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls3$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fit2sls3$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fit2sls4r$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fit2sls4r ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls4r$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls4r$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fit2sls4s ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls4s$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls4s$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fit2sls4s$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fit2sls5rs$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fit2sls5rs ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls5rs$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls5rs$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fit2sls5r ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fit2sls5r$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fit2sls5r$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fit2sls5r$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # matrices of instrumental variables
> model.matrix( fit2sls1, which = "z" )
          demand_(Intercept) demand_income demand_farmPrice demand_trend
demand_1                   1          87.4             98.0            1
demand_2                   1          97.6             99.1            2
demand_3                   1          96.7             99.1            3
demand_4                   1          98.2             98.1            4
demand_5                   1          99.8            110.8            5
demand_6                   1         100.5            108.2            6
demand_7                   1         103.2            105.6            7
demand_8                   1         107.8            109.8            8
demand_9                   1          96.6            108.7            9
demand_10                  1          88.9            100.6           10
demand_11                  1          75.1             81.0           11
demand_12                  1          76.9             68.6           12
demand_13                  1          84.6             70.9           13
demand_14                  1          90.6             81.4           14
demand_15                  1         103.1            102.3           15
demand_16                  1         105.1            105.0           16
demand_17                  1          96.4            110.5           17
demand_18                  1         104.4             92.5           18
demand_19                  1         110.7             89.3           19
demand_20                  1         127.1             93.0           20
supply_1                   0           0.0              0.0            0
supply_2                   0           0.0              0.0            0
supply_3                   0           0.0              0.0            0
supply_4                   0           0.0              0.0            0
supply_5                   0           0.0              0.0            0
supply_6                   0           0.0              0.0            0
supply_7                   0           0.0              0.0            0
supply_8                   0           0.0              0.0            0
supply_9                   0           0.0              0.0            0
supply_10                  0           0.0              0.0            0
supply_11                  0           0.0              0.0            0
supply_12                  0           0.0              0.0            0
supply_13                  0           0.0              0.0            0
supply_14                  0           0.0              0.0            0
supply_15                  0           0.0              0.0            0
supply_16                  0           0.0              0.0            0
supply_17                  0           0.0              0.0            0
supply_18                  0           0.0              0.0            0
supply_19                  0           0.0              0.0            0
supply_20                  0           0.0              0.0            0
          supply_(Intercept) supply_income supply_farmPrice supply_trend
demand_1                   0           0.0              0.0            0
demand_2                   0           0.0              0.0            0
demand_3                   0           0.0              0.0            0
demand_4                   0           0.0              0.0            0
demand_5                   0           0.0              0.0            0
demand_6                   0           0.0              0.0            0
demand_7                   0           0.0              0.0            0
demand_8                   0           0.0              0.0            0
demand_9                   0           0.0              0.0            0
demand_10                  0           0.0              0.0            0
demand_11                  0           0.0              0.0            0
demand_12                  0           0.0              0.0            0
demand_13                  0           0.0              0.0            0
demand_14                  0           0.0              0.0            0
demand_15                  0           0.0              0.0            0
demand_16                  0           0.0              0.0            0
demand_17                  0           0.0              0.0            0
demand_18                  0           0.0              0.0            0
demand_19                  0           0.0              0.0            0
demand_20                  0           0.0              0.0            0
supply_1                   1          87.4             98.0            1
supply_2                   1          97.6             99.1            2
supply_3                   1          96.7             99.1            3
supply_4                   1          98.2             98.1            4
supply_5                   1          99.8            110.8            5
supply_6                   1         100.5            108.2            6
supply_7                   1         103.2            105.6            7
supply_8                   1         107.8            109.8            8
supply_9                   1          96.6            108.7            9
supply_10                  1          88.9            100.6           10
supply_11                  1          75.1             81.0           11
supply_12                  1          76.9             68.6           12
supply_13                  1          84.6             70.9           13
supply_14                  1          90.6             81.4           14
supply_15                  1         103.1            102.3           15
supply_16                  1         105.1            105.0           16
supply_17                  1          96.4            110.5           17
supply_18                  1         104.4             92.5           18
supply_19                  1         110.7             89.3           19
supply_20                  1         127.1             93.0           20
> model.matrix( fit2sls1$eq[[ 1 ]], which = "z" )
   (Intercept) income farmPrice trend
1            1   87.4      98.0     1
2            1   97.6      99.1     2
3            1   96.7      99.1     3
4            1   98.2      98.1     4
5            1   99.8     110.8     5
6            1  100.5     108.2     6
7            1  103.2     105.6     7
8            1  107.8     109.8     8
9            1   96.6     108.7     9
10           1   88.9     100.6    10
11           1   75.1      81.0    11
12           1   76.9      68.6    12
13           1   84.6      70.9    13
14           1   90.6      81.4    14
15           1  103.1     102.3    15
16           1  105.1     105.0    16
17           1   96.4     110.5    17
18           1  104.4      92.5    18
19           1  110.7      89.3    19
20           1  127.1      93.0    20
attr(,"assign")
[1] 0 1 2 3
> model.matrix( fit2sls1$eq[[ 2 ]], which = "z" )
   (Intercept) income farmPrice trend
1            1   87.4      98.0     1
2            1   97.6      99.1     2
3            1   96.7      99.1     3
4            1   98.2      98.1     4
5            1   99.8     110.8     5
6            1  100.5     108.2     6
7            1  103.2     105.6     7
8            1  107.8     109.8     8
9            1   96.6     108.7     9
10           1   88.9     100.6    10
11           1   75.1      81.0    11
12           1   76.9      68.6    12
13           1   84.6      70.9    13
14           1   90.6      81.4    14
15           1  103.1     102.3    15
16           1  105.1     105.0    16
17           1   96.4     110.5    17
18           1  104.4      92.5    18
19           1  110.7      89.3    19
20           1  127.1      93.0    20
attr(,"assign")
[1] 0 1 2 3
> 
> # matrices of fitted regressors
> model.matrix( fit2sls5r, which = "xHat" )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1                   1     99.62764          87.4                  0
demand_2                   1    105.11809          97.6                  0
demand_3                   1    103.78416          96.7                  0
demand_4                   1    104.53038          98.2                  0
demand_5                   1     98.65119          99.8                  0
demand_6                   1     99.64837         100.5                  0
demand_7                   1    101.97197         103.2                  0
demand_8                   1    102.23423         107.8                  0
demand_9                   1     94.60649          96.6                  0
demand_10                  1     92.71914          88.9                  0
demand_11                  1     92.40334          75.1                  0
demand_12                  1     98.91684          76.9                  0
demand_13                  1    102.16312          84.6                  0
demand_14                  1    100.27665          90.6                  0
demand_15                  1     97.62121         103.1                  0
demand_16                  1     96.89179         105.1                  0
demand_17                  1     87.69833          96.4                  0
demand_18                  1    101.05906         104.4                  0
demand_19                  1    106.06330         110.7                  0
demand_20                  1    114.39570         127.1                  0
supply_1                   0      0.00000           0.0                  1
supply_2                   0      0.00000           0.0                  1
supply_3                   0      0.00000           0.0                  1
supply_4                   0      0.00000           0.0                  1
supply_5                   0      0.00000           0.0                  1
supply_6                   0      0.00000           0.0                  1
supply_7                   0      0.00000           0.0                  1
supply_8                   0      0.00000           0.0                  1
supply_9                   0      0.00000           0.0                  1
supply_10                  0      0.00000           0.0                  1
supply_11                  0      0.00000           0.0                  1
supply_12                  0      0.00000           0.0                  1
supply_13                  0      0.00000           0.0                  1
supply_14                  0      0.00000           0.0                  1
supply_15                  0      0.00000           0.0                  1
supply_16                  0      0.00000           0.0                  1
supply_17                  0      0.00000           0.0                  1
supply_18                  0      0.00000           0.0                  1
supply_19                  0      0.00000           0.0                  1
supply_20                  0      0.00000           0.0                  1
          supply_price supply_farmPrice supply_trend
demand_1       0.00000              0.0            0
demand_2       0.00000              0.0            0
demand_3       0.00000              0.0            0
demand_4       0.00000              0.0            0
demand_5       0.00000              0.0            0
demand_6       0.00000              0.0            0
demand_7       0.00000              0.0            0
demand_8       0.00000              0.0            0
demand_9       0.00000              0.0            0
demand_10      0.00000              0.0            0
demand_11      0.00000              0.0            0
demand_12      0.00000              0.0            0
demand_13      0.00000              0.0            0
demand_14      0.00000              0.0            0
demand_15      0.00000              0.0            0
demand_16      0.00000              0.0            0
demand_17      0.00000              0.0            0
demand_18      0.00000              0.0            0
demand_19      0.00000              0.0            0
demand_20      0.00000              0.0            0
supply_1      99.62764             98.0            1
supply_2     105.11809             99.1            2
supply_3     103.78416             99.1            3
supply_4     104.53038             98.1            4
supply_5      98.65119            110.8            5
supply_6      99.64837            108.2            6
supply_7     101.97197            105.6            7
supply_8     102.23423            109.8            8
supply_9      94.60649            108.7            9
supply_10     92.71914            100.6           10
supply_11     92.40334             81.0           11
supply_12     98.91684             68.6           12
supply_13    102.16312             70.9           13
supply_14    100.27665             81.4           14
supply_15     97.62121            102.3           15
supply_16     96.89179            105.0           16
supply_17     87.69833            110.5           17
supply_18    101.05906             92.5           18
supply_19    106.06330             89.3           19
supply_20    114.39570             93.0           20
> model.matrix( fit2sls5r$eq[[ 1 ]], which = "xHat" )
   (Intercept)     price income
1            1  99.62764   87.4
2            1 105.11809   97.6
3            1 103.78416   96.7
4            1 104.53038   98.2
5            1  98.65119   99.8
6            1  99.64837  100.5
7            1 101.97197  103.2
8            1 102.23423  107.8
9            1  94.60649   96.6
10           1  92.71914   88.9
11           1  92.40334   75.1
12           1  98.91684   76.9
13           1 102.16312   84.6
14           1 100.27665   90.6
15           1  97.62121  103.1
16           1  96.89179  105.1
17           1  87.69833   96.4
18           1 101.05906  104.4
19           1 106.06330  110.7
20           1 114.39570  127.1
> model.matrix( fit2sls5r$eq[[ 2 ]], which = "xHat" )
   (Intercept)     price farmPrice trend
1            1  99.62764      98.0     1
2            1 105.11809      99.1     2
3            1 103.78416      99.1     3
4            1 104.53038      98.1     4
5            1  98.65119     110.8     5
6            1  99.64837     108.2     6
7            1 101.97197     105.6     7
8            1 102.23423     109.8     8
9            1  94.60649     108.7     9
10           1  92.71914     100.6    10
11           1  92.40334      81.0    11
12           1  98.91684      68.6    12
13           1 102.16312      70.9    13
14           1 100.27665      81.4    14
15           1  97.62121     102.3    15
16           1  96.89179     105.0    16
17           1  87.69833     110.5    17
18           1 101.05906      92.5    18
19           1 106.06330      89.3    19
20           1 114.39570      93.0    20
> 
> 
> ## **************** formulas ************************
> formula( fit2sls1 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fit2sls1$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fit2sls2s )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fit2sls2s$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fit2sls3 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fit2sls3$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fit2sls4r )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fit2sls4r$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fit2sls5rs )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fit2sls5rs$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fit2slsd1 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fit2slsd1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fit2slsd2r )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fit2slsd2r$eq[[ 1 ]] )
consump ~ price + income
> 
> 
> ## **************** model terms *******************
> terms( fit2sls1 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fit2sls1$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fit2sls2s )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fit2sls2s$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fit2sls3 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fit2sls3$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fit2sls4r )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fit2sls4r$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fit2sls5rs )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fit2sls5rs$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fit2slsd1 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fit2slsd1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fit2slsd2r )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fit2slsd2r$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> 
> ## **************** terms of instruments *******************
> fit2sls1$eq[[ 1 ]]$termsInst
~income + farmPrice + trend
attr(,"variables")
list(income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 0
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(income, farmPrice, trend)
attr(,"dataClasses")
   income farmPrice     trend 
"numeric" "numeric" "numeric" 
> 
> fit2sls2s$eq[[ 2 ]]$termsInst
~income + farmPrice + trend
attr(,"variables")
list(income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 0
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(income, farmPrice, trend)
attr(,"dataClasses")
   income farmPrice     trend 
"numeric" "numeric" "numeric" 
> 
> fit2sls3$eq[[ 1 ]]$termsInst
~income + farmPrice + trend
attr(,"variables")
list(income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 0
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(income, farmPrice, trend)
attr(,"dataClasses")
   income farmPrice     trend 
"numeric" "numeric" "numeric" 
> 
> fit2sls4r$eq[[ 2 ]]$termsInst
~income + farmPrice + trend
attr(,"variables")
list(income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 0
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(income, farmPrice, trend)
attr(,"dataClasses")
   income farmPrice     trend 
"numeric" "numeric" "numeric" 
> 
> fit2sls5rs$eq[[ 1 ]]$termsInst
~income + farmPrice + trend
attr(,"variables")
list(income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 0
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(income, farmPrice, trend)
attr(,"dataClasses")
   income farmPrice     trend 
"numeric" "numeric" "numeric" 
> 
> fit2slsd1$eq[[ 2 ]]$termsInst
~income + farmPrice + trend
attr(,"variables")
list(income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 0
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(income, farmPrice, trend)
attr(,"dataClasses")
   income farmPrice     trend 
"numeric" "numeric" "numeric" 
> 
> fit2slsd2r$eq[[ 1 ]]$termsInst
~income + farmPrice
attr(,"variables")
list(income, farmPrice)
attr(,"factors")
          income farmPrice
income         1         0
farmPrice      0         1
attr(,"term.labels")
[1] "income"    "farmPrice"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 0
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(income, farmPrice)
attr(,"dataClasses")
   income farmPrice 
"numeric" "numeric" 
> 
> 
> ## **************** estfun ************************
> library( "sandwich" )
> 
> estfun( fit2sls1 )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1          0.67377740    67.126855     58.888145          0.0000000
demand_2         -0.48970560   -51.476916    -47.795266          0.0000000
demand_3          2.44399923   253.648396    236.334725          0.0000000
demand_4          1.49576035   156.352404    146.883667          0.0000000
demand_5          2.29745817   226.646990    229.286325          0.0000000
demand_6          1.32353238   131.887842    133.015004          0.0000000
demand_7          1.79168289   182.701433    184.901674          0.0000000
demand_8         -3.68180446  -376.406440   -396.898521          0.0000000
demand_9         -1.57288129  -148.804783   -151.940333          0.0000000
demand_10         2.85517865   264.729713    253.825382          0.0000000
demand_11        -0.27364942   -25.286121    -20.551072          0.0000000
demand_12        -2.26342866  -223.891221   -174.057664          0.0000000
demand_13        -1.77951473  -181.800771   -150.546946          0.0000000
demand_14         0.09907338     9.934747      8.976048          0.0000000
demand_15         2.56742599   250.635231    264.701620          0.0000000
demand_16        -3.81021340  -369.178383   -400.453428          0.0000000
demand_17        -0.02061224    -1.807659     -1.987020          0.0000000
demand_18        -2.87145237  -290.186278   -299.779628          0.0000000
demand_19         1.66321430   176.405995    184.117823          0.0000000
demand_20        -0.44784056   -51.231034    -56.920535          0.0000000
supply_1          0.00000000     0.000000      0.000000         -0.2679112
supply_2          0.00000000     0.000000      0.000000         -1.4181240
supply_3          0.00000000     0.000000      0.000000          1.6251965
supply_4          0.00000000     0.000000      0.000000          0.7897267
supply_5          0.00000000     0.000000      0.000000          1.4380611
supply_6          0.00000000     0.000000      0.000000          0.6133142
supply_7          0.00000000     0.000000      0.000000          1.2171245
supply_8          0.00000000     0.000000      0.000000         -4.2653058
supply_9          0.00000000     0.000000      0.000000         -1.9558290
supply_10         0.00000000     0.000000      0.000000          2.7847606
supply_11         0.00000000     0.000000      0.000000          0.2325242
supply_12         0.00000000     0.000000      0.000000         -1.4256230
supply_13         0.00000000     0.000000      0.000000         -0.9347916
supply_14         0.00000000     0.000000      0.000000          0.8033189
supply_15         0.00000000     0.000000      0.000000          2.8857421
supply_16         0.00000000     0.000000      0.000000         -3.4542007
supply_17         0.00000000     0.000000      0.000000          0.3911709
supply_18         0.00000000     0.000000      0.000000         -2.0614390
supply_19         0.00000000     0.000000      0.000000          2.5961787
supply_20         0.00000000     0.000000      0.000000          0.4061059
          supply_price supply_farmPrice supply_trend
demand_1       0.00000          0.00000    0.0000000
demand_2       0.00000          0.00000    0.0000000
demand_3       0.00000          0.00000    0.0000000
demand_4       0.00000          0.00000    0.0000000
demand_5       0.00000          0.00000    0.0000000
demand_6       0.00000          0.00000    0.0000000
demand_7       0.00000          0.00000    0.0000000
demand_8       0.00000          0.00000    0.0000000
demand_9       0.00000          0.00000    0.0000000
demand_10      0.00000          0.00000    0.0000000
demand_11      0.00000          0.00000    0.0000000
demand_12      0.00000          0.00000    0.0000000
demand_13      0.00000          0.00000    0.0000000
demand_14      0.00000          0.00000    0.0000000
demand_15      0.00000          0.00000    0.0000000
demand_16      0.00000          0.00000    0.0000000
demand_17      0.00000          0.00000    0.0000000
demand_18      0.00000          0.00000    0.0000000
demand_19      0.00000          0.00000    0.0000000
demand_20      0.00000          0.00000    0.0000000
supply_1     -26.69136        -26.25529   -0.2679112
supply_2    -149.07049       -140.53609   -2.8362481
supply_3     168.66965        161.05697    4.8755895
supply_4      82.55043         77.47219    3.1589066
supply_5     141.86644        159.33717    7.1903053
supply_6      61.11576         66.36060    3.6798853
supply_7     124.11258        128.52834    8.5198714
supply_8    -436.06025       -468.33058  -34.1224463
supply_9    -185.03413       -212.59862  -17.6024613
supply_10    258.20061        280.14692   27.8476061
supply_11     21.48602         18.83446    2.5577666
supply_12   -141.01813        -97.79774  -17.1074762
supply_13    -95.50122        -66.27673  -12.1522910
supply_14     80.55413         65.39016   11.2464646
supply_15    281.70963        295.21142   43.2861315
supply_16   -334.68367       -362.69107  -55.2672108
supply_17     34.30503         43.22439    6.6499055
supply_18   -208.32708       -190.68310  -37.1059014
supply_19    275.35928        231.83876   49.3273960
supply_20     46.45677         37.76785    8.1221179
> colSums( estfun( fit2sls1 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
     -2.706585e-13      -6.787126e-11      -3.197131e-11      -8.604228e-16 
      supply_price   supply_farmPrice       supply_trend 
     -2.140865e-11       2.848921e-11      -7.470691e-13 
> 
> estfun( fit2sls1s )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1          0.67377740    67.126855     58.888145          0.0000000
demand_2         -0.48970560   -51.476916    -47.795266          0.0000000
demand_3          2.44399923   253.648396    236.334725          0.0000000
demand_4          1.49576035   156.352404    146.883667          0.0000000
demand_5          2.29745817   226.646990    229.286325          0.0000000
demand_6          1.32353238   131.887842    133.015004          0.0000000
demand_7          1.79168289   182.701433    184.901674          0.0000000
demand_8         -3.68180446  -376.406440   -396.898521          0.0000000
demand_9         -1.57288129  -148.804783   -151.940333          0.0000000
demand_10         2.85517865   264.729713    253.825382          0.0000000
demand_11        -0.27364942   -25.286121    -20.551072          0.0000000
demand_12        -2.26342866  -223.891221   -174.057664          0.0000000
demand_13        -1.77951473  -181.800771   -150.546946          0.0000000
demand_14         0.09907338     9.934747      8.976048          0.0000000
demand_15         2.56742599   250.635231    264.701620          0.0000000
demand_16        -3.81021340  -369.178383   -400.453428          0.0000000
demand_17        -0.02061224    -1.807659     -1.987020          0.0000000
demand_18        -2.87145237  -290.186278   -299.779628          0.0000000
demand_19         1.66321430   176.405995    184.117823          0.0000000
demand_20        -0.44784056   -51.231034    -56.920535          0.0000000
supply_1          0.00000000     0.000000      0.000000         -0.2679112
supply_2          0.00000000     0.000000      0.000000         -1.4181240
supply_3          0.00000000     0.000000      0.000000          1.6251965
supply_4          0.00000000     0.000000      0.000000          0.7897267
supply_5          0.00000000     0.000000      0.000000          1.4380611
supply_6          0.00000000     0.000000      0.000000          0.6133142
supply_7          0.00000000     0.000000      0.000000          1.2171245
supply_8          0.00000000     0.000000      0.000000         -4.2653058
supply_9          0.00000000     0.000000      0.000000         -1.9558290
supply_10         0.00000000     0.000000      0.000000          2.7847606
supply_11         0.00000000     0.000000      0.000000          0.2325242
supply_12         0.00000000     0.000000      0.000000         -1.4256230
supply_13         0.00000000     0.000000      0.000000         -0.9347916
supply_14         0.00000000     0.000000      0.000000          0.8033189
supply_15         0.00000000     0.000000      0.000000          2.8857421
supply_16         0.00000000     0.000000      0.000000         -3.4542007
supply_17         0.00000000     0.000000      0.000000          0.3911709
supply_18         0.00000000     0.000000      0.000000         -2.0614390
supply_19         0.00000000     0.000000      0.000000          2.5961787
supply_20         0.00000000     0.000000      0.000000          0.4061059
          supply_price supply_farmPrice supply_trend
demand_1       0.00000          0.00000    0.0000000
demand_2       0.00000          0.00000    0.0000000
demand_3       0.00000          0.00000    0.0000000
demand_4       0.00000          0.00000    0.0000000
demand_5       0.00000          0.00000    0.0000000
demand_6       0.00000          0.00000    0.0000000
demand_7       0.00000          0.00000    0.0000000
demand_8       0.00000          0.00000    0.0000000
demand_9       0.00000          0.00000    0.0000000
demand_10      0.00000          0.00000    0.0000000
demand_11      0.00000          0.00000    0.0000000
demand_12      0.00000          0.00000    0.0000000
demand_13      0.00000          0.00000    0.0000000
demand_14      0.00000          0.00000    0.0000000
demand_15      0.00000          0.00000    0.0000000
demand_16      0.00000          0.00000    0.0000000
demand_17      0.00000          0.00000    0.0000000
demand_18      0.00000          0.00000    0.0000000
demand_19      0.00000          0.00000    0.0000000
demand_20      0.00000          0.00000    0.0000000
supply_1     -26.69136        -26.25529   -0.2679112
supply_2    -149.07049       -140.53609   -2.8362481
supply_3     168.66965        161.05697    4.8755895
supply_4      82.55043         77.47219    3.1589066
supply_5     141.86644        159.33717    7.1903053
supply_6      61.11576         66.36060    3.6798853
supply_7     124.11258        128.52834    8.5198714
supply_8    -436.06025       -468.33058  -34.1224463
supply_9    -185.03413       -212.59862  -17.6024613
supply_10    258.20061        280.14692   27.8476061
supply_11     21.48602         18.83446    2.5577666
supply_12   -141.01813        -97.79774  -17.1074762
supply_13    -95.50122        -66.27673  -12.1522910
supply_14     80.55413         65.39016   11.2464646
supply_15    281.70963        295.21142   43.2861315
supply_16   -334.68367       -362.69107  -55.2672108
supply_17     34.30503         43.22439    6.6499055
supply_18   -208.32708       -190.68310  -37.1059014
supply_19    275.35928        231.83876   49.3273960
supply_20     46.45677         37.76785    8.1221179
> colSums( estfun( fit2sls1s ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
     -2.706585e-13      -6.787126e-11      -3.197131e-11      -8.604228e-16 
      supply_price   supply_farmPrice       supply_trend 
     -2.140865e-11       2.848921e-11      -7.470691e-13 
> 
> estfun( fit2sls1r )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1          0.67377740    67.126855     58.888145          0.0000000
demand_2         -0.48970560   -51.476916    -47.795266          0.0000000
demand_3          2.44399923   253.648396    236.334725          0.0000000
demand_4          1.49576035   156.352404    146.883667          0.0000000
demand_5          2.29745817   226.646990    229.286325          0.0000000
demand_6          1.32353238   131.887842    133.015004          0.0000000
demand_7          1.79168289   182.701433    184.901674          0.0000000
demand_8         -3.68180446  -376.406440   -396.898521          0.0000000
demand_9         -1.57288129  -148.804783   -151.940333          0.0000000
demand_10         2.85517865   264.729713    253.825382          0.0000000
demand_11        -0.27364942   -25.286121    -20.551072          0.0000000
demand_12        -2.26342866  -223.891221   -174.057664          0.0000000
demand_13        -1.77951473  -181.800771   -150.546946          0.0000000
demand_14         0.09907338     9.934747      8.976048          0.0000000
demand_15         2.56742599   250.635231    264.701620          0.0000000
demand_16        -3.81021340  -369.178383   -400.453428          0.0000000
demand_17        -0.02061224    -1.807659     -1.987020          0.0000000
demand_18        -2.87145237  -290.186278   -299.779628          0.0000000
demand_19         1.66321430   176.405995    184.117823          0.0000000
demand_20        -0.44784056   -51.231034    -56.920535          0.0000000
supply_1          0.00000000     0.000000      0.000000         -0.2679112
supply_2          0.00000000     0.000000      0.000000         -1.4181240
supply_3          0.00000000     0.000000      0.000000          1.6251965
supply_4          0.00000000     0.000000      0.000000          0.7897267
supply_5          0.00000000     0.000000      0.000000          1.4380611
supply_6          0.00000000     0.000000      0.000000          0.6133142
supply_7          0.00000000     0.000000      0.000000          1.2171245
supply_8          0.00000000     0.000000      0.000000         -4.2653058
supply_9          0.00000000     0.000000      0.000000         -1.9558290
supply_10         0.00000000     0.000000      0.000000          2.7847606
supply_11         0.00000000     0.000000      0.000000          0.2325242
supply_12         0.00000000     0.000000      0.000000         -1.4256230
supply_13         0.00000000     0.000000      0.000000         -0.9347916
supply_14         0.00000000     0.000000      0.000000          0.8033189
supply_15         0.00000000     0.000000      0.000000          2.8857421
supply_16         0.00000000     0.000000      0.000000         -3.4542007
supply_17         0.00000000     0.000000      0.000000          0.3911709
supply_18         0.00000000     0.000000      0.000000         -2.0614390
supply_19         0.00000000     0.000000      0.000000          2.5961787
supply_20         0.00000000     0.000000      0.000000          0.4061059
          supply_price supply_farmPrice supply_trend
demand_1       0.00000          0.00000    0.0000000
demand_2       0.00000          0.00000    0.0000000
demand_3       0.00000          0.00000    0.0000000
demand_4       0.00000          0.00000    0.0000000
demand_5       0.00000          0.00000    0.0000000
demand_6       0.00000          0.00000    0.0000000
demand_7       0.00000          0.00000    0.0000000
demand_8       0.00000          0.00000    0.0000000
demand_9       0.00000          0.00000    0.0000000
demand_10      0.00000          0.00000    0.0000000
demand_11      0.00000          0.00000    0.0000000
demand_12      0.00000          0.00000    0.0000000
demand_13      0.00000          0.00000    0.0000000
demand_14      0.00000          0.00000    0.0000000
demand_15      0.00000          0.00000    0.0000000
demand_16      0.00000          0.00000    0.0000000
demand_17      0.00000          0.00000    0.0000000
demand_18      0.00000          0.00000    0.0000000
demand_19      0.00000          0.00000    0.0000000
demand_20      0.00000          0.00000    0.0000000
supply_1     -26.69136        -26.25529   -0.2679112
supply_2    -149.07049       -140.53609   -2.8362481
supply_3     168.66965        161.05697    4.8755895
supply_4      82.55043         77.47219    3.1589066
supply_5     141.86644        159.33717    7.1903053
supply_6      61.11576         66.36060    3.6798853
supply_7     124.11258        128.52834    8.5198714
supply_8    -436.06025       -468.33058  -34.1224463
supply_9    -185.03413       -212.59862  -17.6024613
supply_10    258.20061        280.14692   27.8476061
supply_11     21.48602         18.83446    2.5577666
supply_12   -141.01813        -97.79774  -17.1074762
supply_13    -95.50122        -66.27673  -12.1522910
supply_14     80.55413         65.39016   11.2464646
supply_15    281.70963        295.21142   43.2861315
supply_16   -334.68367       -362.69107  -55.2672108
supply_17     34.30503         43.22439    6.6499055
supply_18   -208.32708       -190.68310  -37.1059014
supply_19    275.35928        231.83876   49.3273960
supply_20     46.45677         37.76785    8.1221179
> colSums( estfun( fit2sls1r ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
     -2.706585e-13      -6.787126e-11      -3.197131e-11      -8.604228e-16 
      supply_price   supply_farmPrice       supply_trend 
     -2.140865e-11       2.848921e-11      -7.470691e-13 
> 
> 
> ## **************** bread ************************
> bread( fit2sls1 )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)        649.0730897  -6.96688057    0.51004959
demand_price               -6.9668806   0.09630848   -0.02733175
demand_income               0.5100496  -0.02733175    0.02279844
supply_(Intercept)          0.0000000   0.00000000    0.00000000
supply_price                0.0000000   0.00000000    0.00000000
supply_farmPrice            0.0000000   0.00000000    0.00000000
supply_trend                0.0000000   0.00000000    0.00000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000  0.000000000      0.000000000
demand_price                 0.000000  0.000000000      0.000000000
demand_income                0.000000  0.000000000      0.000000000
supply_(Intercept)         955.382982 -7.254880502     -2.144643083
supply_price                -7.254881  0.066142205      0.006200577
supply_farmPrice            -2.144643  0.006200577      0.014786260
supply_trend                -1.955294  0.003835165      0.009118557
                   supply_trend
demand_(Intercept)  0.000000000
demand_price        0.000000000
demand_income       0.000000000
supply_(Intercept) -1.955294134
supply_price        0.003835165
supply_farmPrice    0.009118557
supply_trend        0.065773713
> 
> bread( fit2sls1s )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)        649.0730897  -6.96688057    0.51004959
demand_price               -6.9668806   0.09630848   -0.02733175
demand_income               0.5100496  -0.02733175    0.02279844
supply_(Intercept)          0.0000000   0.00000000    0.00000000
supply_price                0.0000000   0.00000000    0.00000000
supply_farmPrice            0.0000000   0.00000000    0.00000000
supply_trend                0.0000000   0.00000000    0.00000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000  0.000000000      0.000000000
demand_price                 0.000000  0.000000000      0.000000000
demand_income                0.000000  0.000000000      0.000000000
supply_(Intercept)         955.382982 -7.254880502     -2.144643083
supply_price                -7.254881  0.066142205      0.006200577
supply_farmPrice            -2.144643  0.006200577      0.014786260
supply_trend                -1.955294  0.003835165      0.009118557
                   supply_trend
demand_(Intercept)  0.000000000
demand_price        0.000000000
demand_income       0.000000000
supply_(Intercept) -1.955294134
supply_price        0.003835165
supply_farmPrice    0.009118557
supply_trend        0.065773713
> 
> bread( fit2sls1r )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)        649.0730897  -6.96688057    0.51004959
demand_price               -6.9668806   0.09630848   -0.02733175
demand_income               0.5100496  -0.02733175    0.02279844
supply_(Intercept)          0.0000000   0.00000000    0.00000000
supply_price                0.0000000   0.00000000    0.00000000
supply_farmPrice            0.0000000   0.00000000    0.00000000
supply_trend                0.0000000   0.00000000    0.00000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000  0.000000000      0.000000000
demand_price                 0.000000  0.000000000      0.000000000
demand_income                0.000000  0.000000000      0.000000000
supply_(Intercept)         955.382982 -7.254880502     -2.144643083
supply_price                -7.254881  0.066142205      0.006200577
supply_farmPrice            -2.144643  0.006200577      0.014786260
supply_trend                -1.955294  0.003835165      0.009118557
                   supply_trend
demand_(Intercept)  0.000000000
demand_price        0.000000000
demand_income       0.000000000
supply_(Intercept) -1.955294134
supply_price        0.003835165
supply_farmPrice    0.009118557
supply_trend        0.065773713
> 
> proc.time()
   user  system elapsed 
  2.616   0.056   2.659 
