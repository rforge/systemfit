
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( systemfit )
Loading required package: Matrix
Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric


Please cite the 'systemfit' package as:
Arne Henningsen and Jeff D. Hamann (2007). systemfit: A Package for Estimating Systems of Simultaneous Equations in R. Journal of Statistical Software 23(4), 1-40. http://www.jstatsoft.org/v23/i04/.

If you have questions, suggestions, or comments regarding the 'systemfit' package, please use a forum or 'tracker' at systemfit's R-Forge site:
https://r-forge.r-project.org/projects/systemfit/
> options( digits = 3 )
> 
> data( "Kmenta" )
> useMatrix <- FALSE
> 
> demand <- consump ~ price + income
> supply <- consump ~ price + farmPrice + trend
> system <- list( demand = demand, supply = supply )
> restrm <- matrix(0,1,7)  # restriction matrix "R"
> restrm[1,3] <-  1
> restrm[1,7] <- -1
> restrict <- "demand_income - supply_trend = 0"
> restr2m <- matrix(0,2,7)  # restriction matrix "R" 2
> restr2m[1,3] <-  1
> restr2m[1,7] <- -1
> restr2m[2,2] <- -1
> restr2m[2,5] <-  1
> restr2q <- c( 0, 0.5 )    # restriction vector "q" 2
> restrict2 <- c( "demand_income - supply_trend = 0",
+    "- demand_price + supply_price = 0.5" )
> tc <- matrix(0,7,6)
> tc[1,1] <- 1
> tc[2,2] <- 1
> tc[3,3] <- 1
> tc[4,4] <- 1
> tc[5,5] <- 1
> tc[6,6] <- 1
> tc[7,3] <- 1
> restr3m <- matrix(0,1,6)  # restriction matrix "R" 2
> restr3m[1,2] <- -1
> restr3m[1,5] <-  1
> restr3q <- c( 0.5 )       # restriction vector "q" 2
> restrict3 <- "- C2 + C5 = 0.5"
> 
> # It is not possible to estimate OLS with systemfit
> # exactly as EViews does, because EViews uses
> # methodResidCov == "geomean" for the coefficient covariance matrix and
> # methodResidCov == "noDfCor" for the residual covariance matrix, while
> # systemfit uses always the same formulas for both calculations.
> 
> ## *******  single-equation OLS estimations  *********************
> lmDemand <- lm( demand, data = Kmenta )
> lmSupply <- lm( supply, data = Kmenta )
> 
> ## *************** OLS estimation ************************
> ## ********** OLS estimation (default) ********************
> fitols1 <- systemfit( system, "OLS", data = Kmenta, useMatrix = useMatrix )
> print( summary( fitols1 ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    4.43  0.709      0.558

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     7.5194   13.29  2.1e-10 ***
price        -0.3163     0.0907   -3.49   0.0028 ** 
income        0.3346     0.0454    7.37  1.1e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    11.4629    5.08  0.00011 ***
price         0.1604     0.0949    1.69  0.11039    
farmPrice     0.2481     0.0462    5.37  6.2e-05 ***
trend         0.2483     0.0975    2.55  0.02157 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> nobs( fitols1 )
[1] 40
> all.equal( coef( fitols1 ), c( coef( lmDemand ), coef( lmSupply ) ),
+    check.attributes = FALSE )
[1] TRUE
> all.equal( coef( summary( fitols1 ) ),
+    rbind( coef( summary( lmDemand ) ), coef( summary( lmSupply ) ) ),
+    check.attributes = FALSE )
[1] TRUE
> all.equal( vcov( fitols1 ),
+    as.matrix( bdiag( vcov( lmDemand ), vcov( lmSupply ) ) ),
+    check.attributes = FALSE )
[1] TRUE
> 
> ## ********** OLS estimation (no singleEqSigma=F) ******************
> fitols1s <- systemfit( system, "OLS", data = Kmenta,
+    singleEqSigma = FALSE, useMatrix = useMatrix )
> print( summary( fitols1s ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    4.43  0.709      0.558

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     8.4671   11.80  1.3e-09 ***
price        -0.3163     0.1021   -3.10   0.0065 ** 
income        0.3346     0.0511    6.54  5.0e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    10.3587    5.63  3.8e-05 ***
price         0.1604     0.0857    1.87    0.080 .  
farmPrice     0.2481     0.0417    5.94  2.1e-05 ***
trend         0.2483     0.0881    2.82    0.012 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> all.equal( coef( fitols1s ), c( coef( lmDemand ), coef( lmSupply ) ),
+    check.attributes = FALSE )
[1] TRUE
> 
> ## ****************  OLS (useDfSys=T) ***********************
> print( summary( fitols1, useDfSys = TRUE ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    4.43  0.709      0.558

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     7.5194   13.29  8.4e-15 ***
price        -0.3163     0.0907   -3.49   0.0014 ** 
income        0.3346     0.0454    7.37  1.8e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    11.4629    5.08  1.4e-05 ***
price         0.1604     0.0949    1.69    0.100    
farmPrice     0.2481     0.0462    5.37  6.1e-06 ***
trend         0.2483     0.0975    2.55    0.016 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> 
> ## ****************  OLS (methodResidCov="noDfCor") ***********************
> fitols1r <- systemfit( system, "OLS", data = Kmenta,
+    methodResidCov = "noDfCor", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitols1r ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.02  0.709      0.537

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.17   3.41
supply   3.41   4.63

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     6.9325   14.41  5.8e-11 ***
price        -0.3163     0.0836   -3.78   0.0015 ** 
income        0.3346     0.0419    7.99  3.7e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    10.2527    5.68  3.4e-05 ***
price         0.1604     0.0849    1.89    0.077 .  
farmPrice     0.2481     0.0413    6.01  1.8e-05 ***
trend         0.2483     0.0872    2.85    0.012 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> all.equal( coef( fitols1r ), c( coef( lmDemand ), coef( lmSupply ) ),
+    check.attributes = FALSE )
[1] TRUE
> 
> ## ********  OLS (methodResidCov="noDfCor", singleEqSigma=F) ***********
> fitols1rs <- systemfit( system, "OLS", data = Kmenta,
+    methodResidCov = "noDfCor", singleEqSigma = FALSE,
+    useMatrix = useMatrix )
> print( summary( fitols1rs ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.02  0.709      0.537

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.17   3.41
supply   3.41   4.63

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     7.6907   12.99  3.0e-10 ***
price        -0.3163     0.0927   -3.41   0.0033 ** 
income        0.3346     0.0465    7.20  1.5e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754     9.4088    6.19  1.3e-05 ***
price         0.1604     0.0779    2.06   0.0561 .  
farmPrice     0.2481     0.0379    6.55  6.7e-06 ***
trend         0.2483     0.0800    3.10   0.0068 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> all.equal( coef( fitols1rs ), c( coef( lmDemand ), coef( lmSupply ) ),
+    check.attributes = FALSE )
[1] TRUE
> 
> ## ****************  OLS (methodResidCov="Theil" ) ***********************
> fitols1r <- systemfit( system, "OLS", data = Kmenta,
+    methodResidCov = "Theil", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitols1r ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.26  0.709      0.503

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.73   4.28
supply   4.28   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     7.5194   13.29  2.1e-10 ***
price        -0.3163     0.0907   -3.49   0.0028 ** 
income        0.3346     0.0454    7.37  1.1e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    11.4629    5.08  0.00011 ***
price         0.1604     0.0949    1.69  0.11039    
farmPrice     0.2481     0.0462    5.37  6.2e-05 ***
trend         0.2483     0.0975    2.55  0.02157 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> all.equal( coef( fitols1r ), c( coef( lmDemand ), coef( lmSupply ) ),
+    check.attributes = FALSE )
[1] TRUE
> 
> ## ****************  OLS (methodResidCov="max") ***********************
> fitols1r <- systemfit( system, "OLS", data = Kmenta,
+    methodResidCov = "max", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitols1r ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.37  0.709      0.509

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.73   4.26
supply   4.26   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     7.5194   13.29  2.1e-10 ***
price        -0.3163     0.0907   -3.49   0.0028 ** 
income        0.3346     0.0454    7.37  1.1e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    11.4629    5.08  0.00011 ***
price         0.1604     0.0949    1.69  0.11039    
farmPrice     0.2481     0.0462    5.37  6.2e-05 ***
trend         0.2483     0.0975    2.55  0.02157 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> 
> ## ********  OLS (methodResidCov="max", singleEqSigma=F) ***********
> fitols1rs <- systemfit( system, "OLS", data = Kmenta,
+    methodResidCov = "max", singleEqSigma = FALSE,
+    useMatrix = useMatrix )
> print( summary( fitols1rs ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.37  0.709      0.509

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.73   4.26
supply   4.26   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     8.4671   11.80  1.3e-09 ***
price        -0.3163     0.1021   -3.10   0.0065 ** 
income        0.3346     0.0511    6.54  5.0e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    10.3587    5.63  3.8e-05 ***
price         0.1604     0.0857    1.87    0.080 .  
farmPrice     0.2481     0.0417    5.94  2.1e-05 ***
trend         0.2483     0.0881    2.82    0.012 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> 
> 
> ## ********* OLS with cross-equation restriction ************
> ## ****** OLS with cross-equation restriction (default) *********
> fitols2 <- systemfit( system, "OLS", data = Kmenta,
+    restrict.matrix = restrm, useMatrix = useMatrix )
> print( summary( fitols2 ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     2.5  0.703      0.608

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     8.4225   11.82  1.4e-13 ***
price        -0.2917     0.0975   -2.99   0.0051 ** 
income        0.3129     0.0441    7.10  3.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    10.0721    5.60  2.9e-06 ***
price         0.1639     0.0853    1.92    0.063 .  
farmPrice     0.2571     0.0402    6.39  2.7e-07 ***
trend         0.3129     0.0441    7.10  3.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> # the same with symbolically specified restrictions
> fitols2Sym <- systemfit( system, "OLS", data = Kmenta,
+    restrict.matrix = restrict, useMatrix = useMatrix )
> all.equal( fitols2, fitols2Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## ****** OLS with cross-equation restriction (singleEqSigma=T) *******
> fitols2s <- systemfit( system, "OLS", data = Kmenta,
+    restrict.matrix = restrm, singleEqSigma = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitols2s ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     2.5  0.703      0.608

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     7.5640   13.16  6.7e-15 ***
price        -0.2917     0.0887   -3.29   0.0023 ** 
income        0.3129     0.0415    7.54  9.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    11.3165    4.98  1.8e-05 ***
price         0.1639     0.0960    1.71    0.097 .  
farmPrice     0.2571     0.0451    5.69  2.1e-06 ***
trend         0.3129     0.0415    7.54  9.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## ****** OLS with cross-equation restriction (useDfSys=F) *******
> print( summary( fitols2, useDfSys = FALSE ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     2.5  0.703      0.608

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     8.4225   11.82  1.3e-09 ***
price        -0.2917     0.0975   -2.99   0.0082 ** 
income        0.3129     0.0441    7.10  1.8e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    10.0721    5.60  4.0e-05 ***
price         0.1639     0.0853    1.92    0.073 .  
farmPrice     0.2571     0.0402    6.39  8.9e-06 ***
trend         0.3129     0.0441    7.10  2.5e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## ****** OLS with cross-equation restriction (methodResidCov="noDfCor") *******
> fitols2r <- systemfit( system, "OLS", data = Kmenta,
+    restrict.matrix = restrm, methodResidCov = "noDfCor",
+    useMatrix = useMatrix )
> print( summary( fitols2r ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.7  0.703      0.577

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.21   3.68
supply   3.68   4.75

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     7.7652   12.82  1.4e-14 ***
price        -0.2917     0.0899   -3.25   0.0026 ** 
income        0.3129     0.0406    7.70  5.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795     9.2860    6.07  7.0e-07 ***
price         0.1639     0.0786    2.08    0.045 *  
farmPrice     0.2571     0.0371    6.93  5.4e-08 ***
trend         0.3129     0.0406    7.70  5.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## ** OLS with cross-equation restriction (methodResidCov="noDfCor",singleEqSigma=T) ***
> fitols2rs <- systemfit( system, "OLS", data = Kmenta,
+    restrict.matrix = restrm, methodResidCov = "noDfCor",
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitols2rs ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.7  0.703      0.577

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.21   3.68
supply   3.68   4.75

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     7.7652   12.82  1.4e-14 ***
price        -0.2917     0.0899   -3.25   0.0026 ** 
income        0.3129     0.0406    7.70  5.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795     9.2860    6.07  7.0e-07 ***
price         0.1639     0.0786    2.08    0.045 *  
farmPrice     0.2571     0.0371    6.93  5.4e-08 ***
trend         0.3129     0.0406    7.70  5.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## *** OLS with cross-equation restriction via restrict.regMat ***
> ## *** OLS with cross-equation restriction via restrict.regMat (default) ***
> fitols3 <- systemfit( system, "OLS", data = Kmenta, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitols3 ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     2.5  0.703      0.608

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     8.4225   11.82  1.4e-13 ***
price        -0.2917     0.0975   -2.99   0.0051 ** 
income        0.3129     0.0441    7.10  3.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    10.0721    5.60  2.9e-06 ***
price         0.1639     0.0853    1.92    0.063 .  
farmPrice     0.2571     0.0402    6.39  2.7e-07 ***
trend         0.3129     0.0441    7.10  3.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## *** OLS with cross-equation restriction via restrict.regMat (singleEqSigma=T) ***
> fitols3s <- systemfit( system, "OLS", data = Kmenta,
+    restrict.regMat = tc, singleEqSigma = TRUE, useMatrix = useMatrix )
> print( summary( fitols3s ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     2.5  0.703      0.608

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     7.5640   13.16  6.7e-15 ***
price        -0.2917     0.0887   -3.29   0.0023 ** 
income        0.3129     0.0415    7.54  9.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    11.3165    4.98  1.8e-05 ***
price         0.1639     0.0960    1.71    0.097 .  
farmPrice     0.2571     0.0451    5.69  2.1e-06 ***
trend         0.3129     0.0415    7.54  9.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## *** OLS with cross-equation restriction via restrict.regMat (useDfSys=F) ***
> print( summary( fitols3, useDfSys = FALSE ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     2.5  0.703      0.608

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     8.4225   11.82  1.3e-09 ***
price        -0.2917     0.0975   -2.99   0.0082 ** 
income        0.3129     0.0441    7.10  1.8e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    10.0721    5.60  4.0e-05 ***
price         0.1639     0.0853    1.92    0.073 .  
farmPrice     0.2571     0.0402    6.39  8.9e-06 ***
trend         0.3129     0.0441    7.10  2.5e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## *** OLS with cross-equation restriction via restrict.regMat (methodResidCov="noDfCor") ***
> fitols3r <- systemfit( system, "OLS", data = Kmenta,
+    restrict.regMat = tc, methodResidCov = "noDfCor",
+    useMatrix = useMatrix )
> print( summary( fitols3r ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.7  0.703      0.577

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.21   3.68
supply   3.68   4.75

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     7.7652   12.82  1.4e-14 ***
price        -0.2917     0.0899   -3.25   0.0026 ** 
income        0.3129     0.0406    7.70  5.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795     9.2860    6.07  7.0e-07 ***
price         0.1639     0.0786    2.08    0.045 *  
farmPrice     0.2571     0.0371    6.93  5.4e-08 ***
trend         0.3129     0.0406    7.70  5.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## OLS with cross-equation restriction via restrict.regMat (methodResidCov="noDfCor",singleEqSigma=T)
> fitols3rs <- systemfit( system, "OLS", data = Kmenta,
+    restrict.regMat = tc, methodResidCov = "noDfCor", singleEqSigma = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitols3rs ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.7  0.703      0.577

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.21   3.68
supply   3.68   4.75

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     6.9734   14.28  6.7e-16 ***
price        -0.2917     0.0816   -3.57   0.0011 ** 
income        0.3129     0.0381    8.22  1.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    10.1248    5.57  3.1e-06 ***
price         0.1639     0.0859    1.91    0.065 .  
farmPrice     0.2571     0.0404    6.36  2.9e-07 ***
trend         0.3129     0.0381    8.22  1.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> ## ********* OLS with 2 cross-equation restrictions ***********
> ## ********* OLS with 2 cross-equation restrictions (default) ***********
> fitols4 <- systemfit( system, "OLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, useMatrix = useMatrix )
> print( summary( fitols4 ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.69  0.702      0.605

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.76   4.46
supply   4.46   5.99

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     6.1599   16.47  < 2e-16 ***
price        -0.3168     0.0629   -5.04  1.4e-05 ***
income        0.3189     0.0399    8.00  2.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.5515    7.17  2.3e-08 ***
price         0.1832     0.0629    2.91   0.0062 ** 
farmPrice     0.2595     0.0391    6.64  1.1e-07 ***
trend         0.3189     0.0399    8.00  2.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> # the same with symbolically specified restrictions
> fitols4Sym <- systemfit( system, "OLS", data = Kmenta,
+    restrict.matrix = restrict2, useMatrix = useMatrix )
> all.equal( fitols4, fitols4Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## ****** OLS with 2 cross-equation restrictions (singleEqSigma=T) *******
> fitols4s <- systemfit( system, "OLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, singleEqSigma = TRUE, x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitols4s ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.69  0.702      0.605

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.76   4.46
supply   4.46   5.99

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     6.0474   16.78  < 2e-16 ***
price        -0.3168     0.0648   -4.89  2.3e-05 ***
income        0.3189     0.0385    8.29  9.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.9687    6.80  7.0e-08 ***
price         0.1832     0.0648    2.83   0.0077 ** 
farmPrice     0.2595     0.0446    5.82  1.3e-06 ***
trend         0.3189     0.0385    8.29  9.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## ****** OLS with 2 cross-equation restrictions (useDfSys=F) *******
> print( summary( fitols4, useDfSys = FALSE ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.69  0.702      0.605

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.76   4.46
supply   4.46   5.99

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     6.1599   16.47  6.9e-12 ***
price        -0.3168     0.0629   -5.04    1e-04 ***
income        0.3189     0.0399    8.00  3.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.5515    7.17  2.2e-06 ***
price         0.1832     0.0629    2.91     0.01 *  
farmPrice     0.2595     0.0391    6.64  5.6e-06 ***
trend         0.3189     0.0399    8.00  5.5e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## ****** OLS with 2 cross-equation restrictions (methodResidCov="noDfCor") *******
> fitols4r <- systemfit( system, "OLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, methodResidCov = "noDfCor",
+    useMatrix = useMatrix )
> print( summary( fitols4r ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.83  0.702      0.575

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.20   3.67
supply   3.67   4.79

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     5.7621   17.61  < 2e-16 ***
price        -0.3168     0.0589   -5.38  5.0e-06 ***
income        0.3189     0.0373    8.55  4.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.0638    7.67  5.4e-09 ***
price         0.1832     0.0589    3.11   0.0037 ** 
farmPrice     0.2595     0.0365    7.10  2.8e-08 ***
trend         0.3189     0.0373    8.55  4.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## OLS with 2 cross-equation restrictions (methodResidCov="noDfCor", singleEqSigma=T) *
> fitols4rs <- systemfit( system, "OLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, methodResidCov = "noDfCor",
+    singleEqSigma = TRUE, useMatrix = useMatrix )
> print( summary( fitols4rs ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.83  0.702      0.575

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.20   3.67
supply   3.67   4.79

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     5.5234   18.37  < 2e-16 ***
price        -0.3168     0.0589   -5.38  5.0e-06 ***
income        0.3189     0.0352    9.05  1.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.2089    7.51  8.5e-09 ***
price         0.1832     0.0589    3.11   0.0037 ** 
farmPrice     0.2595     0.0399    6.51  1.7e-07 ***
trend         0.3189     0.0352    9.05  1.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## ***** OLS with 2 cross-equation restrictions via R and restrict.regMat ****
> ## ***** OLS with 2 cross-equation restrictions via R and restrict.regMat (default) ****
> fitols5 <- systemfit( system, "OLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, methodResidCov = "noDfCor",
+    useMatrix = useMatrix )
> print( summary( fitols5 ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.83  0.702      0.575

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.20   3.67
supply   3.67   4.79

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     5.7621   17.61  < 2e-16 ***
price        -0.3168     0.0589   -5.38  5.0e-06 ***
income        0.3189     0.0373    8.55  4.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.0638    7.67  5.4e-09 ***
price         0.1832     0.0589    3.11   0.0037 ** 
farmPrice     0.2595     0.0365    7.10  2.8e-08 ***
trend         0.3189     0.0373    8.55  4.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> # the same with symbolically specified restrictions
> fitols5Sym <- systemfit( system, "OLS", data = Kmenta,
+    restrict.matrix = restrict3, restrict.regMat = tc,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> all.equal( fitols5, fitols5Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## ***** OLS with 2 cross-equation restrictions via R and restrict.regMat (singleEqSigma=T) ****
> fitols5s <- systemfit( system, "OLS", data = Kmenta,restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, singleEqSigma = T,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitols5s ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.69  0.702      0.605

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.76   4.46
supply   4.46   5.99

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     6.0474   16.78  < 2e-16 ***
price        -0.3168     0.0648   -4.89  2.3e-05 ***
income        0.3189     0.0385    8.29  9.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.9687    6.80  7.0e-08 ***
price         0.1832     0.0648    2.83   0.0077 ** 
farmPrice     0.2595     0.0446    5.82  1.3e-06 ***
trend         0.3189     0.0385    8.29  9.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## ***** OLS with 2 cross-equation restrictions via R and restrict.regMat (useDfSys=F) ****
> fitols5o <- systemfit( system, "OLS", data = Kmenta,restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, useMatrix = useMatrix )
> print( summary( fitols5o, useDfSys = FALSE ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.69  0.702      0.605

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.76   4.46
supply   4.46   5.99

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     6.1599   16.47  6.9e-12 ***
price        -0.3168     0.0629   -5.04    1e-04 ***
income        0.3189     0.0399    8.00  3.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.5515    7.17  2.2e-06 ***
price         0.1832     0.0629    2.91     0.01 *  
farmPrice     0.2595     0.0391    6.64  5.6e-06 ***
trend         0.3189     0.0399    8.00  5.5e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## OLS with 2 cross-equation restr. via R and restrict.regMat (methodResidCov="noDfCor",singleEqSigma=T)
> fitols5rs <- systemfit( system, "OLS", data = Kmenta,restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, methodResidCov = "noDfCor",
+    singleEqSigma = TRUE, useMatrix = useMatrix )
> print( summary( fitols5rs ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.83  0.702      0.575

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576

The covariance matrix of the residuals
       demand supply
demand   3.20   3.67
supply   3.67   4.79

The correlations of the residuals
       demand supply
demand  1.000  0.938
supply  0.938  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 101.4817     5.5234   18.37  < 2e-16 ***
price        -0.3168     0.0589   -5.38  5.0e-06 ***
income        0.3189     0.0352    9.05  1.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.003 MSE: 3.765 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  54.1494     7.2089    7.51  8.5e-09 ***
price         0.1832     0.0589    3.11   0.0037 ** 
farmPrice     0.2595     0.0399    6.51  1.7e-07 ***
trend         0.3189     0.0352    9.05  1.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.447 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.813 MSE: 5.988 Root MSE: 2.447 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> 
> ## *********** estimations with a single regressor ************
> fitolsS1 <- systemfit(
+    list( consump ~ price - 1, consump ~ price + trend ), "OLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitolsS1 ) )

systemfit results 
method: OLS 

        N DF  SSR detRCov OLS-R2 McElroy-R2
system 40 36 1121     484  -1.09      -1.05

     N DF SSR  MSE RMSE     R2 Adj R2
eq1 20 19 861 45.3 6.73 -2.213 -2.213
eq2 20 17 259 15.3 3.91  0.032 -0.082

The covariance matrix of the residuals
     eq1  eq2
eq1 45.3 14.4
eq2 14.4 15.3

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.549
eq2 0.549 1.000


OLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1

      Estimate Std. Error t value Pr(>|t|)    
price    1.006      0.015    66.9   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 6.733 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.449 MSE: 45.339 Root MSE: 6.733 
Multiple R-Squared: -2.213 Adjusted R-Squared: -2.213 


OLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ price + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.6767    15.2367    6.15  1.1e-05 ***
price         0.0622     0.1513    0.41     0.69    
trend         0.0953     0.1515    0.63     0.54    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.907 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 259.497 MSE: 15.265 Root MSE: 3.907 
Multiple R-Squared: 0.032 Adjusted R-Squared: -0.082 

> fitolsS2 <- systemfit(
+    list( consump ~ price - 1, consump ~ trend - 1 ), "OLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitolsS2 ) )

systemfit results 
method: OLS 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 38 47370  110957  -87.3      -5.28

     N DF   SSR    MSE  RMSE      R2  Adj R2
eq1 20 19   861   45.3  6.73   -2.21   -2.21
eq2 20 19 46509 2447.8 49.48 -172.47 -172.47

The covariance matrix of the residuals
      eq1     eq2
eq1 45.34   -5.15
eq2 -5.15 2447.84

The correlations of the residuals
        eq1     eq2
eq1  1.0000 -0.0439
eq2 -0.0439  1.0000


OLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1

      Estimate Std. Error t value Pr(>|t|)    
price    1.006      0.015    66.9   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 6.733 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.449 MSE: 45.339 Root MSE: 6.733 
Multiple R-Squared: -2.213 Adjusted R-Squared: -2.213 


OLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.405      0.924    8.02  1.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.476 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.922 MSE: 2447.838 Root MSE: 49.476 
Multiple R-Squared: -172.467 Adjusted R-Squared: -172.467 

> fitolsS3 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "OLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitolsS3 ) )

systemfit results 
method: OLS 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 38 93537  108970    -99     -0.977

     N DF   SSR  MSE RMSE     R2 Adj R2
eq1 20 19 46509 2448 49.5 -172.5 -172.5
eq2 20 19 47028 2475 49.8  -69.5  -69.5

The covariance matrix of the residuals
     eq1  eq2
eq1 2448 2439
eq2 2439 2475

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.988
eq2 0.988 1.000


OLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.405      0.924    8.02  1.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.476 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.922 MSE: 2447.838 Root MSE: 49.476 
Multiple R-Squared: -172.467 Adjusted R-Squared: -172.467 


OLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.318      0.929    7.88  2.1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.751 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47028.107 MSE: 2475.164 Root MSE: 49.751 
Multiple R-Squared: -69.48 Adjusted R-Squared: -69.48 

> fitolsS4 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "OLS",
+    data = Kmenta, restrict.matrix = matrix( c( 1, -1 ), nrow = 1 ),
+    useMatrix = useMatrix )
> print( summary( fitolsS4 ) )

systemfit results 
method: OLS 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 39 93548  111736    -99      -1.03

     N DF   SSR  MSE RMSE     R2 Adj R2
eq1 20 19 46514 2448 49.5 -172.5 -172.5
eq2 20 19 47033 2475 49.8  -69.5  -69.5

The covariance matrix of the residuals
     eq1  eq2
eq1 2448 2439
eq2 2439 2475

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.988
eq2 0.988 1.000


OLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.362      0.646    11.4  5.7e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.478 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46514.283 MSE: 2448.12 Root MSE: 49.478 
Multiple R-Squared: -172.487 Adjusted R-Squared: -172.487 


OLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.362      0.646    11.4  5.7e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.754 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47033.469 MSE: 2475.446 Root MSE: 49.754 
Multiple R-Squared: -69.488 Adjusted R-Squared: -69.488 

> fitolsS5 <- systemfit(
+    list( consump ~ 1, farmPrice ~ 1 ), "OLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitolsS5 ) )

systemfit results 
method: OLS 

        N DF  SSR detRCov OLS-R2 McElroy-R2
system 40 38 3337    1224      0          0

     N DF  SSR   MSE  RMSE R2 Adj R2
eq1 20 19  268  14.1  3.76  0      0
eq2 20 19 3069 161.5 12.71  0      0

The covariance matrix of the residuals
     eq1   eq2
eq1 14.1  32.5
eq2 32.5 161.5

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.681
eq2 0.681 1.000


OLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ 1

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   100.90       0.84     120   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.756 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 268.114 MSE: 14.111 Root MSE: 3.756 
Multiple R-Squared: 0 Adjusted R-Squared: 0 


OLS estimates for 'eq2' (equation 2)
Model Formula: farmPrice ~ 1

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)    96.62       2.84      34   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 12.709 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 3068.757 MSE: 161.514 Root MSE: 12.709 
Multiple R-Squared: 0 Adjusted R-Squared: 0 

> 
> 
> ## **************** shorter summaries **********************
> print( summary( fitols1, useDfSys = TRUE, equations = FALSE ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    4.43  0.709      0.558

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.8954     7.5194   13.29  8.4e-15 ***
demand_price        -0.3163     0.0907   -3.49   0.0014 ** 
demand_income        0.3346     0.0454    7.37  1.8e-08 ***
supply_(Intercept)  58.2754    11.4629    5.08  1.4e-05 ***
supply_price         0.1604     0.0949    1.69   0.1004    
supply_farmPrice     0.2481     0.0462    5.37  6.1e-06 ***
supply_trend         0.2483     0.0975    2.55   0.0157 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitols2r ), residCov = FALSE, equations = FALSE )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.7  0.703      0.577

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.5563     7.7652   12.82  1.4e-14 ***
demand_price        -0.2917     0.0899   -3.25   0.0026 ** 
demand_income        0.3129     0.0406    7.70  5.9e-09 ***
supply_(Intercept)  56.3795     9.2860    6.07  7.0e-07 ***
supply_price         0.1639     0.0786    2.08   0.0447 *  
supply_farmPrice     0.2571     0.0371    6.93  5.4e-08 ***
supply_trend         0.3129     0.0406    7.70  5.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitols3s, useDfSys = FALSE ), residCov = TRUE )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     2.5  0.703      0.608

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.2 3.78 1.94 0.761  0.732
supply 20 16 95.1 5.94 2.44 0.645  0.579

The covariance matrix of the residuals
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


OLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.5563     7.5640   13.16  2.4e-10 ***
price        -0.2917     0.0887   -3.29   0.0043 ** 
income        0.3129     0.0415    7.54  8.1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.186 MSE: 3.776 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.732 


OLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.3795    11.3165    4.98  0.00014 ***
price         0.1639     0.0960    1.71  0.10724    
farmPrice     0.2571     0.0451    5.69  3.3e-05 ***
trend         0.3129     0.0415    7.54  1.2e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.438 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.088 MSE: 5.943 Root MSE: 2.438 
Multiple R-Squared: 0.645 Adjusted R-Squared: 0.579 

> 
> print( summary( fitols4rs, residCov = FALSE, equations = FALSE ) )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.83  0.702      0.575

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept) 101.4817     5.5234   18.37  < 2e-16 ***
demand_price        -0.3168     0.0589   -5.38  5.0e-06 ***
demand_income        0.3189     0.0352    9.05  1.1e-10 ***
supply_(Intercept)  54.1494     7.2089    7.51  8.5e-09 ***
supply_price         0.1832     0.0589    3.11   0.0037 ** 
supply_farmPrice     0.2595     0.0399    6.51  1.7e-07 ***
supply_trend         0.3189     0.0352    9.05  1.1e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitols5, equations = FALSE ), residCov = FALSE )

systemfit results 
method: OLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.83  0.702      0.575

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 64.0 3.77 1.94 0.761  0.733
supply 20 16 95.8 5.99 2.45 0.643  0.576


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept) 101.4817     5.7621   17.61  < 2e-16 ***
demand_price        -0.3168     0.0589   -5.38  5.0e-06 ***
demand_income        0.3189     0.0373    8.55  4.3e-10 ***
supply_(Intercept)  54.1494     7.0638    7.67  5.4e-09 ***
supply_price         0.1832     0.0589    3.11   0.0037 ** 
supply_farmPrice     0.2595     0.0365    7.10  2.8e-08 ***
supply_trend         0.3189     0.0373    8.55  4.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> 
> ## ****************** residuals **************************
> print( residuals( fitols1 ) )
   demand supply
1   1.074 -0.444
2  -0.390 -0.896
3   2.625  1.965
4   1.802  1.134
5   1.946  1.514
6   1.175  0.680
7   1.530  1.569
8  -2.933 -4.407
9  -1.365 -2.599
10  2.031  2.469
11 -0.149 -0.598
12 -1.954 -1.697
13 -1.121 -1.064
14 -0.220  0.970
15  1.487  3.159
16 -3.701 -3.866
17 -1.273 -0.265
18 -2.002 -2.449
19  1.738  3.110
20 -0.299  1.714
> print( residuals( fitols1$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
-0.444 -0.896  1.965  1.134  1.514  0.680  1.569 -4.407 -2.599  2.469 -0.598 
    12     13     14     15     16     17     18     19     20 
-1.697 -1.064  0.970  3.159 -3.866 -0.265 -2.449  3.110  1.714 
> 
> print( residuals( fitols2r ) )
    demand supply
1   0.8465  0.156
2  -0.4933 -0.384
3   2.5225  2.415
4   1.7066  1.525
5   2.0445  1.750
6   1.2529  0.870
7   1.6277  1.711
8  -2.8261 -4.380
9  -1.2979 -2.597
10  2.0592  2.497
11 -0.4663 -0.466
12 -2.3732 -1.540
13 -1.4734 -1.006
14 -0.3398  0.885
15  1.7283  2.835
16 -3.4975 -4.290
17 -0.9651 -0.760
18 -1.9512 -2.911
19  1.8829  2.606
20  0.0129  1.085
> print( residuals( fitols2r$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.8465 -0.4933  2.5225  1.7066  2.0445  1.2529  1.6277 -2.8261 -1.2979  2.0592 
     11      12      13      14      15      16      17      18      19      20 
-0.4663 -2.3732 -1.4734 -0.3398  1.7283 -3.4975 -0.9651 -1.9512  1.8829  0.0129 
> 
> print( residuals( fitols3s ) )
    demand supply
1   0.8465  0.156
2  -0.4933 -0.384
3   2.5225  2.415
4   1.7066  1.525
5   2.0445  1.750
6   1.2529  0.870
7   1.6277  1.711
8  -2.8261 -4.380
9  -1.2979 -2.597
10  2.0592  2.497
11 -0.4663 -0.466
12 -2.3732 -1.540
13 -1.4734 -1.006
14 -0.3398  0.885
15  1.7283  2.835
16 -3.4975 -4.290
17 -0.9651 -0.760
18 -1.9512 -2.911
19  1.8829  2.606
20  0.0129  1.085
> print( residuals( fitols3s$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.156 -0.384  2.415  1.525  1.750  0.870  1.711 -4.380 -2.597  2.497 -0.466 
    12     13     14     15     16     17     18     19     20 
-1.540 -1.006  0.885  2.835 -4.290 -0.760 -2.911  2.606  1.085 
> 
> print( residuals( fitols4rs ) )
   demand supply
1   0.915  0.204
2  -0.387 -0.421
3   2.613  2.388
4   1.815  1.474
5   1.980  1.787
6   1.221  0.879
7   1.620  1.690
8  -2.769 -4.489
9  -1.382 -2.549
10  1.890  2.660
11 -0.506 -0.297
12 -2.280 -1.456
13 -1.323 -1.013
14 -0.330  0.925
15  1.572  2.889
16 -3.582 -4.313
17 -1.298 -0.573
18 -1.892 -3.023
19  1.948  2.462
20  0.174  0.777
> print( residuals( fitols4rs$eq[[ 1 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.915 -0.387  2.613  1.815  1.980  1.221  1.620 -2.769 -1.382  1.890 -0.506 
    12     13     14     15     16     17     18     19     20 
-2.280 -1.323 -0.330  1.572 -3.582 -1.298 -1.892  1.948  0.174 
> 
> print( residuals( fitols5 ) )
   demand supply
1   0.915  0.204
2  -0.387 -0.421
3   2.613  2.388
4   1.815  1.474
5   1.980  1.787
6   1.221  0.879
7   1.620  1.690
8  -2.769 -4.489
9  -1.382 -2.549
10  1.890  2.660
11 -0.506 -0.297
12 -2.280 -1.456
13 -1.323 -1.013
14 -0.330  0.925
15  1.572  2.889
16 -3.582 -4.313
17 -1.298 -0.573
18 -1.892 -3.023
19  1.948  2.462
20  0.174  0.777
> print( residuals( fitols5$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.204 -0.421  2.388  1.474  1.787  0.879  1.690 -4.489 -2.549  2.660 -0.297 
    12     13     14     15     16     17     18     19     20 
-1.456 -1.013  0.925  2.889 -4.313 -0.573 -3.023  2.462  0.777 
> 
> 
> ## *************** coefficients *********************
> print( round( coef( fitols1rs ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            99.895             -0.316              0.335             58.275 
      supply_price   supply_farmPrice       supply_trend 
             0.160              0.248              0.248 
> print( round( coef( fitols1rs$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
     58.275       0.160       0.248       0.248 
> 
> print( round( coef( fitols2s ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            99.556             -0.292              0.313             56.380 
      supply_price   supply_farmPrice       supply_trend 
             0.164              0.257              0.313 
> print( round( coef( fitols2s$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
     99.556      -0.292       0.313 
> 
> print( round( coef( fitols3 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            99.556             -0.292              0.313             56.380 
      supply_price   supply_farmPrice       supply_trend 
             0.164              0.257              0.313 
> print( round( coef( fitols3, modified.regMat = TRUE ), digits = 6 ) )
    C1     C2     C3     C4     C5     C6 
99.556 -0.292  0.313 56.380  0.164  0.257 
> print( round( coef( fitols3$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
     56.380       0.164       0.257       0.313 
> 
> print( round( coef( fitols4r ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
           101.482             -0.317              0.319             54.149 
      supply_price   supply_farmPrice       supply_trend 
             0.183              0.260              0.319 
> print( round( coef( fitols4r$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
    101.482      -0.317       0.319 
> 
> print( round( coef( fitols5 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
           101.482             -0.317              0.319             54.149 
      supply_price   supply_farmPrice       supply_trend 
             0.183              0.260              0.319 
> print( round( coef( fitols5, modified.regMat = TRUE ), digits = 6 ) )
     C1      C2      C3      C4      C5      C6 
101.482  -0.317   0.319  54.149   0.183   0.260 
> print( round( coef( fitols5$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
     54.149       0.183       0.260       0.319 
> 
> 
> ## *************** coefficients with stats *********************
> print( round( coef( summary( fitols1rs, useDfSys = FALSE ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   99.895     8.4671   11.80 0.000000
demand_price         -0.316     0.1021   -3.10 0.006536
demand_income         0.335     0.0511    6.54 0.000005
supply_(Intercept)   58.275    10.3587    5.63 0.000038
supply_price          0.160     0.0857    1.87 0.079851
supply_farmPrice      0.248     0.0417    5.94 0.000021
supply_trend          0.248     0.0881    2.82 0.012382
> print( round( coef( summary( fitols1rs$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   58.275    10.3587    5.63 0.000038
price          0.160     0.0857    1.87 0.079851
farmPrice      0.248     0.0417    5.94 0.000021
trend          0.248     0.0881    2.82 0.012382
> 
> print( round( coef( summary( fitols2s ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   99.556     7.5640   13.16 0.000000
demand_price         -0.292     0.0887   -3.29 0.002340
demand_income         0.313     0.0415    7.54 0.000000
supply_(Intercept)   56.380    11.3165    4.98 0.000018
supply_price          0.164     0.0960    1.71 0.097028
supply_farmPrice      0.257     0.0451    5.69 0.000002
supply_trend          0.313     0.0415    7.54 0.000000
> print( round( coef( summary( fitols2s$eq[[ 1 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   99.556     7.5640   13.16  0.00000
price         -0.292     0.0887   -3.29  0.00234
income         0.313     0.0415    7.54  0.00000
> 
> print( round( coef( summary( fitols3, useDfSys = FALSE ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   99.556     8.4225   11.82 0.000000
demand_price         -0.292     0.0975   -2.99 0.008189
demand_income         0.313     0.0441    7.10 0.000002
supply_(Intercept)   56.380    10.0721    5.60 0.000040
supply_price          0.164     0.0853    1.92 0.072611
supply_farmPrice      0.257     0.0402    6.39 0.000009
supply_trend          0.313     0.0441    7.10 0.000003
> print( round( coef( summary( fitols3, useDfSys = FALSE ), modified.regMat = TRUE ),
+    digits = 6 ) )
   Estimate Std. Error t value Pr(>|t|)
C1   99.556     8.4225   11.82       NA
C2   -0.292     0.0975   -2.99       NA
C3    0.313     0.0441    7.10       NA
C4   56.380    10.0721    5.60       NA
C5    0.164     0.0853    1.92       NA
C6    0.257     0.0402    6.39       NA
> print( round( coef( summary( fitols3$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   56.380    10.0721    5.60 0.000040
price          0.164     0.0853    1.92 0.072611
farmPrice      0.257     0.0402    6.39 0.000009
trend          0.313     0.0441    7.10 0.000003
> 
> print( round( coef( summary( fitols4r, useDfSys = FALSE ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)  101.482     5.7621   17.61  0.0e+00
demand_price         -0.317     0.0589   -5.38  5.0e-05
demand_income         0.319     0.0373    8.55  0.0e+00
supply_(Intercept)   54.149     7.0638    7.67  1.0e-06
supply_price          0.183     0.0589    3.11  6.7e-03
supply_farmPrice      0.260     0.0365    7.10  3.0e-06
supply_trend          0.319     0.0373    8.55  0.0e+00
> print( round( coef( summary( fitols4r$eq[[ 1 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)  101.482     5.7621   17.61    0e+00
price         -0.317     0.0589   -5.38    5e-05
income         0.319     0.0373    8.55    0e+00
> 
> print( round( coef( summary( fitols5 ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)  101.482     5.7621   17.61 0.000000
demand_price         -0.317     0.0589   -5.38 0.000005
demand_income         0.319     0.0373    8.55 0.000000
supply_(Intercept)   54.149     7.0638    7.67 0.000000
supply_price          0.183     0.0589    3.11 0.003680
supply_farmPrice      0.260     0.0365    7.10 0.000000
supply_trend          0.319     0.0373    8.55 0.000000
> print( round( coef( summary( fitols5 ), modified.regMat = TRUE ), digits = 6 ) )
   Estimate Std. Error t value Pr(>|t|)
C1  101.482     5.7621   17.61 0.000000
C2   -0.317     0.0589   -5.38 0.000005
C3    0.319     0.0373    8.55 0.000000
C4   54.149     7.0638    7.67 0.000000
C5    0.183     0.0589    3.11 0.003680
C6    0.260     0.0365    7.10 0.000000
> print( round( coef( summary( fitols5$eq[[ 2 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   54.149     7.0638    7.67  0.00000
price          0.183     0.0589    3.11  0.00368
farmPrice      0.260     0.0365    7.10  0.00000
trend          0.319     0.0373    8.55  0.00000
> 
> 
> ## *********** variance covariance matrix of the coefficients *******
> print( round( vcov( fitols1rs ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            71.6926     -0.75420       0.04078
demand_price                  -0.7542      0.01043      -0.00296
demand_income                  0.0408     -0.00296       0.00262
supply_(Intercept)             0.0000      0.00000       0.00000
supply_price                   0.0000      0.00000       0.00000
supply_farmPrice               0.0000      0.00000       0.00000
supply_trend                   0.0000      0.00000       0.00000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)              0.000     0.000000         0.000000
demand_price                    0.000     0.000000         0.000000
demand_income                   0.000     0.000000         0.000000
supply_(Intercept)            107.303    -0.806417        -0.248549
supply_price                   -0.806     0.007352         0.000689
supply_farmPrice               -0.249     0.000689         0.001742
supply_trend                   -0.228     0.000426         0.001074
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.227988
supply_price           0.000426
supply_farmPrice       0.001074
supply_trend           0.007766
> print( round( vcov( fitols1rs$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     107.303 -0.806417 -0.248549 -0.227988
price            -0.806  0.007352  0.000689  0.000426
farmPrice        -0.249  0.000689  0.001742  0.001074
trend            -0.228  0.000426  0.001074  0.007766
> 
> print( round( vcov( fitols2s ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)           57.21413    -0.596328      0.026850
demand_price                 -0.59633     0.007862     -0.001948
demand_income                 0.02685    -0.001948      0.001722
supply_(Intercept)           -0.78825     0.057190     -0.050565
supply_price                  0.00147    -0.000107      0.000095
supply_farmPrice              0.00371    -0.000269      0.000238
supply_trend                  0.02685    -0.001948      0.001722
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            -0.7883     0.001474         0.003714
demand_price                   0.0572    -0.000107        -0.000269
demand_income                 -0.0506     0.000095         0.000238
supply_(Intercept)           128.0635    -1.001596        -0.280017
supply_price                  -1.0016     0.009225         0.000806
supply_farmPrice              -0.2800     0.000806         0.002038
supply_trend                  -0.0506     0.000095         0.000238
                   supply_trend
demand_(Intercept)     0.026850
demand_price          -0.001948
demand_income          0.001722
supply_(Intercept)    -0.050565
supply_price           0.000095
supply_farmPrice       0.000238
supply_trend           0.001722
> print( round( vcov( fitols2s$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     57.2141 -0.59633  0.02685
price           -0.5963  0.00786 -0.00195
income           0.0268 -0.00195  0.00172
> 
> print( round( vcov( fitols3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)           70.93892    -0.736413      0.030252
demand_price                 -0.73641     0.009503     -0.002195
demand_income                 0.03025    -0.002195      0.001941
supply_(Intercept)           -0.88813     0.064436     -0.056972
supply_price                  0.00166    -0.000120      0.000107
supply_farmPrice              0.00419    -0.000304      0.000268
supply_trend                  0.03025    -0.002195      0.001941
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            -0.8881     0.001661         0.004185
demand_price                   0.0644    -0.000120        -0.000304
demand_income                 -0.0570     0.000107         0.000268
supply_(Intercept)           101.4478    -0.790443        -0.223090
supply_price                  -0.7904     0.007274         0.000640
supply_farmPrice              -0.2231     0.000640         0.001617
supply_trend                  -0.0570     0.000107         0.000268
                   supply_trend
demand_(Intercept)     0.030252
demand_price          -0.002195
demand_income          0.001941
supply_(Intercept)    -0.056972
supply_price           0.000107
supply_farmPrice       0.000268
supply_trend           0.001941
> print( round( vcov( fitols3, modified.regMat = TRUE ), digits = 6 ) )
         C1        C2        C3       C4        C5        C6
C1 70.93892 -0.736413  0.030252  -0.8881  0.001661  0.004185
C2 -0.73641  0.009503 -0.002195   0.0644 -0.000120 -0.000304
C3  0.03025 -0.002195  0.001941  -0.0570  0.000107  0.000268
C4 -0.88813  0.064436 -0.056972 101.4478 -0.790443 -0.223090
C5  0.00166 -0.000120  0.000107  -0.7904  0.007274  0.000640
C6  0.00419 -0.000304  0.000268  -0.2231  0.000640  0.001617
> print( round( vcov( fitols3$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     101.448 -0.790443 -0.223090 -0.056972
price            -0.790  0.007274  0.000640  0.000107
farmPrice        -0.223  0.000640  0.001617  0.000268
trend            -0.057  0.000107  0.000268  0.001941
> 
> print( round( vcov( fitols4r ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            33.2016    -0.272100     -0.059329
demand_price                  -0.2721     0.003464     -0.000762
demand_income                 -0.0593    -0.000762      0.001390
supply_(Intercept)            30.8652    -0.357363      0.050012
supply_price                  -0.2721     0.003464     -0.000762
supply_farmPrice              -0.0313     0.000196      0.000120
supply_trend                  -0.0593    -0.000762      0.001390
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)             30.865    -0.272100        -0.031328
demand_price                   -0.357     0.003464         0.000196
demand_income                   0.050    -0.000762         0.000120
supply_(Intercept)             49.897    -0.357363        -0.149852
supply_price                   -0.357     0.003464         0.000196
supply_farmPrice               -0.150     0.000196         0.001335
supply_trend                    0.050    -0.000762         0.000120
                   supply_trend
demand_(Intercept)    -0.059329
demand_price          -0.000762
demand_income          0.001390
supply_(Intercept)     0.050012
supply_price          -0.000762
supply_farmPrice       0.000120
supply_trend           0.001390
> print( round( vcov( fitols4r$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)     33.2016 -0.272100 -0.059329
price           -0.2721  0.003464 -0.000762
income          -0.0593 -0.000762  0.001390
> 
> print( round( vcov( fitols5 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            33.2016    -0.272100     -0.059329
demand_price                  -0.2721     0.003464     -0.000762
demand_income                 -0.0593    -0.000762      0.001390
supply_(Intercept)            30.8652    -0.357363      0.050012
supply_price                  -0.2721     0.003464     -0.000762
supply_farmPrice              -0.0313     0.000196      0.000120
supply_trend                  -0.0593    -0.000762      0.001390
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)             30.865    -0.272100        -0.031328
demand_price                   -0.357     0.003464         0.000196
demand_income                   0.050    -0.000762         0.000120
supply_(Intercept)             49.897    -0.357363        -0.149852
supply_price                   -0.357     0.003464         0.000196
supply_farmPrice               -0.150     0.000196         0.001335
supply_trend                    0.050    -0.000762         0.000120
                   supply_trend
demand_(Intercept)    -0.059329
demand_price          -0.000762
demand_income          0.001390
supply_(Intercept)     0.050012
supply_price          -0.000762
supply_farmPrice       0.000120
supply_trend           0.001390
> print( round( vcov( fitols5, modified.regMat = TRUE ), digits = 6 ) )
        C1        C2        C3     C4        C5        C6
C1 33.2016 -0.272100 -0.059329 30.865 -0.272100 -0.031328
C2 -0.2721  0.003464 -0.000762 -0.357  0.003464  0.000196
C3 -0.0593 -0.000762  0.001390  0.050 -0.000762  0.000120
C4 30.8652 -0.357363  0.050012 49.897 -0.357363 -0.149852
C5 -0.2721  0.003464 -0.000762 -0.357  0.003464  0.000196
C6 -0.0313  0.000196  0.000120 -0.150  0.000196  0.001335
> print( round( vcov( fitols5$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)      49.897 -0.357363 -0.149852  0.050012
price            -0.357  0.003464  0.000196 -0.000762
farmPrice        -0.150  0.000196  0.001335  0.000120
trend             0.050 -0.000762  0.000120  0.001390
> 
> 
> ## *********** confidence intervals of coefficients *************
> print( confint( fitols1, useDfSys = TRUE ) )
                    2.5 %  97.5 %
demand_(Intercept) 84.597 115.194
demand_price       -0.501  -0.132
demand_income       0.242   0.427
supply_(Intercept) 34.954  81.597
supply_price       -0.033   0.353
supply_farmPrice    0.154   0.342
supply_trend        0.050   0.447
> print( confint( fitols1$eq[[ 2 ]], level = 0.9, useDfSys = TRUE ) )
               5 %   95 %
(Intercept) 38.876 77.675
price        0.000  0.321
farmPrice    0.170  0.326
trend        0.083  0.413
> 
> print( confint( fitols2r, level = 0.9 ) )
                      5 %    95 %
demand_(Intercept) 83.776 115.337
demand_price       -0.474  -0.109
demand_income       0.230   0.395
supply_(Intercept) 37.508  75.251
supply_price        0.004   0.324
supply_farmPrice    0.182   0.332
supply_trend        0.230   0.395
> print( confint( fitols2r$eq[[ 1 ]], level = 0.99 ) )
             0.5 %  99.5 %
(Intercept) 78.370 120.743
price       -0.537  -0.046
income       0.202   0.424
> 
> print( confint( fitols3s, level = 0.99 ) )
                    0.5 %  99.5 %
demand_(Intercept) 84.184 114.928
demand_price       -0.472  -0.112
demand_income       0.229   0.397
supply_(Intercept) 33.382  79.377
supply_price       -0.031   0.359
supply_farmPrice    0.165   0.349
supply_trend        0.229   0.397
> print( confint( fitols3s$eq[[ 2 ]], level = 0.5 ) )
              25 %   75 %
(Intercept) 48.664 64.095
price        0.098  0.229
farmPrice    0.226  0.288
trend        0.285  0.341
> 
> print( confint( fitols4rs, level = 0.5 ) )
                     25 %    75 %
demand_(Intercept) 90.269 112.695
demand_price       -0.436  -0.197
demand_income       0.247   0.390
supply_(Intercept) 39.515  68.784
supply_price        0.064   0.303
supply_farmPrice    0.179   0.340
supply_trend        0.247   0.390
> print( confint( fitols4rs$eq[[ 1 ]], level = 0.25 ) )
            37.5 %  62.5 %
(Intercept) 99.708 103.256
price       -0.336  -0.298
income       0.308   0.330
> 
> print( confint( fitols5, level = 0.25 ) )
                   37.5 %  62.5 %
demand_(Intercept) 89.784 113.179
demand_price       -0.436  -0.197
demand_income       0.243   0.395
supply_(Intercept) 39.809  68.490
supply_price        0.064   0.303
supply_farmPrice    0.185   0.334
supply_trend        0.243   0.395
> print( confint( fitols5$eq[[ 2 ]], level = 0.999 ) )
             0.1 %  100 %
(Intercept) 28.782 79.517
price       -0.028  0.395
farmPrice    0.128  0.391
trend        0.185  0.453
> 
> print( confint( fitols3, level = 0.999, useDfSys = FALSE ) )
                    0.1 %   100 %
demand_(Intercept) 81.786 117.326
demand_price       -0.497  -0.086
demand_income       0.220   0.406
supply_(Intercept) 35.028  77.731
supply_price       -0.017   0.345
supply_farmPrice    0.172   0.342
supply_trend        0.219   0.406
> print( confint( fitols3$eq[[ 1 ]], useDfSys = FALSE ) )
             2.5 %  97.5 %
(Intercept) 81.786 117.326
price       -0.497  -0.086
income       0.220   0.406
> 
> 
> ## *********** fitted values *************
> print( fitted( fitols1 ) )
   demand supply
1    97.4   98.9
2    99.6  100.1
3    99.5  100.2
4    99.7  100.4
5   102.3  102.7
6   102.1  102.6
7   102.5  102.4
8   102.8  104.3
9   101.7  102.9
10  100.8  100.4
11   95.6   96.0
12   94.4   94.1
13   95.7   95.6
14   99.0   97.8
15  104.3  102.6
16  103.9  104.1
17  104.8  103.8
18  101.9  102.4
19  103.5  102.1
20  106.5  104.5
> print( fitted( fitols1$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.9 100.1 100.2 100.4 102.7 102.6 102.4 104.3 102.9 100.4  96.0  94.1  95.6 
   14    15    16    17    18    19    20 
 97.8 102.6 104.1 103.8 102.4 102.1 104.5 
> 
> print( fitted( fitols2r ) )
   demand supply
1    97.6   98.3
2    99.7   99.6
3    99.6   99.7
4    99.8  100.0
5   102.2  102.5
6   102.0  102.4
7   102.4  102.3
8   102.7  104.3
9   101.6  102.9
10  100.8  100.3
11   95.9   95.9
12   94.8   94.0
13   96.0   95.5
14   99.1   97.9
15  104.1  103.0
16  103.7  104.5
17  104.5  104.3
18  101.9  102.8
19  103.3  102.6
20  106.2  105.1
> print( fitted( fitols2r$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.6  99.7  99.6  99.8 102.2 102.0 102.4 102.7 101.6 100.8  95.9  94.8  96.0 
   14    15    16    17    18    19    20 
 99.1 104.1 103.7 104.5 101.9 103.3 106.2 
> 
> print( fitted( fitols3s ) )
   demand supply
1    97.6   98.3
2    99.7   99.6
3    99.6   99.7
4    99.8  100.0
5   102.2  102.5
6   102.0  102.4
7   102.4  102.3
8   102.7  104.3
9   101.6  102.9
10  100.8  100.3
11   95.9   95.9
12   94.8   94.0
13   96.0   95.5
14   99.1   97.9
15  104.1  103.0
16  103.7  104.5
17  104.5  104.3
18  101.9  102.8
19  103.3  102.6
20  106.2  105.1
> print( fitted( fitols3s$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.3  99.6  99.7 100.0 102.5 102.4 102.3 104.3 102.9 100.3  95.9  94.0  95.5 
   14    15    16    17    18    19    20 
 97.9 103.0 104.5 104.3 102.8 102.6 105.1 
> 
> print( fitted( fitols4rs ) )
   demand supply
1    97.6   98.3
2    99.6   99.6
3    99.5   99.8
4    99.7  100.0
5   102.3  102.5
6   102.0  102.4
7   102.4  102.3
8   102.7  104.4
9   101.7  102.9
10  100.9  100.2
11   95.9   95.7
12   94.7   93.9
13   95.9   95.5
14   99.1   97.8
15  104.2  102.9
16  103.8  104.5
17  104.8  104.1
18  101.8  103.0
19  103.3  102.8
20  106.1  105.5
> print( fitted( fitols4rs$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.6  99.6  99.5  99.7 102.3 102.0 102.4 102.7 101.7 100.9  95.9  94.7  95.9 
   14    15    16    17    18    19    20 
 99.1 104.2 103.8 104.8 101.8 103.3 106.1 
> 
> print( fitted( fitols5 ) )
   demand supply
1    97.6   98.3
2    99.6   99.6
3    99.5   99.8
4    99.7  100.0
5   102.3  102.5
6   102.0  102.4
7   102.4  102.3
8   102.7  104.4
9   101.7  102.9
10  100.9  100.2
11   95.9   95.7
12   94.7   93.9
13   95.9   95.5
14   99.1   97.8
15  104.2  102.9
16  103.8  104.5
17  104.8  104.1
18  101.8  103.0
19  103.3  102.8
20  106.1  105.5
> print( fitted( fitols5$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.3  99.6  99.8 100.0 102.5 102.4 102.3 104.4 102.9 100.2  95.7  93.9  95.5 
   14    15    16    17    18    19    20 
 97.8 102.9 104.5 104.1 103.0 102.8 105.5 
> 
> 
> ## *********** predicted values *************
> predictData <- Kmenta
> predictData$consump <- NULL
> predictData$price <- Kmenta$price * 0.9
> predictData$income <- Kmenta$income * 1.1
> 
> print( predict( fitols1, se.fit = TRUE, interval = "prediction",
+    useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         97.4         0.643       93.3      101.5        98.9         1.056
2         99.6         0.577       95.5      103.7       100.1         1.037
3         99.5         0.545       95.5      103.6       100.2         0.939
4         99.7         0.582       95.6      103.8       100.4         0.912
5        102.3         0.502       98.2      106.4       102.7         0.895
6        102.1         0.463       98.0      106.1       102.6         0.791
7        102.5         0.484       98.4      106.5       102.4         0.719
8        102.8         0.601       98.7      106.9       104.3         0.963
9        101.7         0.527       97.6      105.8       102.9         0.788
10       100.8         0.788       96.5      105.0       100.4         0.981
11        95.6         0.946       91.2      100.0        96.0         1.185
12        94.4         0.980       90.0       98.8        94.1         1.394
13        95.7         0.880       91.3      100.0        95.6         1.244
14        99.0         0.508       94.9      103.0        97.8         0.896
15       104.3         0.758      100.1      108.5       102.6         0.874
16       103.9         0.616       99.8      108.0       104.1         0.916
17       104.8         1.273      100.1      109.5       103.8         1.605
18       101.9         0.536       97.9      106.0       102.4         0.962
19       103.5         0.680       99.3      107.6       102.1         1.098
20       106.5         1.274      101.8      111.2       104.5         1.664
   supply.lwr supply.upr
1        93.6      104.3
2        94.8      105.4
3        94.9      105.5
4        95.1      105.6
5        97.5      107.9
6        97.4      107.7
7        97.3      107.5
8        99.0      109.6
9        97.8      108.1
10       95.1      105.6
11       90.6      101.5
12       88.5       99.8
13       90.1      101.1
14       92.6      103.0
15       97.4      107.8
16       98.9      109.3
17       97.9      109.7
18       97.1      107.6
19       96.7      107.5
20       98.6      110.5
> print( predict( fitols1$eq[[ 2 ]], se.fit = TRUE, interval = "prediction",
+    useDfSys = TRUE ) )
     fit se.fit  lwr   upr
1   98.9  1.056 93.6 104.3
2  100.1  1.037 94.8 105.4
3  100.2  0.939 94.9 105.5
4  100.4  0.912 95.1 105.6
5  102.7  0.895 97.5 107.9
6  102.6  0.791 97.4 107.7
7  102.4  0.719 97.3 107.5
8  104.3  0.963 99.0 109.6
9  102.9  0.788 97.8 108.1
10 100.4  0.981 95.1 105.6
11  96.0  1.185 90.6 101.5
12  94.1  1.394 88.5  99.8
13  95.6  1.244 90.1 101.1
14  97.8  0.896 92.6 103.0
15 102.6  0.874 97.4 107.8
16 104.1  0.916 98.9 109.3
17 103.8  1.605 97.9 109.7
18 102.4  0.962 97.1 107.6
19 102.1  1.098 96.7 107.5
20 104.5  1.664 98.6 110.5
> 
> print( predict( fitols2r, se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1          103           2.17       99.9        107        96.7           2.62
2          106           2.16      102.4        109        97.9           2.55
3          106           2.17      102.2        109        98.1           2.55
4          106           2.16      102.5        109        98.3           2.54
5          108           2.43      102.9        113       100.9           2.67
6          108           2.38      103.1        113       100.7           2.63
7          109           2.37      103.7        113       100.6           2.59
8          109           2.33      104.5        114       102.6           2.55
9          107           2.44      102.2        113       101.4           2.69
10         106           2.57      100.2        112        98.8           2.84
11         101           2.36       96.1        106        94.4           2.89
12         100           2.17       96.6        104        92.3           2.88
13         102           2.08       99.0        104        93.9           2.75
14         105           2.25      100.7        109        96.3           2.72
15         110           2.63      103.7        116       101.4           2.72
16         110           2.52      104.1        116       102.9           2.65
17         110           2.96      102.0        118       102.9           3.03
18         108           2.28      103.9        112       101.1           2.55
19         110           2.36      105.1        115       100.9           2.55
20         114           2.57      107.4        120       103.3           2.51
   supply.lwr supply.upr
1        93.2      100.2
2        95.2      100.5
3        95.3      100.8
4        95.8      100.8
5        97.0      104.8
6        97.2      104.3
7        97.5      103.7
8        99.9      105.2
9        97.3      105.5
10       93.6      104.1
11       88.8      100.0
12       86.8       97.9
13       89.3       98.5
14       91.9      100.6
15       97.0      105.8
16       99.2      106.6
17       96.4      109.4
18       98.4      103.9
19       98.2      103.5
20      101.1      105.5
> print( predict( fitols2r$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   fit se.pred   lwr upr
1  103    2.17  99.9 107
2  106    2.16 102.4 109
3  106    2.17 102.2 109
4  106    2.16 102.5 109
5  108    2.43 102.9 113
6  108    2.38 103.1 113
7  109    2.37 103.7 113
8  109    2.33 104.5 114
9  107    2.44 102.2 113
10 106    2.57 100.2 112
11 101    2.36  96.1 106
12 100    2.17  96.6 104
13 102    2.08  99.0 104
14 105    2.25 100.7 109
15 110    2.63 103.7 116
16 110    2.52 104.1 116
17 110    2.96 102.0 118
18 108    2.28 103.9 112
19 110    2.36 105.1 115
20 114    2.57 107.4 120
> 
> print( predict( fitols3s, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1          103         0.940           2.16      101.8        105        96.7
2          106         0.944           2.16      104.3        107        97.9
3          106         0.969           2.17      104.2        107        98.1
4          106         0.949           2.16      104.4        107        98.3
5          108         1.452           2.43      106.5        110       100.9
6          108         1.372           2.38      106.4        110       100.7
7          109         1.356           2.37      106.9        110       100.6
8          109         1.296           2.34      107.6        111       102.6
9          107         1.464           2.43      105.8        109       101.4
10         106         1.652           2.55      104.5        108        98.8
11         101         1.305           2.34       99.4        103        94.4
12         100         0.941           2.16       98.6        102        92.3
13         102         0.725           2.07      100.2        103        93.9
14         105         1.124           2.24      103.3        106        96.3
15         110         1.774           2.63      108.3        112       101.4
16         110         1.606           2.52      108.2        112       102.9
17         110         2.216           2.95      108.0        112       102.9
18         108         1.208           2.29      106.6        110       101.1
19         110         1.356           2.37      108.3        112       100.9
20         114         1.718           2.59      111.7        115       103.3
   supply.se.fit supply.se.pred supply.lwr supply.upr
1          1.149           2.69       94.8       98.5
2          0.873           2.59       96.1       99.6
3          0.907           2.60       96.3       99.8
4          0.831           2.58       96.5      100.0
5          1.324           2.77       99.0      102.8
6          1.188           2.71       98.9      102.6
7          1.049           2.65       98.8      102.4
8          0.911           2.60      100.8      104.3
9          1.396           2.81       99.5      103.3
10         1.782           3.02       96.8      100.9
11         1.906           3.09       92.3       96.5
12         1.875           3.08       90.2       94.4
13         1.560           2.89       91.9       95.8
14         1.475           2.85       94.3       98.2
15         1.477           2.85       99.5      103.3
16         1.245           2.74      101.0      104.8
17         2.195           3.28      100.6      105.1
18         0.909           2.60       99.4      102.9
19         0.875           2.59       99.1      102.6
20         0.704           2.54      101.6      105.0
> print( predict( fitols3s$eq[[ 2 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
     fit se.fit se.pred   lwr   upr
1   96.7  1.149    2.69  94.8  98.5
2   97.9  0.873    2.59  96.1  99.6
3   98.1  0.907    2.60  96.3  99.8
4   98.3  0.831    2.58  96.5 100.0
5  100.9  1.324    2.77  99.0 102.8
6  100.7  1.188    2.71  98.9 102.6
7  100.6  1.049    2.65  98.8 102.4
8  102.6  0.911    2.60 100.8 104.3
9  101.4  1.396    2.81  99.5 103.3
10  98.8  1.782    3.02  96.8 100.9
11  94.4  1.906    3.09  92.3  96.5
12  92.3  1.875    3.08  90.2  94.4
13  93.9  1.560    2.89  91.9  95.8
14  96.3  1.475    2.85  94.3  98.2
15 101.4  1.477    2.85  99.5 103.3
16 102.9  1.245    2.74 101.0 104.8
17 102.9  2.195    3.28 100.6 105.1
18 101.1  0.909    2.60  99.4 102.9
19 100.9  0.875    2.59  99.1 102.6
20 103.3  0.704    2.54 101.6 105.0
> 
> print( predict( fitols4rs, se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99 ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         97.6         0.541           2.01       96.1       99.0        98.3
2         99.6         0.471           2.00       98.3      100.9        99.6
3         99.5         0.454           1.99       98.3      100.8        99.8
4         99.7         0.475           2.00       98.4      101.0       100.0
5        102.3         0.434           1.99      101.1      103.4       102.5
6        102.0         0.418           1.98      100.9      103.2       102.4
7        102.4         0.440           1.99      101.2      103.6       102.3
8        102.7         0.537           2.01      101.2      104.1       104.4
9        101.7         0.447           1.99      100.5      102.9       102.9
10       100.9         0.628           2.04       99.2      102.6       100.2
11        95.9         0.833           2.11       93.7       98.2        95.7
12        94.7         0.807           2.10       92.5       96.9        93.9
13        95.9         0.677           2.06       94.0       97.7        95.5
14        99.1         0.459           1.99       97.8      100.3        97.8
15       104.2         0.572           2.02      102.7      105.8       102.9
16       103.8         0.509           2.01      102.4      105.2       104.5
17       104.8         0.877           2.13      102.4      107.2       104.1
18       101.8         0.478           2.00      100.5      103.1       103.0
19       103.3         0.604           2.03      101.6      104.9       102.8
20       106.1         1.102           2.23      103.1      109.1       105.5
   supply.se.fit supply.se.pred supply.lwr supply.upr
1          0.598           2.52       96.7       99.9
2          0.679           2.54       97.8      101.5
3          0.634           2.53       98.0      101.5
4          0.643           2.53       98.3      101.8
5          0.753           2.56      100.4      104.5
6          0.680           2.54      100.5      104.2
7          0.625           2.53      100.6      104.0
8          0.799           2.57      102.2      106.6
9          0.700           2.55      101.0      104.8
10         0.716           2.55       98.2      102.1
11         0.916           2.61       93.2       98.2
12         1.226           2.74       90.5       97.2
13         1.130           2.70       92.5       98.6
14         0.796           2.57       95.7      100.0
15         0.656           2.53      101.1      104.7
16         0.644           2.53      102.8      106.3
17         1.150           2.70      101.0      107.2
18         0.575           2.51      101.4      104.5
19         0.649           2.53      101.0      104.5
20         0.875           2.60      103.1      107.8
> print( predict( fitols4rs$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99 ) )
     fit se.fit se.pred   lwr   upr
1   97.6  0.541    2.01  96.1  99.0
2   99.6  0.471    2.00  98.3 100.9
3   99.5  0.454    1.99  98.3 100.8
4   99.7  0.475    2.00  98.4 101.0
5  102.3  0.434    1.99 101.1 103.4
6  102.0  0.418    1.98 100.9 103.2
7  102.4  0.440    1.99 101.2 103.6
8  102.7  0.537    2.01 101.2 104.1
9  101.7  0.447    1.99 100.5 102.9
10 100.9  0.628    2.04  99.2 102.6
11  95.9  0.833    2.11  93.7  98.2
12  94.7  0.807    2.10  92.5  96.9
13  95.9  0.677    2.06  94.0  97.7
14  99.1  0.459    1.99  97.8 100.3
15 104.2  0.572    2.02 102.7 105.8
16 103.8  0.509    2.01 102.4 105.2
17 104.8  0.877    2.13 102.4 107.2
18 101.8  0.478    2.00 100.5 103.1
19 103.3  0.604    2.03 101.6 104.9
20 106.1  1.102    2.23 103.1 109.1
> 
> print( predict( fitols5, se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1          104         0.714      100.0        107        96.4         0.712
2          106         0.748      102.5        110        97.7         0.591
3          106         0.753      102.4        109        97.9         0.602
4          106         0.756      102.6        110        98.1         0.565
5          109         1.055      104.8        112       100.7         0.900
6          108         1.013      104.7        112       100.5         0.811
7          109         1.029      105.2        113       100.5         0.722
8          109         1.055      105.7        113       102.5         0.703
9          108         1.042      104.1        112       101.1         0.952
10         107         1.148      102.8        110        98.5         1.136
11         101         1.026       97.6        105        94.0         1.245
12         100         0.800       96.7        104        92.1         1.347
13         102         0.606       98.4        105        93.7         1.170
14         105         0.820      101.5        109        96.0         1.034
15         111         1.272      106.6        114       101.2         1.031
16         110         1.191      106.4        114       102.7         0.925
17         111         1.513      106.5        115       102.5         1.529
18         108         0.963      104.8        112       101.0         0.720
19         110         1.129      106.4        114       100.8         0.717
20         114         1.601      109.5        118       103.4         0.562
   supply.lwr supply.upr
1        92.1      100.7
2        93.4      102.0
3        93.6      102.1
4        93.9      102.4
5        96.3      105.1
6        96.2      104.9
7        96.1      104.8
8        98.2      106.8
9        96.7      105.6
10       93.9      103.0
11       89.4       98.7
12       87.4       96.8
13       89.1       98.2
14       91.5      100.5
15       96.7      105.7
16       98.3      107.2
17       97.6      107.4
18       96.7      105.4
19       96.5      105.1
20       99.1      107.6
> print( predict( fitols5$eq[[ 2 ]], se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
     fit se.fit  lwr   upr
1   96.4  0.712 92.1 100.7
2   97.7  0.591 93.4 102.0
3   97.9  0.602 93.6 102.1
4   98.1  0.565 93.9 102.4
5  100.7  0.900 96.3 105.1
6  100.5  0.811 96.2 104.9
7  100.5  0.722 96.1 104.8
8  102.5  0.703 98.2 106.8
9  101.1  0.952 96.7 105.6
10  98.5  1.136 93.9 103.0
11  94.0  1.245 89.4  98.7
12  92.1  1.347 87.4  96.8
13  93.7  1.170 89.1  98.2
14  96.0  1.034 91.5 100.5
15 101.2  1.031 96.7 105.7
16 102.7  0.925 98.3 107.2
17 102.5  1.529 97.6 107.4
18 101.0  0.720 96.7 105.4
19 100.8  0.717 96.5 105.1
20 103.4  0.562 99.1 107.6
> 
> # predict just one observation
> smallData <- data.frame( price = 130, income = 150, farmPrice = 120,
+    trend = 25 )
> 
> print( predict( fitols1, newdata = smallData ) )
  demand.pred supply.pred
1         109         115
> print( predict( fitols1$eq[[ 1 ]], newdata = smallData ) )
  fit
1 109
> 
> print( predict( fitols2r, se.fit = TRUE, level = 0.9,
+    newdata = smallData ) )
  demand.pred demand.se.fit supply.pred supply.se.fit
1         109          2.48         116           2.8
> print( predict( fitols2r$eq[[ 1 ]], se.pred = TRUE, level = 0.99,
+    newdata = smallData ) )
  fit se.pred
1 109    3.15
> 
> print( predict( fitols3s, interval = "prediction", level = 0.975,
+    newdata = smallData ) )
  demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1         109        101        116         116        107        126
> print( predict( fitols3s$eq[[ 1 ]], interval = "confidence", level = 0.8,
+    newdata = smallData ) )
  fit lwr upr
1 109 105 112
> 
> print( predict( fitols4rs, se.fit = TRUE, interval = "confidence",
+    level = 0.999, newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         108          2.02        101        115         117          2.02
  supply.lwr supply.upr
1        110        124
> print( predict( fitols4rs$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.75, newdata = smallData ) )
  fit se.pred lwr upr
1 117    3.18 113 121
> 
> print( predict( fitols5, se.fit = TRUE, interval = "prediction",
+    newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         108          2.18        102        114         117          2.01
  supply.lwr supply.upr
1        111        124
> print( predict( fitols5$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    newdata = smallData ) )
  fit se.pred lwr upr
1 108    2.92 104 113
> 
> print( predict( fitols5rs, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         108          2.02            2.8        106        110         117
  supply.se.fit supply.se.pred supply.lwr supply.upr
1          2.02           3.18        115        119
> print( predict( fitols5rs$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
  fit se.fit se.pred lwr upr
1 108   2.02     2.8 107 109
> 
> 
> ## ************ correlation of predicted values ***************
> print( correlation.systemfit( fitols1, 1, 2 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fitols2r, 2, 1 ) )
           [,1]
 [1,]  0.443122
 [2,]  0.160426
 [3,]  0.161091
 [4,]  0.118312
 [5,] -0.077411
 [6,] -0.059235
 [7,] -0.057777
 [8,] -0.006908
 [9,] -0.000372
[10,] -0.001410
[11,]  0.055233
[12,]  0.074936
[13,]  0.028274
[14,] -0.032082
[15,]  0.196029
[16,]  0.279921
[17,]  0.115570
[18,]  0.080620
[19,]  0.171681
[20,]  0.150544
> 
> print( correlation.systemfit( fitols3s, 1, 2 ) )
           [,1]
 [1,]  0.405901
 [2,]  0.145364
 [3,]  0.145375
 [4,]  0.105835
 [5,] -0.067958
 [6,] -0.052026
 [7,] -0.050543
 [8,] -0.006031
 [9,] -0.000326
[10,] -0.001237
[11,]  0.047534
[12,]  0.063493
[13,]  0.024060
[14,] -0.027910
[15,]  0.171580
[16,]  0.248212
[17,]  0.101409
[18,]  0.073084
[19,]  0.153950
[20,]  0.132944
> 
> print( correlation.systemfit( fitols4rs, 2, 1 ) )
          [,1]
 [1,]  0.38162
 [2,]  0.29173
 [3,]  0.25421
 [4,]  0.28598
 [5,] -0.02775
 [6,] -0.04974
 [7,] -0.05850
 [8,]  0.09388
 [9,]  0.09469
[10,]  0.43814
[11,]  0.10559
[12,]  0.00876
[13,]  0.04090
[14,] -0.03984
[15,]  0.40767
[16,]  0.24571
[17,]  0.64160
[18,]  0.24037
[19,]  0.34075
[20,]  0.54270
> 
> print( correlation.systemfit( fitols5, 1, 2 ) )
         [,1]
 [1,]  0.4051
 [2,]  0.2729
 [3,]  0.2415
 [4,]  0.2693
 [5,] -0.0301
 [6,] -0.0527
 [7,] -0.0624
 [8,]  0.0971
 [9,]  0.0945
[10,]  0.4365
[11,]  0.1258
[12,]  0.0210
[13,]  0.0436
[14,] -0.0405
[15,]  0.4102
[16,]  0.2610
[17,]  0.6400
[18,]  0.2661
[19,]  0.3796
[20,]  0.5742
> 
> 
> ## ************ Log-Likelihood values ***************
> print( logLik( fitols1 ) )
'log Lik.' -67.8 (df=8)
> print( logLik( fitols1, residCovDiag = TRUE ) )
'log Lik.' -83.6 (df=8)
> all.equal( logLik( fitols1, residCovDiag = TRUE ),
+    logLik( lmDemand ) + logLik( lmSupply ),
+    check.attributes = FALSE )
[1] TRUE
> 
> print( logLik( fitols2r ) )
'log Lik.' -62 (df=7)
> print( logLik( fitols2r, residCovDiag = TRUE ) )
'log Lik.' -84 (df=7)
> 
> print( logLik( fitols3s ) )
'log Lik.' -62 (df=7)
> print( logLik( fitols3s, residCovDiag = TRUE ) )
'log Lik.' -84 (df=7)
> 
> print( logLik( fitols4rs ) )
'log Lik.' -62.8 (df=6)
> print( logLik( fitols4rs, residCovDiag = TRUE ) )
'log Lik.' -84.1 (df=6)
> 
> print( logLik( fitols5 ) )
'log Lik.' -62.8 (df=6)
> print( logLik( fitols5, residCovDiag = TRUE ) )
'log Lik.' -84.1 (df=6)
> 
> 
> ## ************** F tests ****************
> # testing first restriction
> print( linearHypothesis( fitols1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.14   0.71
> linearHypothesis( fitols1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.14   0.71
> 
> print( linearHypothesis( fitols1s, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1s

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.15    0.7
> linearHypothesis( fitols1s, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1s

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.15    0.7
> 
> print( linearHypothesis( fitols1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.14   0.71
> linearHypothesis( fitols1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.14   0.71
> 
> print( linearHypothesis( fitols1r, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1r

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.14   0.71
> linearHypothesis( fitols1r, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1r

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.14   0.71
> 
> # testing second restriction
> restrOnly2m <- matrix(0,1,7)
> restrOnly2q <- 0.5
> restrOnly2m[1,2] <- -1
> restrOnly2m[1,5] <-  1
> restrictOnly2 <- "- demand_price + supply_price = 0.5"
> # first restriction not imposed 
> print( linearHypothesis( fitols1, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.01   0.94
> linearHypothesis( fitols1, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.01   0.94
> 
> # first restriction imposed
> print( linearHypothesis( fitols2, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols2

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.02   0.88
> linearHypothesis( fitols2, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols2

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.02   0.88
> 
> print( linearHypothesis( fitols3, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols3

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.02   0.88
> linearHypothesis( fitols3, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols3

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.02   0.88
> 
> # testing both of the restrictions
> print( linearHypothesis( fitols1, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     35               
2     33  2 0.08   0.93
> linearHypothesis( fitols1, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df    F Pr(>F)
1     35               
2     33  2 0.08   0.93
> 
> 
> ## ************** Wald tests ****************
> # testing first restriction
> print( linearHypothesis( fitols1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> linearHypothesis( fitols1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> 
> print( linearHypothesis( fitols1s, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1s

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.72        0.4
> linearHypothesis( fitols1s, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1s

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.72        0.4
> 
> print( linearHypothesis( fitols1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> linearHypothesis( fitols1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> 
> print( linearHypothesis( fitols1r, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1r

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> linearHypothesis( fitols1r, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitols1r

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> 
> # testing second restriction
> # first restriction not imposed
> print( linearHypothesis( fitols1, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.03       0.86
> linearHypothesis( fitols1, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.03       0.86
> # first restriction imposed
> print( linearHypothesis( fitols2, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols2

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.12       0.73
> linearHypothesis( fitols2, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols2

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.12       0.73
> 
> print( linearHypothesis( fitols3, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols3

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.12       0.73
> linearHypothesis( fitols3, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols3

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.12       0.73
> 
> # testing both of the restrictions
> print( linearHypothesis( fitols1, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  0.72        0.7
> linearHypothesis( fitols1, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitols1

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  0.72        0.7
> 
> 
> ## ****************** model frame **************************
> print( mf <- model.frame( fitols1 ) )
   consump price income farmPrice trend
1     98.5 100.3   87.4      98.0     1
2     99.2 104.3   97.6      99.1     2
3    102.2 103.4   96.7      99.1     3
4    101.5 104.5   98.2      98.1     4
5    104.2  98.0   99.8     110.8     5
6    103.2  99.5  100.5     108.2     6
7    104.0 101.1  103.2     105.6     7
8     99.9 104.8  107.8     109.8     8
9    100.3  96.4   96.6     108.7     9
10   102.8  91.2   88.9     100.6    10
11    95.4  93.1   75.1      81.0    11
12    92.4  98.8   76.9      68.6    12
13    94.5 102.9   84.6      70.9    13
14    98.8  98.8   90.6      81.4    14
15   105.8  95.1  103.1     102.3    15
16   100.2  98.5  105.1     105.0    16
17   103.5  86.5   96.4     110.5    17
18    99.9 104.0  104.4      92.5    18
19   105.2 105.8  110.7      89.3    19
20   106.2 113.5  127.1      93.0    20
> print( mf1 <- model.frame( fitols1$eq[[ 1 ]] ) )
   consump price income
1     98.5 100.3   87.4
2     99.2 104.3   97.6
3    102.2 103.4   96.7
4    101.5 104.5   98.2
5    104.2  98.0   99.8
6    103.2  99.5  100.5
7    104.0 101.1  103.2
8     99.9 104.8  107.8
9    100.3  96.4   96.6
10   102.8  91.2   88.9
11    95.4  93.1   75.1
12    92.4  98.8   76.9
13    94.5 102.9   84.6
14    98.8  98.8   90.6
15   105.8  95.1  103.1
16   100.2  98.5  105.1
17   103.5  86.5   96.4
18    99.9 104.0  104.4
19   105.2 105.8  110.7
20   106.2 113.5  127.1
> print( attributes( mf1 )$terms )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> print( mf2 <- model.frame( fitols1$eq[[ 2 ]] ) )
   consump price farmPrice trend
1     98.5 100.3      98.0     1
2     99.2 104.3      99.1     2
3    102.2 103.4      99.1     3
4    101.5 104.5      98.1     4
5    104.2  98.0     110.8     5
6    103.2  99.5     108.2     6
7    104.0 101.1     105.6     7
8     99.9 104.8     109.8     8
9    100.3  96.4     108.7     9
10   102.8  91.2     100.6    10
11    95.4  93.1      81.0    11
12    92.4  98.8      68.6    12
13    94.5 102.9      70.9    13
14    98.8  98.8      81.4    14
15   105.8  95.1     102.3    15
16   100.2  98.5     105.0    16
17   103.5  86.5     110.5    17
18    99.9 104.0      92.5    18
19   105.2 105.8      89.3    19
20   106.2 113.5      93.0    20
> print( attributes( mf2 )$terms )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> print( all.equal( mf, model.frame( fitols2r ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitols2r$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitols3s ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitols3s$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitols4rs ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitols4rs$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitols5 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitols5$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> 
> ## **************** model matrix ************************
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitols1r$eq[[ 1 ]]$x ) )
[1] TRUE
> print( mm <- model.matrix( fitols1r ) )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1                   1        100.3          87.4                  0
demand_2                   1        104.3          97.6                  0
demand_3                   1        103.4          96.7                  0
demand_4                   1        104.5          98.2                  0
demand_5                   1         98.0          99.8                  0
demand_6                   1         99.5         100.5                  0
demand_7                   1        101.1         103.2                  0
demand_8                   1        104.8         107.8                  0
demand_9                   1         96.4          96.6                  0
demand_10                  1         91.2          88.9                  0
demand_11                  1         93.1          75.1                  0
demand_12                  1         98.8          76.9                  0
demand_13                  1        102.9          84.6                  0
demand_14                  1         98.8          90.6                  0
demand_15                  1         95.1         103.1                  0
demand_16                  1         98.5         105.1                  0
demand_17                  1         86.5          96.4                  0
demand_18                  1        104.0         104.4                  0
demand_19                  1        105.8         110.7                  0
demand_20                  1        113.5         127.1                  0
supply_1                   0          0.0           0.0                  1
supply_2                   0          0.0           0.0                  1
supply_3                   0          0.0           0.0                  1
supply_4                   0          0.0           0.0                  1
supply_5                   0          0.0           0.0                  1
supply_6                   0          0.0           0.0                  1
supply_7                   0          0.0           0.0                  1
supply_8                   0          0.0           0.0                  1
supply_9                   0          0.0           0.0                  1
supply_10                  0          0.0           0.0                  1
supply_11                  0          0.0           0.0                  1
supply_12                  0          0.0           0.0                  1
supply_13                  0          0.0           0.0                  1
supply_14                  0          0.0           0.0                  1
supply_15                  0          0.0           0.0                  1
supply_16                  0          0.0           0.0                  1
supply_17                  0          0.0           0.0                  1
supply_18                  0          0.0           0.0                  1
supply_19                  0          0.0           0.0                  1
supply_20                  0          0.0           0.0                  1
          supply_price supply_farmPrice supply_trend
demand_1           0.0              0.0            0
demand_2           0.0              0.0            0
demand_3           0.0              0.0            0
demand_4           0.0              0.0            0
demand_5           0.0              0.0            0
demand_6           0.0              0.0            0
demand_7           0.0              0.0            0
demand_8           0.0              0.0            0
demand_9           0.0              0.0            0
demand_10          0.0              0.0            0
demand_11          0.0              0.0            0
demand_12          0.0              0.0            0
demand_13          0.0              0.0            0
demand_14          0.0              0.0            0
demand_15          0.0              0.0            0
demand_16          0.0              0.0            0
demand_17          0.0              0.0            0
demand_18          0.0              0.0            0
demand_19          0.0              0.0            0
demand_20          0.0              0.0            0
supply_1         100.3             98.0            1
supply_2         104.3             99.1            2
supply_3         103.4             99.1            3
supply_4         104.5             98.1            4
supply_5          98.0            110.8            5
supply_6          99.5            108.2            6
supply_7         101.1            105.6            7
supply_8         104.8            109.8            8
supply_9          96.4            108.7            9
supply_10         91.2            100.6           10
supply_11         93.1             81.0           11
supply_12         98.8             68.6           12
supply_13        102.9             70.9           13
supply_14         98.8             81.4           14
supply_15         95.1            102.3           15
supply_16         98.5            105.0           16
supply_17         86.5            110.5           17
supply_18        104.0             92.5           18
supply_19        105.8             89.3           19
supply_20        113.5             93.0           20
> print( mm1 <- model.matrix( fitols1r$eq[[ 1 ]] ) )
   (Intercept) price income
1            1 100.3   87.4
2            1 104.3   97.6
3            1 103.4   96.7
4            1 104.5   98.2
5            1  98.0   99.8
6            1  99.5  100.5
7            1 101.1  103.2
8            1 104.8  107.8
9            1  96.4   96.6
10           1  91.2   88.9
11           1  93.1   75.1
12           1  98.8   76.9
13           1 102.9   84.6
14           1  98.8   90.6
15           1  95.1  103.1
16           1  98.5  105.1
17           1  86.5   96.4
18           1 104.0  104.4
19           1 105.8  110.7
20           1 113.5  127.1
attr(,"assign")
[1] 0 1 2
> print( mm2 <- model.matrix( fitols1r$eq[[ 2 ]] ) )
   (Intercept) price farmPrice trend
1            1 100.3      98.0     1
2            1 104.3      99.1     2
3            1 103.4      99.1     3
4            1 104.5      98.1     4
5            1  98.0     110.8     5
6            1  99.5     108.2     6
7            1 101.1     105.6     7
8            1 104.8     109.8     8
9            1  96.4     108.7     9
10           1  91.2     100.6    10
11           1  93.1      81.0    11
12           1  98.8      68.6    12
13           1 102.9      70.9    13
14           1  98.8      81.4    14
15           1  95.1     102.3    15
16           1  98.5     105.0    16
17           1  86.5     110.5    17
18           1 104.0      92.5    18
19           1 105.8      89.3    19
20           1 113.5      93.0    20
attr(,"assign")
[1] 0 1 2 3
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitols1rs ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols1rs$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols1rs$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitols1rs$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitols2rs$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitols2rs ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols2rs$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols2rs$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitols2 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols2$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitols2$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitols3$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitols3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitols3r ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols3r$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols3r$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitols3r$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitols4s$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitols4s ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols4s$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols4s$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitols4Sym ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols4Sym$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols4Sym$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitols4Sym$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitols5s$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitols5s ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols5s$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols5s$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitols5 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitols5$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitols5$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitols5$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> try( model.matrix( fitols1, which = "z" ) )
Error in model.matrix.systemfit.equation(object$eq[[i]], which = which) : 
  argument 'which' can only be set to "xHat" or "z" if instruments were used
> 
> 
> ## **************** formulas ************************
> formula( fitols1 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitols1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitols2r )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitols2r$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitols3s )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitols3s$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitols4rs )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitols4rs$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitols5 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitols5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> 
> ## **************** model terms *******************
> terms( fitols1 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitols1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitols2r )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitols2r$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitols3s )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitols3s$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitols4rs )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitols4rs$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitols5 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitols5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> 
> ## **************** estfun ************************
> library( "sandwich" )
> 
> estfun( fitols1 )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1               1.074        107.8          93.9              0.000
demand_2              -0.390        -40.7         -38.1              0.000
demand_3               2.625        271.5         253.8              0.000
demand_4               1.802        188.4         177.0              0.000
demand_5               1.946        190.7         194.2              0.000
demand_6               1.175        116.8         118.0              0.000
demand_7               1.530        154.7         157.9              0.000
demand_8              -2.933       -307.2        -316.1              0.000
demand_9              -1.365       -131.7        -131.9              0.000
demand_10              2.031        185.3         180.5              0.000
demand_11             -0.149        -13.9         -11.2              0.000
demand_12             -1.954       -193.1        -150.3              0.000
demand_13             -1.121       -115.4         -94.8              0.000
demand_14             -0.220        -21.7         -19.9              0.000
demand_15              1.487        141.4         153.3              0.000
demand_16             -3.701       -364.3        -388.9              0.000
demand_17             -1.273       -110.1        -122.7              0.000
demand_18             -2.002       -208.3        -209.0              0.000
demand_19              1.738        183.8         192.4              0.000
demand_20             -0.299        -33.9         -38.0              0.000
supply_1               0.000          0.0           0.0             -0.444
supply_2               0.000          0.0           0.0             -0.896
supply_3               0.000          0.0           0.0              1.965
supply_4               0.000          0.0           0.0              1.134
supply_5               0.000          0.0           0.0              1.514
supply_6               0.000          0.0           0.0              0.680
supply_7               0.000          0.0           0.0              1.569
supply_8               0.000          0.0           0.0             -4.407
supply_9               0.000          0.0           0.0             -2.599
supply_10              0.000          0.0           0.0              2.469
supply_11              0.000          0.0           0.0             -0.598
supply_12              0.000          0.0           0.0             -1.697
supply_13              0.000          0.0           0.0             -1.064
supply_14              0.000          0.0           0.0              0.970
supply_15              0.000          0.0           0.0              3.159
supply_16              0.000          0.0           0.0             -3.866
supply_17              0.000          0.0           0.0             -0.265
supply_18              0.000          0.0           0.0             -2.449
supply_19              0.000          0.0           0.0              3.110
supply_20              0.000          0.0           0.0              1.714
          supply_price supply_farmPrice supply_trend
demand_1           0.0              0.0        0.000
demand_2           0.0              0.0        0.000
demand_3           0.0              0.0        0.000
demand_4           0.0              0.0        0.000
demand_5           0.0              0.0        0.000
demand_6           0.0              0.0        0.000
demand_7           0.0              0.0        0.000
demand_8           0.0              0.0        0.000
demand_9           0.0              0.0        0.000
demand_10          0.0              0.0        0.000
demand_11          0.0              0.0        0.000
demand_12          0.0              0.0        0.000
demand_13          0.0              0.0        0.000
demand_14          0.0              0.0        0.000
demand_15          0.0              0.0        0.000
demand_16          0.0              0.0        0.000
demand_17          0.0              0.0        0.000
demand_18          0.0              0.0        0.000
demand_19          0.0              0.0        0.000
demand_20          0.0              0.0        0.000
supply_1         -44.6            -43.5       -0.444
supply_2         -93.4            -88.7       -1.791
supply_3         203.3            194.7        5.895
supply_4         118.5            111.3        4.537
supply_5         148.4            167.7        7.569
supply_6          67.7             73.6        4.082
supply_7         158.6            165.7       10.983
supply_8        -461.7           -483.9      -35.259
supply_9        -250.7           -282.5      -23.391
supply_10        225.3            248.4       24.694
supply_11        -55.7            -48.5       -6.581
supply_12       -167.7           -116.4      -20.369
supply_13       -109.5            -75.4      -13.832
supply_14         95.8             79.0       13.582
supply_15        300.5            323.2       47.386
supply_16       -380.6           -405.9      -61.848
supply_17        -22.9            -29.2       -4.500
supply_18       -254.7           -226.5      -44.080
supply_19        328.9            277.7       59.084
supply_20        194.5            159.4       34.282
> round( colSums( estfun( fitols1 ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitols1s )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1               1.074        107.8          93.9              0.000
demand_2              -0.390        -40.7         -38.1              0.000
demand_3               2.625        271.5         253.8              0.000
demand_4               1.802        188.4         177.0              0.000
demand_5               1.946        190.7         194.2              0.000
demand_6               1.175        116.8         118.0              0.000
demand_7               1.530        154.7         157.9              0.000
demand_8              -2.933       -307.2        -316.1              0.000
demand_9              -1.365       -131.7        -131.9              0.000
demand_10              2.031        185.3         180.5              0.000
demand_11             -0.149        -13.9         -11.2              0.000
demand_12             -1.954       -193.1        -150.3              0.000
demand_13             -1.121       -115.4         -94.8              0.000
demand_14             -0.220        -21.7         -19.9              0.000
demand_15              1.487        141.4         153.3              0.000
demand_16             -3.701       -364.3        -388.9              0.000
demand_17             -1.273       -110.1        -122.7              0.000
demand_18             -2.002       -208.3        -209.0              0.000
demand_19              1.738        183.8         192.4              0.000
demand_20             -0.299        -33.9         -38.0              0.000
supply_1               0.000          0.0           0.0             -0.444
supply_2               0.000          0.0           0.0             -0.896
supply_3               0.000          0.0           0.0              1.965
supply_4               0.000          0.0           0.0              1.134
supply_5               0.000          0.0           0.0              1.514
supply_6               0.000          0.0           0.0              0.680
supply_7               0.000          0.0           0.0              1.569
supply_8               0.000          0.0           0.0             -4.407
supply_9               0.000          0.0           0.0             -2.599
supply_10              0.000          0.0           0.0              2.469
supply_11              0.000          0.0           0.0             -0.598
supply_12              0.000          0.0           0.0             -1.697
supply_13              0.000          0.0           0.0             -1.064
supply_14              0.000          0.0           0.0              0.970
supply_15              0.000          0.0           0.0              3.159
supply_16              0.000          0.0           0.0             -3.866
supply_17              0.000          0.0           0.0             -0.265
supply_18              0.000          0.0           0.0             -2.449
supply_19              0.000          0.0           0.0              3.110
supply_20              0.000          0.0           0.0              1.714
          supply_price supply_farmPrice supply_trend
demand_1           0.0              0.0        0.000
demand_2           0.0              0.0        0.000
demand_3           0.0              0.0        0.000
demand_4           0.0              0.0        0.000
demand_5           0.0              0.0        0.000
demand_6           0.0              0.0        0.000
demand_7           0.0              0.0        0.000
demand_8           0.0              0.0        0.000
demand_9           0.0              0.0        0.000
demand_10          0.0              0.0        0.000
demand_11          0.0              0.0        0.000
demand_12          0.0              0.0        0.000
demand_13          0.0              0.0        0.000
demand_14          0.0              0.0        0.000
demand_15          0.0              0.0        0.000
demand_16          0.0              0.0        0.000
demand_17          0.0              0.0        0.000
demand_18          0.0              0.0        0.000
demand_19          0.0              0.0        0.000
demand_20          0.0              0.0        0.000
supply_1         -44.6            -43.5       -0.444
supply_2         -93.4            -88.7       -1.791
supply_3         203.3            194.7        5.895
supply_4         118.5            111.3        4.537
supply_5         148.4            167.7        7.569
supply_6          67.7             73.6        4.082
supply_7         158.6            165.7       10.983
supply_8        -461.7           -483.9      -35.259
supply_9        -250.7           -282.5      -23.391
supply_10        225.3            248.4       24.694
supply_11        -55.7            -48.5       -6.581
supply_12       -167.7           -116.4      -20.369
supply_13       -109.5            -75.4      -13.832
supply_14         95.8             79.0       13.582
supply_15        300.5            323.2       47.386
supply_16       -380.6           -405.9      -61.848
supply_17        -22.9            -29.2       -4.500
supply_18       -254.7           -226.5      -44.080
supply_19        328.9            277.7       59.084
supply_20        194.5            159.4       34.282
> round( colSums( estfun( fitols1s ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitols1r )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1               1.074        107.8          93.9              0.000
demand_2              -0.390        -40.7         -38.1              0.000
demand_3               2.625        271.5         253.8              0.000
demand_4               1.802        188.4         177.0              0.000
demand_5               1.946        190.7         194.2              0.000
demand_6               1.175        116.8         118.0              0.000
demand_7               1.530        154.7         157.9              0.000
demand_8              -2.933       -307.2        -316.1              0.000
demand_9              -1.365       -131.7        -131.9              0.000
demand_10              2.031        185.3         180.5              0.000
demand_11             -0.149        -13.9         -11.2              0.000
demand_12             -1.954       -193.1        -150.3              0.000
demand_13             -1.121       -115.4         -94.8              0.000
demand_14             -0.220        -21.7         -19.9              0.000
demand_15              1.487        141.4         153.3              0.000
demand_16             -3.701       -364.3        -388.9              0.000
demand_17             -1.273       -110.1        -122.7              0.000
demand_18             -2.002       -208.3        -209.0              0.000
demand_19              1.738        183.8         192.4              0.000
demand_20             -0.299        -33.9         -38.0              0.000
supply_1               0.000          0.0           0.0             -0.444
supply_2               0.000          0.0           0.0             -0.896
supply_3               0.000          0.0           0.0              1.965
supply_4               0.000          0.0           0.0              1.134
supply_5               0.000          0.0           0.0              1.514
supply_6               0.000          0.0           0.0              0.680
supply_7               0.000          0.0           0.0              1.569
supply_8               0.000          0.0           0.0             -4.407
supply_9               0.000          0.0           0.0             -2.599
supply_10              0.000          0.0           0.0              2.469
supply_11              0.000          0.0           0.0             -0.598
supply_12              0.000          0.0           0.0             -1.697
supply_13              0.000          0.0           0.0             -1.064
supply_14              0.000          0.0           0.0              0.970
supply_15              0.000          0.0           0.0              3.159
supply_16              0.000          0.0           0.0             -3.866
supply_17              0.000          0.0           0.0             -0.265
supply_18              0.000          0.0           0.0             -2.449
supply_19              0.000          0.0           0.0              3.110
supply_20              0.000          0.0           0.0              1.714
          supply_price supply_farmPrice supply_trend
demand_1           0.0              0.0        0.000
demand_2           0.0              0.0        0.000
demand_3           0.0              0.0        0.000
demand_4           0.0              0.0        0.000
demand_5           0.0              0.0        0.000
demand_6           0.0              0.0        0.000
demand_7           0.0              0.0        0.000
demand_8           0.0              0.0        0.000
demand_9           0.0              0.0        0.000
demand_10          0.0              0.0        0.000
demand_11          0.0              0.0        0.000
demand_12          0.0              0.0        0.000
demand_13          0.0              0.0        0.000
demand_14          0.0              0.0        0.000
demand_15          0.0              0.0        0.000
demand_16          0.0              0.0        0.000
demand_17          0.0              0.0        0.000
demand_18          0.0              0.0        0.000
demand_19          0.0              0.0        0.000
demand_20          0.0              0.0        0.000
supply_1         -44.6            -43.5       -0.444
supply_2         -93.4            -88.7       -1.791
supply_3         203.3            194.7        5.895
supply_4         118.5            111.3        4.537
supply_5         148.4            167.7        7.569
supply_6          67.7             73.6        4.082
supply_7         158.6            165.7       10.983
supply_8        -461.7           -483.9      -35.259
supply_9        -250.7           -282.5      -23.391
supply_10        225.3            248.4       24.694
supply_11        -55.7            -48.5       -6.581
supply_12       -167.7           -116.4      -20.369
supply_13       -109.5            -75.4      -13.832
supply_14         95.8             79.0       13.582
supply_15        300.5            323.2       47.386
supply_16       -380.6           -405.9      -61.848
supply_17        -22.9            -29.2       -4.500
supply_18       -254.7           -226.5      -44.080
supply_19        328.9            277.7       59.084
supply_20        194.5            159.4       34.282
> round( colSums( estfun( fitols1r ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> try( estfun( fitols2 ) )
Error in estfun.systemfit(fitols2) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> try( estfun( fitols2Sym ) )
Error in estfun.systemfit(fitols2Sym) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> try( estfun( fitols3s ) )
Error in estfun.systemfit(fitols3s) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> try( estfun( fitols4r ) )
Error in estfun.systemfit(fitols4r) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> try( estfun( fitols4Sym ) )
Error in estfun.systemfit(fitols4Sym) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> try( estfun( fitols5 ) )
Error in estfun.systemfit(fitols5) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> try( estfun( fitols5Sym ) )
Error in estfun.systemfit(fitols5Sym) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> 
> ## **************** bread ************************
> bread( fitols1 )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            607.086      -6.3865        0.3453
demand_price                   -6.386       0.0883       -0.0251
demand_income                   0.345      -0.0251        0.0222
supply_(Intercept)              0.000       0.0000        0.0000
supply_price                    0.000       0.0000        0.0000
supply_farmPrice                0.000       0.0000        0.0000
supply_trend                    0.000       0.0000        0.0000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)               0.00      0.00000          0.00000
demand_price                     0.00      0.00000          0.00000
demand_income                    0.00      0.00000          0.00000
supply_(Intercept)             908.63     -6.82866         -2.10469
supply_price                    -6.83      0.06226          0.00584
supply_farmPrice                -2.10      0.00584          0.01475
supply_trend                    -1.93      0.00361          0.00910
                   supply_trend
demand_(Intercept)      0.00000
demand_price            0.00000
demand_income           0.00000
supply_(Intercept)     -1.93058
supply_price            0.00361
supply_farmPrice        0.00910
supply_trend            0.06576
> 
> bread( fitols1s )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            607.086      -6.3865        0.3453
demand_price                   -6.386       0.0883       -0.0251
demand_income                   0.345      -0.0251        0.0222
supply_(Intercept)              0.000       0.0000        0.0000
supply_price                    0.000       0.0000        0.0000
supply_farmPrice                0.000       0.0000        0.0000
supply_trend                    0.000       0.0000        0.0000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)               0.00      0.00000          0.00000
demand_price                     0.00      0.00000          0.00000
demand_income                    0.00      0.00000          0.00000
supply_(Intercept)             908.63     -6.82866         -2.10469
supply_price                    -6.83      0.06226          0.00584
supply_farmPrice                -2.10      0.00584          0.01475
supply_trend                    -1.93      0.00361          0.00910
                   supply_trend
demand_(Intercept)      0.00000
demand_price            0.00000
demand_income           0.00000
supply_(Intercept)     -1.93058
supply_price            0.00361
supply_farmPrice        0.00910
supply_trend            0.06576
> 
> bread( fitols1r )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            607.086      -6.3865        0.3453
demand_price                   -6.386       0.0883       -0.0251
demand_income                   0.345      -0.0251        0.0222
supply_(Intercept)              0.000       0.0000        0.0000
supply_price                    0.000       0.0000        0.0000
supply_farmPrice                0.000       0.0000        0.0000
supply_trend                    0.000       0.0000        0.0000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)               0.00      0.00000          0.00000
demand_price                     0.00      0.00000          0.00000
demand_income                    0.00      0.00000          0.00000
supply_(Intercept)             908.63     -6.82866         -2.10469
supply_price                    -6.83      0.06226          0.00584
supply_farmPrice                -2.10      0.00584          0.01475
supply_trend                    -1.93      0.00361          0.00910
                   supply_trend
demand_(Intercept)      0.00000
demand_price            0.00000
demand_income           0.00000
supply_(Intercept)     -1.93058
supply_price            0.00361
supply_farmPrice        0.00910
supply_trend            0.06576
> 
> try( bread( fitols2 ) )
Error in bread.systemfit(fitols2) : 
  returning the 'bread' for models with restrictions has not yet been implemented.
> 
> proc.time()
   user  system elapsed 
  2.128   0.076   2.200 
