
R version 2.9.0 (2009-04-17)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library( systemfit )
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'


	The following object(s) are masked from package:stats :

	 xtabs 


	The following object(s) are masked from package:base :

	 rcond 

Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

> data( "Kmenta" )
> useMatrix <- FALSE
> 
> demand <- consump ~ price + income
> supply <- consump ~ price + farmPrice + trend
> inst <- ~ income + farmPrice + trend
> inst1  <- ~ income + farmPrice
> instlist <- list( inst1, inst )
> system <- list( demand = demand, supply = supply )
> restrm <- matrix(0,1,7)  # restriction matrix "R"
> restrm[1,3] <-  1
> restrm[1,7] <- -1
> restrict <- "demand_income - supply_trend = 0"
> restr2m <- matrix(0,2,7)  # restriction matrix "R" 2
> restr2m[1,3] <-  1
> restr2m[1,7] <- -1
> restr2m[2,2] <- -1
> restr2m[2,5] <-  1
> restr2q <- c( 0, 0.5 )  # restriction vector "q" 2
> restrict2 <- c( "demand_income - supply_trend = 0",
+    "- demand_price + supply_price = 0.5" )
> tc <- matrix(0,7,6)
> tc[1,1] <- 1
> tc[2,2] <- 1
> tc[3,3] <- 1
> tc[4,4] <- 1
> tc[5,5] <- 1
> tc[6,6] <- 1
> tc[7,3] <- 1
> restr3m <- matrix(0,1,6)  # restriction matrix "R" 2
> restr3m[1,2] <- -1
> restr3m[1,5] <-  1
> restr3q <- c( 0.5 )  # restriction vector "q" 2
> restrict3 <- "- C2 + C5 = 0.5"
> 
> 
> ## ********************* W2SLS *****************
> fitw2sls1 <- systemfit( system, "W2SLS", data = Kmenta, inst = inst,
+    useMatrix = useMatrix )
> print( summary( fitw2sls1 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 4.36424 0.697214   0.548127

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.86642 0.00000
supply 0.00000 6.03958

The covariance matrix of the residuals
        demand  supply
demand 3.86642 4.35744
supply 4.35744 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  7.9208383 11.94738 1.0762e-09 ***
price       -0.2435565  0.0964843 -2.52431   0.021832 *  
income       0.3139918  0.0469437  6.68869 3.8109e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 12.0105264 4.12409 0.00079536 ***
price        0.2400758  0.0999339 2.40235 0.02878451 *  
farmPrice    0.2556057  0.0472501 5.40964 5.7854e-05 ***
trend        0.2529242  0.0996551 2.53800 0.02192877 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> 
> ## ********************* W2SLS (EViews-like) *****************
> fitw2sls1e <- systemfit( system, "W2SLS", data = Kmenta, inst = inst,
+    methodResidCov = "noDfCor", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitw2sls1e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 2.96768 0.697214   0.524765

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.28645 0.00000
supply 0.00000 4.83166

The covariance matrix of the residuals
        demand  supply
demand 3.28645 3.59324
supply 3.59324 4.83166

The correlations of the residuals
         demand   supply
demand 1.000000 0.901724
supply 0.901724 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  7.3026521 12.95876 1.7097e-14 ***
price       -0.2435565  0.0889541 -2.73800  0.0098841 ** 
income       0.3139918  0.0432799  7.25491 2.5378e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 10.7425414 4.61087 5.7787e-05 ***
price        0.2400758  0.0893836 2.68591  0.0112338 *  
farmPrice    0.2556057  0.0422617 6.04816 8.3732e-07 ***
trend        0.2529242  0.0891342 2.83757  0.0077151 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> 
> ## ********************* W2SLS with restriction *******************
> fitw2sls2 <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = inst, useMatrix = useMatrix )
> print( summary( fitw2sls2 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.284 3.40875 0.691766   0.564916

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.8385 3.93168 1.98284 0.750709 0.721381
supply 20 16 98.4451 6.15282 2.48049 0.632824 0.563979

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.96577 0.00000
supply 0.00000 6.13469

The covariance matrix of the residuals
        demand  supply
demand 3.93168 4.55874
supply 4.55874 6.15282

The correlations of the residuals
        demand  supply
demand 1.00000 0.92687
supply 0.92687 1.00000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 94.3832121  8.0090459 11.7846 1.4833e-13 ***
price       -0.2301550  0.0946243 -2.4323   0.020419 *  
income       0.3028131  0.0429717  7.0468 3.8987e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.982845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.838491 MSE: 3.931676 Root MSE: 1.982845 
Multiple R-Squared: 0.750709 Adjusted R-Squared: 0.721381 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.0493648 11.8000692 4.07196 0.00026334 ***
price        0.2429847  0.1005785 2.41587 0.02121849 *  
farmPrice    0.2625221  0.0459275 5.71601 2.0143e-06 ***
trend        0.3028131  0.0429717 7.04680 3.8987e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.480488 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.445133 MSE: 6.152821 Root MSE: 2.480488 
Multiple R-Squared: 0.632824 Adjusted R-Squared: 0.563979 

> # the same with symbolically specified restrictions
> fitw2sls2Sym <- systemfit( system, "W2SLS", data = Kmenta,
+    restrict.matrix = restrict, inst = inst, useMatrix = useMatrix )
> all.equal( fitw2sls2, fitw2sls2Sym )
[1] "Component 2: target, current do not match when deparsed"
> 
> ## ********************* W2SLS with restriction (EViews-like) **************
> fitw2sls2e <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = inst, methodResidCov = "noDfCor", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitw2sls2e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.314 2.33364 0.691709   0.534939

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.9065 3.93567 1.98385 0.750455 0.721097
supply 20 16 98.4077 6.15048 2.48002 0.632964 0.564144

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.37091 0.00000
supply 0.00000 4.90775

The covariance matrix of the residuals
        demand  supply
demand 3.34532 3.75854
supply 3.75854 4.92039

The correlations of the residuals
         demand   supply
demand 1.000000 0.926405
supply 0.926405 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.3705871  7.3833738 12.78150 1.5321e-14 ***
price       -0.2294785  0.0870930 -2.63487   0.012584 *  
income       0.3022488  0.0393933  7.67260 6.4067e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.983854 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.906482 MSE: 3.935675 Root MSE: 1.983854 
Multiple R-Squared: 0.750455 Adjusted R-Squared: 0.721097 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.0661407 10.5574244 4.55283 6.4769e-05 ***
price        0.2429518  0.0899615 2.70062   0.010711 *  
farmPrice    0.2624439  0.0410963 6.38607 2.7271e-07 ***
trend        0.3022488  0.0393933 7.67260 6.4067e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.480016 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.407706 MSE: 6.150482 Root MSE: 2.480016 
Multiple R-Squared: 0.632964 Adjusted R-Squared: 0.564144 

> 
> ## ********************* W2SLS with restriction via restrict.regMat *******************
> fitw2sls3 <- systemfit( system, "W2SLS", data = Kmenta, restrict.regMat = tc,
+    inst = inst, x = TRUE, useMatrix = useMatrix )
> print( summary( fitw2sls3 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.284 3.40875 0.691766   0.564916

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.8385 3.93168 1.98284 0.750709 0.721381
supply 20 16 98.4451 6.15282 2.48049 0.632824 0.563979

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.96577 0.00000
supply 0.00000 6.13469

The covariance matrix of the residuals
        demand  supply
demand 3.93168 4.55874
supply 4.55874 6.15282

The correlations of the residuals
        demand  supply
demand 1.00000 0.92687
supply 0.92687 1.00000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 94.3832121  8.0090459 11.7846 1.4833e-13 ***
price       -0.2301550  0.0946243 -2.4323   0.020419 *  
income       0.3028131  0.0429717  7.0468 3.8987e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.982845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.838491 MSE: 3.931676 Root MSE: 1.982845 
Multiple R-Squared: 0.750709 Adjusted R-Squared: 0.721381 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.0493648 11.8000692 4.07196 0.00026334 ***
price        0.2429847  0.1005785 2.41587 0.02121849 *  
farmPrice    0.2625221  0.0459275 5.71601 2.0143e-06 ***
trend        0.3028131  0.0429717 7.04680 3.8987e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.480488 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.445133 MSE: 6.152821 Root MSE: 2.480488 
Multiple R-Squared: 0.632824 Adjusted R-Squared: 0.563979 

> 
> ## ********************* W2SLS with restriction via restrict.regMat (EViews-like) **************
> fitw2sls3e <- systemfit( system, "W2SLS", data = Kmenta, restrict.regMat = tc,
+    inst = inst, methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fitw2sls3e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.314 2.33364 0.691709   0.534939

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.9065 3.93567 1.98385 0.750455 0.721097
supply 20 16 98.4077 6.15048 2.48002 0.632964 0.564144

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.37091 0.00000
supply 0.00000 4.90775

The covariance matrix of the residuals
        demand  supply
demand 3.34532 3.75854
supply 3.75854 4.92039

The correlations of the residuals
         demand   supply
demand 1.000000 0.926405
supply 0.926405 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.3705871  7.3833738 12.78150 1.5321e-14 ***
price       -0.2294785  0.0870930 -2.63487   0.012584 *  
income       0.3022488  0.0393933  7.67260 6.4067e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.983854 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.906482 MSE: 3.935675 Root MSE: 1.983854 
Multiple R-Squared: 0.750455 Adjusted R-Squared: 0.721097 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 48.0661407 10.5574244 4.55283 6.4769e-05 ***
price        0.2429518  0.0899615 2.70062   0.010711 *  
farmPrice    0.2624439  0.0410963 6.38607 2.7271e-07 ***
trend        0.3022488  0.0393933 7.67260 6.4067e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.480016 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 98.407706 MSE: 6.150482 Root MSE: 2.480016 
Multiple R-Squared: 0.632964 Adjusted R-Squared: 0.564144 

> 
> ## ***************** W2SLS with 2 restrictions ********************
> fitw2sls4 <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, inst = inst, x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitw2sls4 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.186 3.57247 0.690084   0.575458

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  65.931 3.87829 1.96934 0.754094 0.725164
supply 20 16 100.255 6.26594 2.50319 0.626074 0.555963

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.88713 0.00000
supply 0.00000 6.24816

The covariance matrix of the residuals
        demand  supply
demand 3.87829 4.55288
supply 4.55288 6.26594

The correlations of the residuals
         demand   supply
demand 1.000000 0.923575
supply 0.923575 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.3042928  6.3056286 15.11416 < 2.22e-16 ***
price       -0.2427524  0.0684193 -3.54801  0.0011279 ** 
income       0.3062877  0.0393859  7.77659 3.9128e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.969339 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.931006 MSE: 3.878294 Root MSE: 1.969339 
Multiple R-Squared: 0.754094 Adjusted R-Squared: 0.725164 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.4229435  8.3295677 5.57327 2.8209e-06 ***
price        0.2572476  0.0684193 3.75987 0.00062153 ***
farmPrice    0.2642130  0.0455240 5.80382 1.4003e-06 ***
trend        0.3062877  0.0393859 7.77659 3.9128e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.503185 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.254988 MSE: 6.265937 Root MSE: 2.503185 
Multiple R-Squared: 0.626074 Adjusted R-Squared: 0.555963 

> # the same with symbolically specified restrictions
> fitw2sls4Sym <- systemfit( system, "W2SLS", data = Kmenta,
+    restrict.matrix = restrict2, inst = inst, x = TRUE,
+    useMatrix = useMatrix )
> all.equal( fitw2sls4, fitw2sls4Sym )
[1] "Component 2: target, current do not match when deparsed"
> 
> ## ***************** W2SLS with 2 restrictions (EViews-like) **************
> fitw2sls4e <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, inst = inst, methodResidCov = "noDfCor",
+    useMatrix = useMatrix )
> print( summary( fitw2sls4e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.170 2.44418 0.690114   0.546491

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  65.9449 3.87911 1.96955 0.754042 0.725105
supply 20 16 100.2248 6.26405 2.50281 0.626186 0.556096

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.30406 0.00000
supply 0.00000 4.99853

The covariance matrix of the residuals
        demand  supply
demand 3.29725 3.75222
supply 3.75222 5.01124

The correlations of the residuals
        demand  supply
demand 1.00000 0.92308
supply 0.92308 1.00000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.3470055  5.7578907 16.55936 < 2.22e-16 ***
price       -0.2427934  0.0621283 -3.90794 0.00040713 ***
income       0.3058918  0.0360405  8.48744 5.1479e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.969546 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.944924 MSE: 3.879113 Root MSE: 1.969546 
Multiple R-Squared: 0.754042 Adjusted R-Squared: 0.725105 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.4366489  7.5359804 6.16199 4.7267e-07 ***
price        0.2572066  0.0621283 4.13993 0.00020787 ***
farmPrice    0.2641565  0.0407358 6.48464 1.7850e-07 ***
trend        0.3058918  0.0360405 8.48744 5.1479e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.502809 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.224833 MSE: 6.264052 Root MSE: 2.502809 
Multiple R-Squared: 0.626186 Adjusted R-Squared: 0.556096 

> 
> ## ***************** W2SLS with 2 restrictions via R and restrict.regMat ******************
> fitw2sls5 <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, inst = inst,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitw2sls5 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.186 3.57247 0.690084   0.575458

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  65.931 3.87829 1.96934 0.754094 0.725164
supply 20 16 100.255 6.26594 2.50319 0.626074 0.555963

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.88713 0.00000
supply 0.00000 6.24816

The covariance matrix of the residuals
        demand  supply
demand 3.87829 4.55288
supply 4.55288 6.26594

The correlations of the residuals
         demand   supply
demand 1.000000 0.923575
supply 0.923575 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.3042928  6.3056286 15.11416 < 2.22e-16 ***
price       -0.2427524  0.0684193 -3.54801  0.0011279 ** 
income       0.3062877  0.0393859  7.77659 3.9128e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.969339 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.931006 MSE: 3.878294 Root MSE: 1.969339 
Multiple R-Squared: 0.754094 Adjusted R-Squared: 0.725164 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.4229435  8.3295677 5.57327 2.8209e-06 ***
price        0.2572476  0.0684193 3.75987 0.00062153 ***
farmPrice    0.2642130  0.0455240 5.80382 1.4003e-06 ***
trend        0.3062877  0.0393859 7.77659 3.9128e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.503185 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.254988 MSE: 6.265937 Root MSE: 2.503185 
Multiple R-Squared: 0.626074 Adjusted R-Squared: 0.555963 

> # the same with symbolically specified restrictions
> fitw2sls5Sym <- systemfit( system, "W2SLS", data = Kmenta,
+    restrict.matrix = restrict3, restrict.regMat = tc, inst = inst,
+    x = TRUE, useMatrix = useMatrix )
> all.equal( fitw2sls5, fitw2sls5Sym )
[1] "Component 2: target, current do not match when deparsed"
> 
> ## ***************** W2SLS with 2 restrictions via R and restrict.regMat (EViews-like) **************
> fitw2sls5e <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, inst = inst,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fitw2sls5e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.170 2.44418 0.690114   0.546491

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  65.9449 3.87911 1.96955 0.754042 0.725105
supply 20 16 100.2248 6.26405 2.50281 0.626186 0.556096

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.30406 0.00000
supply 0.00000 4.99853

The covariance matrix of the residuals
        demand  supply
demand 3.29725 3.75222
supply 3.75222 5.01124

The correlations of the residuals
        demand  supply
demand 1.00000 0.92308
supply 0.92308 1.00000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.3470055  5.7578907 16.55936 < 2.22e-16 ***
price       -0.2427934  0.0621283 -3.90794 0.00040713 ***
income       0.3058918  0.0360405  8.48744 5.1479e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.969546 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.944924 MSE: 3.879113 Root MSE: 1.969546 
Multiple R-Squared: 0.754042 Adjusted R-Squared: 0.725105 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.4366489  7.5359804 6.16199 4.7267e-07 ***
price        0.2572066  0.0621283 4.13993 0.00020787 ***
farmPrice    0.2641565  0.0407358 6.48464 1.7850e-07 ***
trend        0.3058918  0.0360405 8.48744 5.1479e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.502809 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.224833 MSE: 6.264052 Root MSE: 2.502809 
Multiple R-Squared: 0.626186 Adjusted R-Squared: 0.556096 

> 
> ## ****** 2SLS estimation with different instruments **********************
> fitw2slsd1 <- systemfit( system, "W2SLS", data = Kmenta, inst = instlist,
+    useMatrix = useMatrix )
> print( summary( fitw2slsd1 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.080 9.24969 0.694011   0.512239

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.96744 0.00000
supply 0.00000 6.03958

The covariance matrix of the residuals
        demand  supply
demand 3.96744 3.83562
supply 3.83562 6.03958

The correlations of the residuals
         demand   supply
demand 1.000000 0.783569
supply 0.783569 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 106.7893583  11.1435450  9.58307 2.8797e-08 ***
price        -0.4115989   0.1448445 -2.84166   0.011271 *  
income        0.3616812   0.0564061  6.41210 6.4389e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.446561 MSE: 3.967445 Root MSE: 1.991845 
Multiple R-Squared: 0.748441 Adjusted R-Squared: 0.718846 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 12.0105264 4.12409 0.00079536 ***
price        0.2400758  0.0999339 2.40235 0.02878451 *  
farmPrice    0.2556057  0.0472501 5.40964 5.7854e-05 ***
trend        0.2529242  0.0996551 2.53800 0.02192877 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> 
> ## ****** 2SLS estimation with different instruments (EViews-like)******************
> fitw2slsd1e <- systemfit( system, "W2SLS", data = Kmenta, inst = instlist,
+    methodResidCov = "noDfCor", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitw2slsd1e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.080 6.28979 0.694011   0.500365

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.37233 0.00000
supply 0.00000 4.83166

The covariance matrix of the residuals
        demand  supply
demand 3.37233 3.16294
supply 3.16294 4.83166

The correlations of the residuals
         demand   supply
demand 1.000000 0.783569
supply 0.783569 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 106.7893583  10.2738409 10.39430 6.0927e-12 ***
price        -0.4115989   0.1335401 -3.08221  0.0041293 ** 
income        0.3616812   0.0520038  6.95489 5.9841e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.991845 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.446561 MSE: 3.967445 Root MSE: 1.991845 
Multiple R-Squared: 0.748441 Adjusted R-Squared: 0.718846 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 10.7425414 4.61087 5.7787e-05 ***
price        0.2400758  0.0893836 2.68591  0.0112338 *  
farmPrice    0.2556057  0.0422617 6.04816 8.3732e-07 ***
trend        0.2529242  0.0891342 2.83757  0.0077151 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> 
> ## **** W2SLS estimation with different instruments and restriction ********
> fitw2slsd2 <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = instlist, useMatrix = useMatrix )
> print( summary( fitw2slsd2 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 166.202  5.1077 0.690054   0.556829

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.7761 3.81036 1.95201 0.758401 0.729978
supply 20 16 101.4260 6.33912 2.51776 0.621706 0.550776

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.79088 0.00000
supply 0.00000 6.27004

The covariance matrix of the residuals
        demand  supply
demand 3.81036 4.36425
supply 4.36425 6.33912

The correlations of the residuals
         demand   supply
demand 1.000000 0.887997
supply 0.887997 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 104.5694552  10.6343901  9.83314 1.7917e-11 ***
price        -0.3652534   0.1327478 -2.75148   0.009443 ** 
income        0.3369154   0.0484539  6.95331 5.1228e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.952014 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.776121 MSE: 3.81036 Root MSE: 1.952014 
Multiple R-Squared: 0.758401 Adjusted R-Squared: 0.729978 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.0355858 11.9465757 3.93716 0.00038759 ***
price        0.2449732  0.1016896 2.40903 0.02155986 *  
farmPrice    0.2672499  0.0465266 5.74402 1.8522e-06 ***
trend        0.3369154  0.0484539 6.95331 5.1228e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.517761 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.425951 MSE: 6.339122 Root MSE: 2.517761 
Multiple R-Squared: 0.621706 Adjusted R-Squared: 0.550776 

> 
> ## **** W2SLS estimation with different instruments and restriction (EViews-like)*
> fitw2slsd2e <- systemfit( system, "W2SLS", data = Kmenta, restrict.matrix = restrm,
+    inst = instlist, methodResidCov = "noDfCor", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitw2slsd2e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 166.015 3.45234 0.690403   0.534815

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.7154 3.80679 1.95110 0.758627 0.730231
supply 20 16 101.2993 6.33121 2.51619 0.622179 0.551337

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.22225 0.00000
supply 0.00000 5.01603

The covariance matrix of the residuals
        demand  supply
demand 3.23577 3.59677
supply 3.59677 5.06497

The correlations of the residuals
         demand   supply
demand 1.000000 0.888454
supply 0.888454 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 104.4638092   9.7929422 10.66725 2.1747e-12 ***
price        -0.3630478   0.1219861 -2.97614  0.0053447 ** 
income        0.3357367   0.0443578  7.56884 8.6188e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.9511 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.715432 MSE: 3.80679 Root MSE: 1.9511 
Multiple R-Squared: 0.758627 Adjusted R-Squared: 0.730231 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.0706232 10.6890378 4.40364 0.00010042 ***
price        0.2449045  0.0909557 2.69257 0.01092512 *  
farmPrice    0.2670865  0.0416353 6.41490 2.5036e-07 ***
trend        0.3357367  0.0443578 7.56884 8.6188e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.516189 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.299326 MSE: 6.331208 Root MSE: 2.516189 
Multiple R-Squared: 0.622179 Adjusted R-Squared: 0.551337 

> 
> ## ** W2SLS estimation with different instruments and restriction via restrict.regMat ****
> fitw2slsd3 <- systemfit( system, "W2SLS", data = Kmenta, restrict.regMat = tc,
+    inst = instlist, x = TRUE, useMatrix = useMatrix )
> print( summary( fitw2slsd3 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 166.202  5.1077 0.690054   0.556829

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.7761 3.81036 1.95201 0.758401 0.729978
supply 20 16 101.4260 6.33912 2.51776 0.621706 0.550776

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.79088 0.00000
supply 0.00000 6.27004

The covariance matrix of the residuals
        demand  supply
demand 3.81036 4.36425
supply 4.36425 6.33912

The correlations of the residuals
         demand   supply
demand 1.000000 0.887997
supply 0.887997 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 104.5694552  10.6343901  9.83314 1.7917e-11 ***
price        -0.3652534   0.1327478 -2.75148   0.009443 ** 
income        0.3369154   0.0484539  6.95331 5.1228e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.952014 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.776121 MSE: 3.81036 Root MSE: 1.952014 
Multiple R-Squared: 0.758401 Adjusted R-Squared: 0.729978 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.0355858 11.9465757 3.93716 0.00038759 ***
price        0.2449732  0.1016896 2.40903 0.02155986 *  
farmPrice    0.2672499  0.0465266 5.74402 1.8522e-06 ***
trend        0.3369154  0.0484539 6.95331 5.1228e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.517761 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.425951 MSE: 6.339122 Root MSE: 2.517761 
Multiple R-Squared: 0.621706 Adjusted R-Squared: 0.550776 

> 
> ## W2SLS estimation with different instruments and restriction via restrict.regMat (EViews-like)
> fitw2slsd3e <- systemfit( system, "W2SLS", data = Kmenta, restrict.regMat = tc,
+    inst = instlist, methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fitw2slsd3e, useDfSys = TRUE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 166.015 3.45234 0.690403   0.534815

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.7154 3.80679 1.95110 0.758627 0.730231
supply 20 16 101.2993 6.33121 2.51619 0.622179 0.551337

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.22225 0.00000
supply 0.00000 5.01603

The covariance matrix of the residuals
        demand  supply
demand 3.23577 3.59677
supply 3.59677 5.06497

The correlations of the residuals
         demand   supply
demand 1.000000 0.888454
supply 0.888454 1.000000


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 104.4638092   9.7929422 10.66725 2.1747e-12 ***
price        -0.3630478   0.1219861 -2.97614  0.0053447 ** 
income        0.3357367   0.0443578  7.56884 8.6188e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.9511 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.715432 MSE: 3.80679 Root MSE: 1.9511 
Multiple R-Squared: 0.758627 Adjusted R-Squared: 0.730231 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 47.0706232 10.6890378 4.40364 0.00010042 ***
price        0.2449045  0.0909557 2.69257 0.01092512 *  
farmPrice    0.2670865  0.0416353 6.41490 2.5036e-07 ***
trend        0.3357367  0.0443578 7.56884 8.6188e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.516189 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.299326 MSE: 6.331208 Root MSE: 2.516189 
Multiple R-Squared: 0.622179 Adjusted R-Squared: 0.551337 

> 
> 
> ## *********** estimations with a single regressor ************
> fitw2slsS1 <- systemfit(
+    list( consump ~ price - 1, price ~ consump + trend ), "W2SLS",
+    data = Kmenta, inst = ~ farmPrice + trend + income, useMatrix = useMatrix )
> print( summary( fitw2slsS1 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov    OLS-R2 McElroy-R2
system 40 36 1543.74 179.335 -0.650411   0.852456

     N DF     SSR     MSE    RMSE        R2    Adj R2
eq1 20 19 861.480 45.3411 6.73358 -2.213109 -2.213109
eq2 20 17 682.257 40.1328 6.33504 -0.022489 -0.142782

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 45.3411  0.0000
eq2  0.0000 40.1328

The covariance matrix of the residuals
         eq1      eq2
eq1  45.3411 -40.5010
eq2 -40.5010  40.1328

The correlations of the residuals
          eq1       eq2
eq1  1.000000 -0.950278
eq2 -0.950278  1.000000


W2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1
Instruments: ~farmPrice + trend + income

       Estimate Std. Error t value   Pr(>|t|)    
price 1.0060425  0.0150302 66.9345 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 6.733578 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.480497 MSE: 45.341079 Root MSE: 6.733578 
Multiple R-Squared: -2.213109 Adjusted R-Squared: -2.213109 


W2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ consump + trend
Instruments: ~farmPrice + trend + income

              Estimate Std. Error  t value Pr(>|t|)
(Intercept) 55.5365164 46.2667678  1.20035  0.24646
consump      0.4452989  0.4622029  0.96343  0.34884
trend       -0.0426021  0.2495778 -0.17070  0.86648

Residual standard error: 6.335044 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 682.257396 MSE: 40.132788 Root MSE: 6.335044 
Multiple R-Squared: -0.022489 Adjusted R-Squared: -0.142782 

> fitw2slsS2 <- systemfit(
+    list( consump ~ price - 1, consump ~ trend - 1 ), "W2SLS",
+    data = Kmenta, inst = ~ farmPrice + price + income, useMatrix = useMatrix )
> print( summary( fitw2slsS2 ) )

systemfit results 
method: W2SLS 

        N DF   SSR detRCov   OLS-R2 McElroy-R2
system 40 38 47456  111148 -87.4996   -5.27524

     N DF       SSR       MSE     RMSE         R2     Adj R2
eq1 20 19   861.449   45.3394  6.73345   -2.21299   -2.21299
eq2 20 19 46594.549 2452.3447 49.52115 -172.78614 -172.78614

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 45.3394    0.00
eq2  0.0000 2452.34

The covariance matrix of the residuals
         eq1        eq2
eq1 45.33940   -6.33258
eq2 -6.33258 2452.34470

The correlations of the residuals
           eq1        eq2
eq1  1.0000000 -0.0448498
eq2 -0.0448498  1.0000000


W2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1
Instruments: ~farmPrice + price + income

       Estimate Std. Error t value   Pr(>|t|)    
price 1.0056434  0.0150286 66.9155 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 6.733453 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.448515 MSE: 45.339396 Root MSE: 6.733453 
Multiple R-Squared: -2.21299 Adjusted R-Squared: -2.21299 


W2SLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ trend - 1
Instruments: ~farmPrice + price + income

      Estimate Std. Error t value   Pr(>|t|)    
trend  7.57760    0.93412 8.11202 1.3624e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.521154 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46594.549257 MSE: 2452.344698 Root MSE: 49.521154 
Multiple R-Squared: -172.78614 Adjusted R-Squared: -172.78614 

> fitw2slsS3 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "W2SLS",
+    data = Kmenta, inst = instlist, useMatrix = useMatrix )
> print( summary( fitw2slsS3 ) )

systemfit results 
method: W2SLS 

        N DF   SSR detRCov   OLS-R2 McElroy-R2
system 40 38 97978  687515 -103.748   -10.6088

     N DF     SSR     MSE   RMSE        R2    Adj R2
eq1 20 19 50950.0 2681.58 51.784 -189.0308 -189.0308
eq2 20 19 47028.1 2475.16 49.751  -69.4803  -69.4803

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 2681.58    0.00
eq2    0.00 2475.16

The covariance matrix of the residuals
        eq1     eq2
eq1 2681.58 2439.23
eq2 2439.23 2475.16

The correlations of the residuals
        eq1     eq2
eq1 1.00000 0.98909
eq2 0.98909 1.00000


W2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1
Instruments: ~income + farmPrice

      Estimate Std. Error t value   Pr(>|t|)    
trend  8.64882    1.04544 8.27293 1.0147e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 51.783957 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 50949.98529 MSE: 2681.578173 Root MSE: 51.783957 
Multiple R-Squared: -189.030839 Adjusted R-Squared: -189.030839 


W2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1
Instruments: ~income + farmPrice + trend

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.318426   0.928669 7.88055 2.0940e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.751015 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47028.107165 MSE: 2475.163535 Root MSE: 49.751015 
Multiple R-Squared: -69.480332 Adjusted R-Squared: -69.480332 

> fitw2slsS4 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "W2SLS",
+    data = Kmenta, inst = ~ farmPrice + trend + income,
+    restrict.matrix = matrix( c( 1, -1 ), nrow = 1 ), useMatrix = useMatrix )
> print( summary( fitw2slsS4 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov  OLS-R2 McElroy-R2
system 40 39 93547.8  111736 -99.012   -1.02688

     N DF     SSR     MSE    RMSE        R2    Adj R2
eq1 20 19 46514.2 2448.12 49.4785 -172.4865 -172.4865
eq2 20 19 47033.5 2475.45 49.7539  -69.4885  -69.4885

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 2448.12    0.00
eq2    0.00 2475.45

The covariance matrix of the residuals
        eq1     eq2
eq1 2448.12 2438.95
eq2 2438.95 2475.45

The correlations of the residuals
         eq1      eq2
eq1 1.000000 0.988345
eq2 0.988345 1.000000


W2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1
Instruments: ~farmPrice + trend + income

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.361888   0.654881 11.2416 8.4155e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.47845 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46514.224144 MSE: 2448.11706 Root MSE: 49.47845 
Multiple R-Squared: -172.486548 Adjusted R-Squared: -172.486548 


W2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1
Instruments: ~farmPrice + trend + income

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.361888   0.654881 11.2416 8.4155e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.753883 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47033.52844 MSE: 2475.448865 Root MSE: 49.753883 
Multiple R-Squared: -69.488457 Adjusted R-Squared: -69.488457 

> fitw2slsS5 <- systemfit(
+    list( consump ~ 1, price ~ 1 ), "W2SLS",
+    data = Kmenta, inst = instlist, useMatrix = useMatrix )
> print( summary( fitw2slsS5 ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov OLS-R2 McElroy-R2
system 40 38 935.366 490.798      0          0

     N DF     SSR     MSE    RMSE R2 Adj R2
eq1 20 19 268.114 14.1113 3.75650  0      0
eq2 20 19 667.251 35.1185 5.92609  0      0

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 14.1113  0.0000
eq2  0.0000 35.1185

The covariance matrix of the residuals
         eq1      eq2
eq1 14.11128  2.18374
eq2  2.18374 35.11850

The correlations of the residuals
          eq1       eq2
eq1 1.0000000 0.0980957
eq2 0.0980957 1.0000000


W2SLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ 1
Instruments: ~income + farmPrice

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 100.898200   0.839979  120.12 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 3.756498 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 268.114299 MSE: 14.111279 Root MSE: 3.756498 
Multiple R-Squared: 0 Adjusted R-Squared: 0 


W2SLS estimates for 'eq2' (equation 2)
Model Formula: price ~ 1
Instruments: ~income + farmPrice + trend

             Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 100.01905    1.32511 75.4796 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 5.926086 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 667.251499 MSE: 35.1185 Root MSE: 5.926086 
Multiple R-Squared: 0 Adjusted R-Squared: 0 

> 
> 
> ## **************** shorter summaries **********************
> print( summary( fitw2sls1e, residCov = FALSE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 162.362 2.96768 0.697214   0.524765

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 65.7291 3.86642 1.96632 0.754847 0.726005
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 94.6333039  7.3026521 12.95876 3.0779e-10 ***
price       -0.2435565  0.0889541 -2.73800   0.014016 *  
income       0.3139918  0.0432799  7.25491 1.3454e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.966321 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.729088 MSE: 3.866417 Root MSE: 1.966321 
Multiple R-Squared: 0.754847 Adjusted R-Squared: 0.726005 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 49.5324417 10.7425414 4.61087 0.00028922 ***
price        0.2400758  0.0893836 2.68591 0.01623367 *  
farmPrice    0.2556057  0.0422617 6.04816 1.6913e-05 ***
trend        0.2529242  0.0891342 2.83757 0.01188273 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.457555 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.633244 MSE: 6.039578 Root MSE: 2.457555 
Multiple R-Squared: 0.639582 Adjusted R-Squared: 0.572004 

> 
> print( summary( fitw2sls2, residCov = FALSE, equations = FALSE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.284 3.40875 0.691766   0.564916

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.8385 3.93168 1.98284 0.750709 0.721381
supply 20 16 98.4451 6.15282 2.48049 0.632824 0.563979


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 94.3832121  8.0090459 11.78458 1.4833e-13 ***
demand_price       -0.2301550  0.0946243 -2.43230 0.02041903 *  
demand_income       0.3028131  0.0429717  7.04680 3.8987e-08 ***
supply_(Intercept) 48.0493648 11.8000692  4.07196 0.00026334 ***
supply_price        0.2429847  0.1005785  2.41587 0.02121849 *  
supply_farmPrice    0.2625221  0.0459275  5.71601 2.0143e-06 ***
supply_trend        0.3028131  0.0429717  7.04680 3.8987e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitw2sls3, useDfSys = FALSE ), equations = FALSE )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 165.284 3.40875 0.691766   0.564916

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 66.8385 3.93168 1.98284 0.750709 0.721381
supply 20 16 98.4451 6.15282 2.48049 0.632824 0.563979

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.96577 0.00000
supply 0.00000 6.13469

The covariance matrix of the residuals
        demand  supply
demand 3.93168 4.55874
supply 4.55874 6.15282

The correlations of the residuals
        demand  supply
demand 1.00000 0.92687
supply 0.92687 1.00000


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 94.3832121  8.0090459 11.78458 1.3269e-09 ***
demand_price       -0.2301550  0.0946243 -2.43230 0.02634408 *  
demand_income       0.3028131  0.0429717  7.04680 1.9626e-06 ***
supply_(Intercept) 48.0493648 11.8000692  4.07196 0.00088725 ***
supply_price        0.2429847  0.1005785  2.41587 0.02801924 *  
supply_farmPrice    0.2625221  0.0459275  5.71601 3.1853e-05 ***
supply_trend        0.3028131  0.0429717  7.04680 2.7603e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitw2sls4e ), residCov = FALSE )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.170 2.44418 0.690114   0.546491

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  65.9449 3.87911 1.96955 0.754042 0.725105
supply 20 16 100.2248 6.26405 2.50281 0.626186 0.556096


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.3470055  5.7578907 16.55936 < 2.22e-16 ***
price       -0.2427934  0.0621283 -3.90794 0.00040713 ***
income       0.3058918  0.0360405  8.48744 5.1479e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.969546 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.944924 MSE: 3.879113 Root MSE: 1.969546 
Multiple R-Squared: 0.754042 Adjusted R-Squared: 0.725105 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.4366489  7.5359804 6.16199 4.7267e-07 ***
price        0.2572066  0.0621283 4.13993 0.00020787 ***
farmPrice    0.2641565  0.0407358 6.48464 1.7850e-07 ***
trend        0.3058918  0.0360405 8.48744 5.1479e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.502809 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.224833 MSE: 6.264052 Root MSE: 2.502809 
Multiple R-Squared: 0.626186 Adjusted R-Squared: 0.556096 

> 
> print( summary( fitw2sls5, useDfSys = FALSE, residCov = FALSE ) )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 166.186 3.57247 0.690084   0.575458

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17  65.931 3.87829 1.96934 0.754094 0.725164
supply 20 16 100.255 6.26594 2.50319 0.626074 0.555963


W2SLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income
Instruments: ~income + farmPrice + trend

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 95.3042928  6.3056286 15.11416 2.7450e-11 ***
price       -0.2427524  0.0684193 -3.54801  0.0024727 ** 
income       0.3062877  0.0393859  7.77659 5.3558e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.969339 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.931006 MSE: 3.878294 Root MSE: 1.969339 
Multiple R-Squared: 0.754094 Adjusted R-Squared: 0.725164 


W2SLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend
Instruments: ~income + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 46.4229435  8.3295677 5.57327 4.1999e-05 ***
price        0.2572476  0.0684193 3.75987  0.0017117 ** 
farmPrice    0.2642130  0.0455240 5.80382 2.6906e-05 ***
trend        0.3062877  0.0393859 7.77659 7.9922e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.503185 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.254988 MSE: 6.265937 Root MSE: 2.503185 
Multiple R-Squared: 0.626074 Adjusted R-Squared: 0.555963 

> 
> print( summary( fitw2slsd1, useDfSys = TRUE ), residCov = FALSE,
+    equations = FALSE )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 164.080 9.24969 0.694011   0.512239

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 67.4466 3.96745 1.99185 0.748441 0.718846
supply 20 16 96.6332 6.03958 2.45756 0.639582 0.572004


Coefficients:
                      Estimate  Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 106.7893583  11.1435450  9.58307 4.6518e-11 ***
demand_price        -0.4115989   0.1448445 -2.84166 0.00763626 ** 
demand_income        0.3616812   0.0564061  6.41210 2.8834e-07 ***
supply_(Intercept)  49.5324417  12.0105264  4.12409 0.00023625 ***
supply_price         0.2400758   0.0999339  2.40235 0.02207594 *  
supply_farmPrice     0.2556057   0.0472501  5.40964 5.5059e-06 ***
supply_trend         0.2529242   0.0996551  2.53800 0.01605307 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitw2slsd2e, equations = TRUE ), equations = FALSE )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 166.015 3.45234 0.690403   0.534815

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.7154 3.80679 1.95110 0.758627 0.730231
supply 20 16 101.2993 6.33121 2.51619 0.622179 0.551337

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.22225 0.00000
supply 0.00000 5.01603

The covariance matrix of the residuals
        demand  supply
demand 3.23577 3.59677
supply 3.59677 5.06497

The correlations of the residuals
         demand   supply
demand 1.000000 0.888454
supply 0.888454 1.000000


Coefficients:
                      Estimate  Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 104.4638092   9.7929422 10.66725 2.1747e-12 ***
demand_price        -0.3630478   0.1219861 -2.97614 0.00534471 ** 
demand_income        0.3357367   0.0443578  7.56884 8.6188e-09 ***
supply_(Intercept)  47.0706232  10.6890378  4.40364 0.00010042 ***
supply_price         0.2449045   0.0909557  2.69257 0.01092512 *  
supply_farmPrice     0.2670865   0.0416353  6.41490 2.5036e-07 ***
supply_trend         0.3357367   0.0443578  7.56884 8.6188e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitw2slsd3e, equations = FALSE ), residCov = FALSE )

systemfit results 
method: W2SLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 166.015 3.45234 0.690403   0.534815

        N DF      SSR     MSE    RMSE       R2   Adj R2
demand 20 17  64.7154 3.80679 1.95110 0.758627 0.730231
supply 20 16 101.2993 6.33121 2.51619 0.622179 0.551337


Coefficients:
                      Estimate  Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 104.4638092   9.7929422 10.66725 2.1747e-12 ***
demand_price        -0.3630478   0.1219861 -2.97614 0.00534471 ** 
demand_income        0.3357367   0.0443578  7.56884 8.6188e-09 ***
supply_(Intercept)  47.0706232  10.6890378  4.40364 0.00010042 ***
supply_price         0.2449045   0.0909557  2.69257 0.01092512 *  
supply_farmPrice     0.2670865   0.0416353  6.41490 2.5036e-07 ***
supply_trend         0.3357367   0.0443578  7.56884 8.6188e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> 
> ## ****************** residuals **************************
> print( residuals( fitw2sls1e ) )
       demand      supply
1   0.8431358 -0.43484924
2  -0.6977241 -1.21307836
3   2.3589601  1.70902028
4   1.4898215  0.79558067
5   2.1390993  1.59415675
6   1.2766798  0.65949720
7   1.5710280  1.43462590
8  -3.0659057 -4.87240247
9  -1.1248574 -2.39745009
10  2.4920014  3.14274752
11 -0.1076273  0.06887481
12 -2.2916434 -1.39781154
13 -1.5980935 -1.11362011
14 -0.2712910  1.16839025
15  1.9579965  3.48646205
16 -3.4304568 -3.82853007
17 -0.3129594  0.67934006
18 -2.1512704 -2.77132858
19  1.5915359  2.66683272
20 -0.6684295  0.62354227
> print( residuals( fitw2sls1e$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 0.8431358 -0.6977241  2.3589601  1.4898215  2.1390993  1.2766798  1.5710280 
         8          9         10         11         12         13         14 
-3.0659057 -1.1248574  2.4920014 -0.1076273 -2.2916434 -1.5980935 -0.2712910 
        15         16         17         18         19         20 
 1.9579965 -3.4304568 -0.3129594 -2.1512704  1.5915359 -0.6684295 
> 
> print( residuals( fitw2sls2 ) )
       demand      supply
1   0.7257661  0.02870113
2  -0.7538863 -0.81848904
3   2.3038469  2.05613222
4   1.4371233  1.09660460
5   2.1914641  1.77637667
6   1.3173705  0.80557824
7   1.6203247  1.54411718
8  -3.0147324 -4.85260318
9  -1.0874251 -2.39573800
10  2.5132867  3.16577211
11 -0.2654950  0.17216929
12 -2.5059925 -1.27527061
13 -1.7814066 -1.06882275
14 -0.3318886  1.10275485
15  2.0858742  3.23696563
16 -3.3248755 -4.15628218
17 -0.1444445  0.29842969
18 -2.1280937 -3.12859225
19  1.6616457  2.27671313
20 -0.5184619  0.13548327
> print( residuals( fitw2sls2$eq[[ 2 ]] ) )
          1           2           3           4           5           6 
 0.02870113 -0.81848904  2.05613222  1.09660460  1.77637667  0.80557824 
          7           8           9          10          11          12 
 1.54411718 -4.85260318 -2.39573800  3.16577211  0.17216929 -1.27527061 
         13          14          15          16          17          18 
-1.06882275  1.10275485  3.23696563 -4.15628218  0.29842969 -3.12859225 
         19          20 
 2.27671313  0.13548327 
> 
> print( residuals( fitw2sls3 ) )
       demand      supply
1   0.7257661  0.02870113
2  -0.7538863 -0.81848904
3   2.3038469  2.05613222
4   1.4371233  1.09660460
5   2.1914641  1.77637667
6   1.3173705  0.80557824
7   1.6203247  1.54411718
8  -3.0147324 -4.85260318
9  -1.0874251 -2.39573800
10  2.5132867  3.16577211
11 -0.2654950  0.17216929
12 -2.5059925 -1.27527061
13 -1.7814066 -1.06882275
14 -0.3318886  1.10275485
15  2.0858742  3.23696563
16 -3.3248755 -4.15628218
17 -0.1444445  0.29842969
18 -2.1280937 -3.12859225
19  1.6616457  2.27671313
20 -0.5184619  0.13548327
> print( residuals( fitw2sls3$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 0.7257661 -0.7538863  2.3038469  1.4371233  2.1914641  1.3173705  1.6203247 
         8          9         10         11         12         13         14 
-3.0147324 -1.0874251  2.5132867 -0.2654950 -2.5059925 -1.7814066 -0.3318886 
        15         16         17         18         19         20 
 2.0858742 -3.3248755 -0.1444445 -2.1280937  1.6616457 -0.5184619 
> 
> print( residuals( fitw2sls4e ) )
       demand      supply
1   0.7608105  0.05137894
2  -0.7004372 -0.85673637
3   2.3495897  2.02659612
4   1.4917837  1.05039255
5   2.1589859  1.79884196
6   1.3011260  0.80852149
7   1.6161155  1.52533399
8  -2.9863797 -4.93390814
9  -1.1297040 -2.36004023
10  2.4287670  3.28584003
11 -0.2840588  0.29478347
12 -2.4578571 -1.21676047
13 -1.7050716 -1.07555991
14 -0.3265005  1.13482667
15  2.0068125  3.28352394
16 -3.3679836 -4.16460298
17 -0.3118341  0.44803515
18 -2.0987143 -3.20178487
19  1.6937842  2.18074100
20 -0.4392338 -0.07942234
> print( residuals( fitw2sls4e$eq[[ 2 ]] ) )
          1           2           3           4           5           6 
 0.05137894 -0.85673637  2.02659612  1.05039255  1.79884196  0.80852149 
          7           8           9          10          11          12 
 1.52533399 -4.93390814 -2.36004023  3.28584003  0.29478347 -1.21676047 
         13          14          15          16          17          18 
-1.07555991  1.13482667  3.28352394 -4.16460298  0.44803515 -3.20178487 
         19          20 
 2.18074100 -0.07942234 
> 
> print( residuals( fitw2sls5 ) )
       demand      supply
1   0.7648107  0.05505020
2  -0.7006368 -0.85368450
3   2.3497804  2.02928602
4   1.4913366  1.05269909
5   2.1581718  1.80030236
6   1.2999751  0.80967308
7   1.6138297  1.52617043
8  -2.9906382 -4.93385601
9  -1.1291875 -2.35998136
10  2.4325459  3.28617373
11 -0.2748922  0.29575114
12 -2.4496373 -1.21572314
13 -1.7000686 -1.07521648
14 -0.3237031  1.13435173
15  2.0048098  3.28162273
16 -3.3709146 -4.16718892
17 -0.3108310  0.44523245
18 -2.1015960 -3.20468524
19  1.6883363  2.17755347
20 -0.4514910 -0.08353076
> print( residuals( fitw2sls5$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 0.7648107 -0.7006368  2.3497804  1.4913366  2.1581718  1.2999751  1.6138297 
         8          9         10         11         12         13         14 
-2.9906382 -1.1291875  2.4325459 -0.2748922 -2.4496373 -1.7000686 -0.3237031 
        15         16         17         18         19         20 
 2.0048098 -3.3709146 -0.3108310 -2.1015960  1.6883363 -0.4514910 
> 
> print( residuals( fitw2slsd1 ) )
        demand      supply
1   1.37754421 -0.43484924
2   0.01250751 -1.21307836
3   2.97280508  1.70902028
4   2.21210574  0.79558067
5   1.69196496  1.59415675
6   1.04066455  0.65949720
7   1.47679961  1.43462590
8  -2.75825263 -4.87240247
9  -1.68069158 -2.39745009
10  1.42653037  3.14274752
11 -0.20293023  0.06887481
12 -1.51225698 -1.39781154
13 -0.49576532 -1.11362011
14 -0.15281105  1.16839025
15  0.86918902  3.48646205
16 -4.05472577 -3.82853007
17 -2.53094129  0.67934006
18 -1.80700101 -2.77132858
19  1.92994046  2.66683272
20  0.18532435  0.62354227
> print( residuals( fitw2slsd1$eq[[ 2 ]] ) )
          1           2           3           4           5           6 
-0.43484924 -1.21307836  1.70902028  0.79558067  1.59415675  0.65949720 
          7           8           9          10          11          12 
 1.43462590 -4.87240247 -2.39745009  3.14274752  0.06887481 -1.39781154 
         13          14          15          16          17          18 
-1.11362011  1.16839025  3.48646205 -3.82853007  0.67934006 -2.77132858 
         19          20 
 2.66683272  0.62354227 
> 
> print( residuals( fitw2slsd2e ) )
       demand      supply
1   1.0998403  0.33461652
2  -0.1919033 -0.55808380
3   2.7852932  2.28520524
4   2.0115123  1.29526229
5   1.8487077  1.89663086
6   1.1449265  0.90198295
7   1.5729442  1.61637485
8  -2.7222573 -4.83953684
9  -1.5314740 -2.39460813
10  1.6293157  3.18096696
11 -0.4483374  0.24033743
12 -1.9884825 -1.19440096
13 -0.9716183 -1.03925918
14 -0.2714131  1.05943944
15  1.2514728  3.07231299
16 -3.7823256 -4.37257887
17 -1.9039258  0.04705174
18 -1.8229490 -3.36436480
19  1.9923322  2.01925765
20  0.2983414 -0.18660633
> print( residuals( fitw2slsd2e$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 1.0998403 -0.1919033  2.7852932  2.0115123  1.8487077  1.1449265  1.5729442 
         8          9         10         11         12         13         14 
-2.7222573 -1.5314740  1.6293157 -0.4483374 -1.9884825 -0.9716183 -0.2714131 
        15         16         17         18         19         20 
 1.2514728 -3.7823256 -1.9039258 -1.8229490  1.9923322  0.2983414 
> 
> print( residuals( fitw2slsd3e ) )
       demand      supply
1   1.0998403  0.33461652
2  -0.1919033 -0.55808380
3   2.7852932  2.28520524
4   2.0115123  1.29526229
5   1.8487077  1.89663086
6   1.1449265  0.90198295
7   1.5729442  1.61637485
8  -2.7222573 -4.83953684
9  -1.5314740 -2.39460813
10  1.6293157  3.18096696
11 -0.4483374  0.24033743
12 -1.9884825 -1.19440096
13 -0.9716183 -1.03925918
14 -0.2714131  1.05943944
15  1.2514728  3.07231299
16 -3.7823256 -4.37257887
17 -1.9039258  0.04705174
18 -1.8229490 -3.36436480
19  1.9923322  2.01925765
20  0.2983414 -0.18660633
> print( residuals( fitw2slsd3e$eq[[ 2 ]] ) )
          1           2           3           4           5           6 
 0.33461652 -0.55808380  2.28520524  1.29526229  1.89663086  0.90198295 
          7           8           9          10          11          12 
 1.61637485 -4.83953684 -2.39460813  3.18096696  0.24033743 -1.19440096 
         13          14          15          16          17          18 
-1.03925918  1.05943944  3.07231299 -4.37257887  0.04705174 -3.36436480 
         19          20 
 2.01925765 -0.18660633 
> 
> 
> ## *************** coefficients *********************
> print( round( coef( fitw2sls1e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         94.633304          -0.243557           0.313992          49.532442 
      supply_price   supply_farmPrice       supply_trend 
          0.240076           0.255606           0.252924 
> print( round( coef( fitw2sls1e$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  49.532442    0.240076    0.255606    0.252924 
> 
> print( round( coef( fitw2slsd2e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
        104.463809          -0.363048           0.335737          47.070623 
      supply_price   supply_farmPrice       supply_trend 
          0.244904           0.267086           0.335737 
> print( round( coef( fitw2slsd2e$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
 104.463809   -0.363048    0.335737 
> 
> print( round( coef( fitw2slsd3e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
        104.463809          -0.363048           0.335737          47.070623 
      supply_price   supply_farmPrice       supply_trend 
          0.244904           0.267086           0.335737 
> print( round( coef( fitw2slsd3e, modified.regMat = TRUE ), digits = 6 ) )
        C1         C2         C3         C4         C5         C6 
104.463809  -0.363048   0.335737  47.070623   0.244904   0.267086 
> print( round( coef( fitw2slsd3e$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  47.070623    0.244904    0.267086    0.335737 
> 
> print( round( coef( fitw2sls4 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         95.304293          -0.242752           0.306288          46.422943 
      supply_price   supply_farmPrice       supply_trend 
          0.257248           0.264213           0.306288 
> print( round( coef( fitw2sls4$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
  95.304293   -0.242752    0.306288 
> 
> print( round( coef( fitw2sls5 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         95.304293          -0.242752           0.306288          46.422943 
      supply_price   supply_farmPrice       supply_trend 
          0.257248           0.264213           0.306288 
> print( round( coef( fitw2sls5, modified.regMat = TRUE ), digits = 6 ) )
       C1        C2        C3        C4        C5        C6 
95.304293 -0.242752  0.306288 46.422943  0.257248  0.264213 
> print( round( coef( fitw2sls5$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  46.422943    0.257248    0.264213    0.306288 
> 
> 
> ## *************** coefficients with stats *********************
> print( round( coef( summary( fitw2sls1e, useDfSys = FALSE ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 94.633304   7.302652 12.958758 0.000000
demand_price       -0.243557   0.088954 -2.738002 0.014016
demand_income       0.313992   0.043280  7.254908 0.000001
supply_(Intercept) 49.532442  10.742541  4.610868 0.000289
supply_price        0.240076   0.089384  2.685905 0.016234
supply_farmPrice    0.255606   0.042262  6.048158 0.000017
supply_trend        0.252924   0.089134  2.837565 0.011883
> print( round( coef( summary( fitw2sls1e$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 49.532442  10.742541 4.610868 0.000289
price        0.240076   0.089384 2.685905 0.016234
farmPrice    0.255606   0.042262 6.048158 0.000017
trend        0.252924   0.089134 2.837565 0.011883
> 
> print( round( coef( summary( fitw2slsd2e ) ), digits = 6 ) )
                     Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 104.463809   9.792942 10.667255 0.000000
demand_price        -0.363048   0.121986 -2.976140 0.005345
demand_income        0.335737   0.044358  7.568837 0.000000
supply_(Intercept)  47.070623  10.689038  4.403635 0.000100
supply_price         0.244904   0.090956  2.692570 0.010925
supply_farmPrice     0.267086   0.041635  6.414902 0.000000
supply_trend         0.335737   0.044358  7.568837 0.000000
> print( round( coef( summary( fitw2slsd2e$eq[[ 1 ]] ) ), digits = 6 ) )
              Estimate Std. Error   t value Pr(>|t|)
(Intercept) 104.463809   9.792942 10.667255 0.000000
price        -0.363048   0.121986 -2.976140 0.005345
income        0.335737   0.044358  7.568837 0.000000
> 
> print( round( coef( summary( fitw2slsd3e, useDfSys = FALSE ) ), digits = 6 ) )
                     Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 104.463809   9.792942 10.667255 0.000000
demand_price        -0.363048   0.121986 -2.976140 0.008475
demand_income        0.335737   0.044358  7.568837 0.000001
supply_(Intercept)  47.070623  10.689038  4.403635 0.000444
supply_price         0.244904   0.090956  2.692570 0.016014
supply_farmPrice     0.267086   0.041635  6.414902 0.000009
supply_trend         0.335737   0.044358  7.568837 0.000001
> print( round( coef( summary( fitw2slsd3e, useDfSys = FALSE ),
+    modified.regMat = TRUE ), digits = 6 ) )
     Estimate Std. Error   t value Pr(>|t|)
C1 104.463809   9.792942 10.667255       NA
C2  -0.363048   0.121986 -2.976140       NA
C3   0.335737   0.044358  7.568837       NA
C4  47.070623  10.689038  4.403635       NA
C5   0.244904   0.090956  2.692570       NA
C6   0.267086   0.041635  6.414902       NA
> print( round( coef( summary( fitw2slsd3e$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 47.070623  10.689038 4.403635 0.000444
price        0.244904   0.090956 2.692570 0.016014
farmPrice    0.267086   0.041635 6.414902 0.000009
trend        0.335737   0.044358 7.568837 0.000001
> 
> print( round( coef( summary( fitw2sls4 ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 95.304293   6.305629 15.114162 0.000000
demand_price       -0.242752   0.068419 -3.548013 0.001128
demand_income       0.306288   0.039386  7.776593 0.000000
supply_(Intercept) 46.422943   8.329568  5.573272 0.000003
supply_price        0.257248   0.068419  3.759871 0.000622
supply_farmPrice    0.264213   0.045524  5.803815 0.000001
supply_trend        0.306288   0.039386  7.776593 0.000000
> print( round( coef( summary( fitw2sls4$eq[[ 1 ]] ) ), digits = 6 ) )
             Estimate Std. Error   t value Pr(>|t|)
(Intercept) 95.304293   6.305629 15.114162 0.000000
price       -0.242752   0.068419 -3.548013 0.001128
income       0.306288   0.039386  7.776593 0.000000
> 
> print( round( coef( summary( fitw2sls5 ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 95.304293   6.305629 15.114162 0.000000
demand_price       -0.242752   0.068419 -3.548013 0.001128
demand_income       0.306288   0.039386  7.776593 0.000000
supply_(Intercept) 46.422943   8.329568  5.573272 0.000003
supply_price        0.257248   0.068419  3.759871 0.000622
supply_farmPrice    0.264213   0.045524  5.803815 0.000001
supply_trend        0.306288   0.039386  7.776593 0.000000
> print( round( coef( summary( fitw2sls5 ), modified.regMat = TRUE ), digits = 6 ) )
    Estimate Std. Error   t value Pr(>|t|)
C1 95.304293   6.305629 15.114162 0.000000
C2 -0.242752   0.068419 -3.548013 0.001128
C3  0.306288   0.039386  7.776593 0.000000
C4 46.422943   8.329568  5.573272 0.000003
C5  0.257248   0.068419  3.759871 0.000622
C6  0.264213   0.045524  5.803815 0.000001
> print( round( coef( summary( fitw2sls5$eq[[ 2 ]] ) ), digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 46.422943   8.329568 5.573272 0.000003
price        0.257248   0.068419 3.759871 0.000622
farmPrice    0.264213   0.045524 5.803815 0.000001
trend        0.306288   0.039386 7.776593 0.000000
> 
> 
> ## *********** variance covariance matrix of the coefficients *******
> print( round( vcov( fitw2sls1e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          53.328728    -0.572408      0.041906
demand_price                -0.572408     0.007913     -0.002246
demand_income                0.041906    -0.002246      0.001873
supply_(Intercept)           0.000000     0.000000      0.000000
supply_price                 0.000000     0.000000      0.000000
supply_farmPrice             0.000000     0.000000      0.000000
supply_trend                 0.000000     0.000000      0.000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000     0.000000         0.000000
demand_price                 0.000000     0.000000         0.000000
demand_income                0.000000     0.000000         0.000000
supply_(Intercept)         115.402196    -0.876328        -0.259055
supply_price                -0.876328     0.007989         0.000749
supply_farmPrice            -0.259055     0.000749         0.001786
supply_trend                -0.236183     0.000463         0.001101
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.236183
supply_price           0.000463
supply_farmPrice       0.001101
supply_trend           0.007945
> print( round( vcov( fitw2sls1e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  115.402196 -0.876328 -0.259055 -0.236183
price         -0.876328  0.007989  0.000749  0.000463
farmPrice     -0.259055  0.000749  0.001786  0.001101
trend         -0.236183  0.000463  0.001101  0.007945
> 
> print( round( vcov( fitw2sls2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          64.144817    -0.679629      0.041312
demand_price                -0.679629     0.008954     -0.002214
demand_income                0.041312    -0.002214      0.001847
supply_(Intercept)          -1.228098     0.065809     -0.054894
supply_price                 0.002409    -0.000129      0.000108
supply_farmPrice             0.005727    -0.000307      0.000256
supply_trend                 0.041312    -0.002214      0.001847
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -1.228098     0.002409         0.005727
demand_price                 0.065809    -0.000129        -0.000307
demand_income               -0.054894     0.000108         0.000256
supply_(Intercept)         139.241633    -1.098376        -0.294954
supply_price                -1.098376     0.010116         0.000884
supply_farmPrice            -0.294954     0.000884         0.002109
supply_trend                -0.054894     0.000108         0.000256
                   supply_trend
demand_(Intercept)     0.041312
demand_price          -0.002214
demand_income          0.001847
supply_(Intercept)    -0.054894
supply_price           0.000108
supply_farmPrice       0.000256
supply_trend           0.001847
> print( round( vcov( fitw2sls2$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   64.144817 -0.679629  0.041312
price         -0.679629  0.008954 -0.002214
income         0.041312 -0.002214  0.001847
> 
> print( round( vcov( fitw2sls3e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          54.514208    -0.577209      0.034718
demand_price                -0.577209     0.007585     -0.001860
demand_income                0.034718    -0.001860      0.001552
supply_(Intercept)          -1.032075     0.055305     -0.046132
supply_price                 0.002024    -0.000108      0.000090
supply_farmPrice             0.004813    -0.000258      0.000215
supply_trend                 0.034718    -0.001860      0.001552
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -1.032075     0.002024         0.004813
demand_price                 0.055305    -0.000108        -0.000258
demand_income               -0.046132     0.000090         0.000215
supply_(Intercept)         111.459210    -0.878830        -0.236271
supply_price                -0.878830     0.008093         0.000708
supply_farmPrice            -0.236271     0.000708         0.001689
supply_trend                -0.046132     0.000090         0.000215
                   supply_trend
demand_(Intercept)     0.034718
demand_price          -0.001860
demand_income          0.001552
supply_(Intercept)    -0.046132
supply_price           0.000090
supply_farmPrice       0.000215
supply_trend           0.001552
> print( round( vcov( fitw2sls3e, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3         C4        C5        C6
C1 54.514208 -0.577209  0.034718  -1.032075  0.002024  0.004813
C2 -0.577209  0.007585 -0.001860   0.055305 -0.000108 -0.000258
C3  0.034718 -0.001860  0.001552  -0.046132  0.000090  0.000215
C4 -1.032075  0.055305 -0.046132 111.459210 -0.878830 -0.236271
C5  0.002024 -0.000108  0.000090  -0.878830  0.008093  0.000708
C6  0.004813 -0.000258  0.000215  -0.236271  0.000708  0.001689
> print( round( vcov( fitw2sls3e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  111.459210 -0.878830 -0.236271 -0.046132
price         -0.878830  0.008093  0.000708  0.000090
farmPrice     -0.236271  0.000708  0.001689  0.000215
trend         -0.046132  0.000090  0.000215  0.001552
> 
> print( round( vcov( fitw2sls4 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          39.760952    -0.358128     -0.038417
demand_price                -0.358128     0.004681     -0.001129
demand_income               -0.038417    -0.001129      0.001551
supply_(Intercept)          39.694908    -0.480685      0.085946
supply_price                -0.358128     0.004681     -0.001129
supply_farmPrice            -0.035932     0.000252      0.000110
supply_trend                -0.038417    -0.001129      0.001551
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          39.694908    -0.358128        -0.035932
demand_price                -0.480685     0.004681         0.000252
demand_income                0.085946    -0.001129         0.000110
supply_(Intercept)          69.381697    -0.480685        -0.226588
supply_price                -0.480685     0.004681         0.000252
supply_farmPrice            -0.226588     0.000252         0.002072
supply_trend                 0.085946    -0.001129         0.000110
                   supply_trend
demand_(Intercept)    -0.038417
demand_price          -0.001129
demand_income          0.001551
supply_(Intercept)     0.085946
supply_price          -0.001129
supply_farmPrice       0.000110
supply_trend           0.001551
> print( round( vcov( fitw2sls4$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   39.760952 -0.358128 -0.038417
price         -0.358128  0.004681 -0.001129
income        -0.038417 -0.001129  0.001551
> 
> print( round( vcov( fitw2sls5 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          39.760952    -0.358128     -0.038417
demand_price                -0.358128     0.004681     -0.001129
demand_income               -0.038417    -0.001129      0.001551
supply_(Intercept)          39.694908    -0.480685      0.085946
supply_price                -0.358128     0.004681     -0.001129
supply_farmPrice            -0.035932     0.000252      0.000110
supply_trend                -0.038417    -0.001129      0.001551
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          39.694908    -0.358128        -0.035932
demand_price                -0.480685     0.004681         0.000252
demand_income                0.085946    -0.001129         0.000110
supply_(Intercept)          69.381697    -0.480685        -0.226588
supply_price                -0.480685     0.004681         0.000252
supply_farmPrice            -0.226588     0.000252         0.002072
supply_trend                 0.085946    -0.001129         0.000110
                   supply_trend
demand_(Intercept)    -0.038417
demand_price          -0.001129
demand_income          0.001551
supply_(Intercept)     0.085946
supply_price          -0.001129
supply_farmPrice       0.000110
supply_trend           0.001551
> print( round( vcov( fitw2sls5, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3        C4        C5        C6
C1 39.760952 -0.358128 -0.038417 39.694908 -0.358128 -0.035932
C2 -0.358128  0.004681 -0.001129 -0.480685  0.004681  0.000252
C3 -0.038417 -0.001129  0.001551  0.085946 -0.001129  0.000110
C4 39.694908 -0.480685  0.085946 69.381697 -0.480685 -0.226588
C5 -0.358128  0.004681 -0.001129 -0.480685  0.004681  0.000252
C6 -0.035932  0.000252  0.000110 -0.226588  0.000252  0.002072
> print( round( vcov( fitw2sls5$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)   69.381697 -0.480685 -0.226588  0.085946
price         -0.480685  0.004681  0.000252 -0.001129
farmPrice     -0.226588  0.000252  0.002072  0.000110
trend          0.085946 -0.001129  0.000110  0.001551
> 
> print( round( vcov( fitw2slsd1 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)         124.178595    -1.517672      0.285189
demand_price                -1.517672     0.020980     -0.005954
demand_income                0.285189    -0.005954      0.003182
supply_(Intercept)           0.000000     0.000000      0.000000
supply_price                 0.000000     0.000000      0.000000
supply_farmPrice             0.000000     0.000000      0.000000
supply_trend                 0.000000     0.000000      0.000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000     0.000000         0.000000
demand_price                 0.000000     0.000000         0.000000
demand_income                0.000000     0.000000         0.000000
supply_(Intercept)         144.252745    -1.095410        -0.323818
supply_price                -1.095410     0.009987         0.000936
supply_farmPrice            -0.323818     0.000936         0.002233
supply_trend                -0.295229     0.000579         0.001377
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.295229
supply_price           0.000579
supply_farmPrice       0.001377
supply_trend           0.009931
> print( round( vcov( fitw2slsd1$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)  124.178595 -1.517672  0.285189
price         -1.517672  0.020980 -0.005954
income         0.285189 -0.005954  0.003182
> 
> print( round( vcov( fitw2slsd2e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          95.901717    -1.129212      0.176368
demand_price                -1.129212     0.014881     -0.003682
demand_income                0.176368    -0.003682      0.001968
supply_(Intercept)          -5.243009     0.109460     -0.058492
supply_price                 0.010284    -0.000215      0.000115
supply_farmPrice             0.024451    -0.000510      0.000273
supply_trend                 0.176368    -0.003682      0.001968
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -5.243009     0.010284         0.024451
demand_price                 0.109460    -0.000215        -0.000510
demand_income               -0.058492     0.000115         0.000273
supply_(Intercept)         114.255530    -0.898881        -0.243056
supply_price                -0.898881     0.008273         0.000727
supply_farmPrice            -0.243056     0.000727         0.001733
supply_trend                -0.058492     0.000115         0.000273
                   supply_trend
demand_(Intercept)     0.176368
demand_price          -0.003682
demand_income          0.001968
supply_(Intercept)    -0.058492
supply_price           0.000115
supply_farmPrice       0.000273
supply_trend           0.001968
> print( round( vcov( fitw2slsd2e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  114.255530 -0.898881 -0.243056 -0.058492
price         -0.898881  0.008273  0.000727  0.000115
farmPrice     -0.243056  0.000727  0.001733  0.000273
trend         -0.058492  0.000115  0.000273  0.001968
> 
> print( round( vcov( fitw2slsd3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)         113.090252    -1.334011      0.210445
demand_price                -1.334011     0.017622     -0.004394
demand_income                0.210445    -0.004394      0.002348
supply_(Intercept)          -6.256034     0.130609     -0.069794
supply_price                 0.012271    -0.000256      0.000137
supply_farmPrice             0.029175    -0.000609      0.000325
supply_trend                 0.210445    -0.004394      0.002348
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -6.256034     0.012271         0.029175
demand_price                 0.130609    -0.000256        -0.000609
demand_income               -0.069794     0.000137         0.000325
supply_(Intercept)         142.720671    -1.123408        -0.303360
supply_price                -1.123408     0.010341         0.000908
supply_farmPrice            -0.303360     0.000908         0.002165
supply_trend                -0.069794     0.000137         0.000325
                   supply_trend
demand_(Intercept)     0.210445
demand_price          -0.004394
demand_income          0.002348
supply_(Intercept)    -0.069794
supply_price           0.000137
supply_farmPrice       0.000325
supply_trend           0.002348
> print( round( vcov( fitw2slsd3, modified.regMat = TRUE ), digits = 6 ) )
           C1        C2        C3         C4        C5        C6
C1 113.090252 -1.334011  0.210445  -6.256034  0.012271  0.029175
C2  -1.334011  0.017622 -0.004394   0.130609 -0.000256 -0.000609
C3   0.210445 -0.004394  0.002348  -0.069794  0.000137  0.000325
C4  -6.256034  0.130609 -0.069794 142.720671 -1.123408 -0.303360
C5   0.012271 -0.000256  0.000137  -1.123408  0.010341  0.000908
C6   0.029175 -0.000609  0.000325  -0.303360  0.000908  0.002165
> print( round( vcov( fitw2slsd3$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)  113.090252 -1.334011  0.210445
price         -1.334011  0.017622 -0.004394
income         0.210445 -0.004394  0.002348
> 
> 
> ## *********** confidence intervals of coefficients *************
> print( confint( fitw2sls1e, useDfSys = TRUE ) )
                    2.5 %  97.5 %
demand_(Intercept) 79.776 109.491
demand_price       -0.425  -0.063
demand_income       0.226   0.402
supply_(Intercept) 27.677  71.388
supply_price        0.058   0.422
supply_farmPrice    0.170   0.342
supply_trend        0.072   0.434
> print( confint( fitw2sls1e$eq[[ 1 ]], level = 0.9, useDfSys = TRUE ) )
               5 %    95 %
(Intercept) 82.275 106.992
price       -0.394  -0.093
income       0.241   0.387
> 
> print( confint( fitw2sls2, level = 0.9 ) )
                      5 %    95 %
demand_(Intercept) 78.107 110.660
demand_price       -0.422  -0.038
demand_income       0.215   0.390
supply_(Intercept) 24.069  72.030
supply_price        0.039   0.447
supply_farmPrice    0.169   0.356
supply_trend        0.215   0.390
> print( confint( fitw2sls2$eq[[ 2 ]], level = 0.99 ) )
             0.5 % 99.5 %
(Intercept) 15.854 80.245
price       -0.031  0.517
farmPrice    0.137  0.388
trend        0.186  0.420
> 
> print( confint( fitw2sls3, level = 0.99 ) )
                    0.5 %  99.5 %
demand_(Intercept) 78.107 110.660
demand_price       -0.422  -0.038
demand_income       0.215   0.390
supply_(Intercept) 24.069  72.030
supply_price        0.039   0.447
supply_farmPrice    0.169   0.356
supply_trend        0.215   0.390
> print( confint( fitw2sls3$eq[[ 1 ]], level = 0.5 ) )
              25 %   75 %
(Intercept) 88.923 99.844
price       -0.295 -0.166
income       0.274  0.332
> 
> print( confint( fitw2sls4e, level = 0.5, useDfSys = TRUE ) )
                     25 %    75 %
demand_(Intercept) 83.658 107.036
demand_price       -0.369  -0.117
demand_income       0.233   0.379
supply_(Intercept) 31.138  61.736
supply_price        0.131   0.383
supply_farmPrice    0.181   0.347
supply_trend        0.233   0.379
> print( confint( fitw2sls4e$eq[[ 2 ]], level = 0.25, useDfSys = TRUE ) )
            37.5 % 62.5 %
(Intercept) 44.016 48.857
price        0.237  0.277
farmPrice    0.251  0.277
trend        0.294  0.317
> 
> print( confint( fitw2sls5, level = 0.25 ) )
                   37.5 %  62.5 %
demand_(Intercept) 82.503 108.105
demand_price       -0.382  -0.104
demand_income       0.226   0.386
supply_(Intercept) 29.513  63.333
supply_price        0.118   0.396
supply_farmPrice    0.172   0.357
supply_trend        0.226   0.386
> print( confint( fitw2sls5$eq[[ 1 ]], level = 0.975 ) )
             1.3 %  98.8 %
(Intercept) 80.537 110.072
price       -0.403  -0.083
income       0.214   0.399
> 
> print( confint( fitw2slsd1, level = 0.975 ) )
                    1.3 %  98.8 %
demand_(Intercept) 83.279 130.300
demand_price       -0.717  -0.106
demand_income       0.243   0.481
supply_(Intercept) 24.071  74.994
supply_price        0.028   0.452
supply_farmPrice    0.155   0.356
supply_trend        0.042   0.464
> print( confint( fitw2slsd1$eq[[ 2 ]], level = 0.999 ) )
             0.1 %  100 %
(Intercept)  1.310 97.755
price       -0.161  0.641
farmPrice    0.066  0.445
trend       -0.147  0.653
> 
> print( confint( fitw2slsd2e, level = 0.999, useDfSys = TRUE ) )
                    0.1 %   100 %
demand_(Intercept) 84.562 124.365
demand_price       -0.611  -0.115
demand_income       0.246   0.426
supply_(Intercept) 25.348  68.793
supply_price        0.060   0.430
supply_farmPrice    0.182   0.352
supply_trend        0.246   0.426
> print( confint( fitw2slsd2e$eq[[ 1 ]], level = 0.01, useDfSys = TRUE ) )
             49.5 %  50.5 %
(Intercept) 104.340 104.587
price        -0.365  -0.362
income        0.335   0.336
> 
> print( confint( fitw2slsd3e, level = 0.01, useDfSys = TRUE ) )
                   49.5 %  50.5 %
demand_(Intercept) 84.562 124.365
demand_price       -0.611  -0.115
demand_income       0.246   0.426
supply_(Intercept) 25.348  68.793
supply_price        0.060   0.430
supply_farmPrice    0.182   0.352
supply_trend        0.246   0.426
> print( confint( fitw2slsd3e$eq[[ 2 ]], useDfSys = TRUE ) )
             2.5 % 97.5 %
(Intercept) 25.348 68.793
price        0.060  0.430
farmPrice    0.182  0.352
trend        0.246  0.426
> 
> 
> ## *********** fitted values *************
> print( fitted( fitw2sls1e ) )
      demand    supply
1   97.64186  98.91985
2   99.88472 100.40008
3   99.80404 100.45398
4  100.01418 100.70842
5  102.10090 102.64584
6  101.96632 102.58350
7  102.42197 102.55837
8  102.96591 104.77240
9  101.47486 102.74745
10 100.32800  99.67725
11  95.54263  95.36613
12  94.71564  93.82181
13  96.13309  95.64862
14  99.02829  97.58861
15 103.83900 102.31054
16 103.65546 104.05353
17 103.83496 102.84266
18 102.08027 102.70033
19 103.63146 102.55617
20 106.90043 105.60846
> print( fitted( fitw2sls1e$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.64186  99.88472  99.80404 100.01418 102.10090 101.96632 102.42197 102.96591 
        9        10        11        12        13        14        15        16 
101.47486 100.32800  95.54263  94.71564  96.13309  99.02829 103.83900 103.65546 
       17        18        19        20 
103.83496 102.08027 103.63146 106.90043 
> 
> print( fitted( fitw2sls2 ) )
      demand    supply
1   97.75923  98.45630
2   99.94089 100.00549
3   99.85915 100.10687
4  100.06688 100.40740
5  102.04854 102.46362
6  101.92563 102.43742
7  102.37268 102.44888
8  102.91473 104.75260
9  101.43743 102.74574
10 100.30671  99.65423
11  95.70050  95.26283
12  94.92999  93.69927
13  96.31641  95.60382
14  99.08889  97.65425
15 103.71113 102.56003
16 103.54988 104.38128
17 103.66644 103.22357
18 102.05709 103.05759
19 103.56135 102.94629
20 106.75046 106.09652
> print( fitted( fitw2sls2$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.45630 100.00549 100.10687 100.40740 102.46362 102.43742 102.44888 104.75260 
        9        10        11        12        13        14        15        16 
102.74574  99.65423  95.26283  93.69927  95.60382  97.65425 102.56003 104.38128 
       17        18        19        20 
103.22357 103.05759 102.94629 106.09652 
> 
> print( fitted( fitw2sls3 ) )
      demand    supply
1   97.75923  98.45630
2   99.94089 100.00549
3   99.85915 100.10687
4  100.06688 100.40740
5  102.04854 102.46362
6  101.92563 102.43742
7  102.37268 102.44888
8  102.91473 104.75260
9  101.43743 102.74574
10 100.30671  99.65423
11  95.70050  95.26283
12  94.92999  93.69927
13  96.31641  95.60382
14  99.08889  97.65425
15 103.71113 102.56003
16 103.54988 104.38128
17 103.66644 103.22357
18 102.05709 103.05759
19 103.56135 102.94629
20 106.75046 106.09652
> print( fitted( fitw2sls3$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.75923  99.94089  99.85915 100.06688 102.04854 101.92563 102.37268 102.91473 
        9        10        11        12        13        14        15        16 
101.43743 100.30671  95.70050  94.92999  96.31641  99.08889 103.71113 103.54988 
       17        18        19        20 
103.66644 102.05709 103.56135 106.75046 
> 
> print( fitted( fitw2sls4e ) )
      demand    supply
1   97.72419  98.43362
2   99.88744 100.04374
3   99.81341 100.13640
4  100.01222 100.45361
5  102.08101 102.44116
6  101.94187 102.43448
7  102.37688 102.46767
8  102.88638 104.83391
9  101.47970 102.71004
10 100.39123  99.53416
11  95.71906  95.14022
12  94.88186  93.64076
13  96.24007  95.61056
14  99.08350  97.62217
15 103.79019 102.51348
16 103.59298 104.38960
17 103.83383 103.07396
18 102.02771 103.13078
19 103.52922 103.04226
20 106.67123 106.31142
> print( fitted( fitw2sls4e$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.43362 100.04374 100.13640 100.45361 102.44116 102.43448 102.46767 104.83391 
        9        10        11        12        13        14        15        16 
102.71004  99.53416  95.14022  93.64076  95.61056  97.62217 102.51348 104.38960 
       17        18        19        20 
103.07396 103.13078 103.04226 106.31142 
> 
> print( fitted( fitw2sls5 ) )
      demand    supply
1   97.72019  98.42995
2   99.88764 100.04068
3   99.81322 100.13371
4  100.01266 100.45130
5  102.08183 102.43970
6  101.94302 102.43333
7  102.37917 102.46683
8  102.89064 104.83386
9  101.47919 102.70998
10 100.38745  99.53383
11  95.70989  95.13925
12  94.87364  93.63972
13  96.23507  95.61022
14  99.08070  97.62265
15 103.79219 102.51538
16 103.59591 104.39219
17 103.83283 103.07677
18 102.03060 103.13369
19 103.53466 103.04545
20 106.68349 106.31553
> print( fitted( fitw2sls5$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.72019  99.88764  99.81322 100.01266 102.08183 101.94302 102.37917 102.89064 
        9        10        11        12        13        14        15        16 
101.47919 100.38745  95.70989  94.87364  96.23507  99.08070 103.79219 103.59591 
       17        18        19        20 
103.83283 102.03060 103.53466 106.68349 
> 
> print( fitted( fitw2slsd1 ) )
      demand    supply
1   97.10746  98.91985
2   99.17449 100.40008
3   99.19019 100.45398
4   99.29189 100.70842
5  102.54804 102.64584
6  102.20234 102.58350
7  102.51620 102.55837
8  102.65825 104.77240
9  102.03069 102.74745
10 101.39347  99.67725
11  95.63793  95.36613
12  93.93626  93.82181
13  95.03077  95.64862
14  98.90981  97.58861
15 104.92781 102.31054
16 104.27973 104.05353
17 106.05294 102.84266
18 101.73600 102.70033
19 103.29306 102.55617
20 106.04668 105.60846
> print( fitted( fitw2slsd1$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.91985 100.40008 100.45398 100.70842 102.64584 102.58350 102.55837 104.77240 
        9        10        11        12        13        14        15        16 
102.74745  99.67725  95.36613  93.82181  95.64862  97.58861 102.31054 104.05353 
       17        18        19        20 
102.84266 102.70033 102.55617 105.60846 
> 
> print( fitted( fitw2slsd2e ) )
      demand    supply
1   97.38516  98.15038
2   99.37890  99.74508
3   99.37771  99.87779
4   99.49249 100.20874
5  102.39129 102.34337
6  102.09807 102.34102
7  102.42006 102.37663
8  102.62226 104.73954
9  101.88147 102.74461
10 101.19068  99.63903
11  95.88334  95.19466
12  94.41248  93.61840
13  95.50662  95.57426
14  99.02841  97.69756
15 104.54553 102.72469
16 104.00733 104.59758
17 105.42593 103.47495
18 101.75195 103.29336
19 103.23067 103.20374
20 105.93366 106.41861
> print( fitted( fitw2slsd2e$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.38516  99.37890  99.37771  99.49249 102.39129 102.09807 102.42006 102.62226 
        9        10        11        12        13        14        15        16 
101.88147 101.19068  95.88334  94.41248  95.50662  99.02841 104.54553 104.00733 
       17        18        19        20 
105.42593 101.75195 103.23067 105.93366 
> 
> print( fitted( fitw2slsd3e ) )
      demand    supply
1   97.38516  98.15038
2   99.37890  99.74508
3   99.37771  99.87779
4   99.49249 100.20874
5  102.39129 102.34337
6  102.09807 102.34102
7  102.42006 102.37663
8  102.62226 104.73954
9  101.88147 102.74461
10 101.19068  99.63903
11  95.88334  95.19466
12  94.41248  93.61840
13  95.50662  95.57426
14  99.02841  97.69756
15 104.54553 102.72469
16 104.00733 104.59758
17 105.42593 103.47495
18 101.75195 103.29336
19 103.23067 103.20374
20 105.93366 106.41861
> print( fitted( fitw2slsd3e$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.15038  99.74508  99.87779 100.20874 102.34337 102.34102 102.37663 104.73954 
        9        10        11        12        13        14        15        16 
102.74461  99.63903  95.19466  93.61840  95.57426  97.69756 102.72469 104.59758 
       17        18        19        20 
103.47495 103.29336 103.20374 106.41861 
> 
> 
> ## *********** predicted values *************
> predictData <- Kmenta
> predictData$consump <- NULL
> predictData$price <- Kmenta$price * 0.9
> predictData$income <- Kmenta$income * 1.1
> 
> print( predict( fitw2sls1e, se.fit = TRUE, interval = "prediction",
+    useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     97.64186     0.6093405   93.45367  101.83006    98.91985     0.9653504
2     99.88472     0.5528811   95.72908  104.04037   100.40008     0.9520892
3     99.80404     0.5203573   95.66582  103.94226   100.45398     0.8606321
4    100.01418     0.5577248   95.85586  104.17250   100.70842     0.8389051
5    102.10090     0.4761161   97.98479  106.21701   102.64584     0.8179349
6    101.96632     0.4368025   97.86829  106.06435   102.58350     0.7225919
7    102.42197     0.4543922   98.31604  106.52791   102.55837     0.6580391
8    102.96591     0.5666288   98.80261  107.12920   104.77240     0.8894629
9    101.47486     0.5019728   97.34605  105.60367   102.74745     0.7227114
10   100.32800     0.7580124   96.04053  104.61547    99.67725     0.9146486
11    95.54263     0.8882073   91.15291   99.93234    95.36613     1.0980121
12    94.71564     0.9277778   90.29218   99.13911    93.82181     1.2770743
13    96.13309     0.8435633   91.77998  100.48620    95.64862     1.1373564
14    99.02829     0.4771729   94.91167  103.14491    97.58861     0.8203571
15   103.83900     0.7312962   99.57078  108.10723   102.31054     0.8037351
16   103.65546     0.5867315   99.48065  107.83027   104.05353     0.8370449
17   103.83496     1.2427497   99.10243  108.56749   102.84266     1.4892740
18   102.08027     0.5057453   97.94956  106.21099   102.70033     0.8839886
19   103.63146     0.6407872   99.42389  107.83904   102.55617     1.0102546
20   106.90043     1.2036708  102.20989  111.59096   105.60846     1.5496619
   supply.lwr supply.upr
1    93.54800  104.29169
2    95.03804  105.76212
3    95.15632  105.75164
4    95.42520  105.99164
5    97.37625  107.91543
6    97.37192  107.79509
7    97.38230  107.73444
8    99.45506  110.08974
9    97.53580  107.95910
10   94.34226  105.01225
11   89.88984  100.84241
12   88.18709   99.45654
13   90.13919  101.15805
14   92.31746  102.85976
15   97.05000  107.57108
16   98.77153  109.33553
17   96.99630  108.68902
18   97.38677  108.01389
19   97.15025  107.96208
20   99.69749  111.51943
> print( predict( fitw2sls1e$eq[[ 1 ]], se.fit = TRUE, interval = "prediction",
+    useDfSys = TRUE ) )
         fit    se.fit       lwr       upr
1   97.64186 0.6093405  93.45367 101.83006
2   99.88472 0.5528811  95.72908 104.04037
3   99.80404 0.5203573  95.66582 103.94226
4  100.01418 0.5577248  95.85586 104.17250
5  102.10090 0.4761161  97.98479 106.21701
6  101.96632 0.4368025  97.86829 106.06435
7  102.42197 0.4543922  98.31604 106.52791
8  102.96591 0.5666288  98.80261 107.12920
9  101.47486 0.5019728  97.34605 105.60367
10 100.32800 0.7580124  96.04053 104.61547
11  95.54263 0.8882073  91.15291  99.93234
12  94.71564 0.9277778  90.29218  99.13911
13  96.13309 0.8435633  91.77998 100.48620
14  99.02829 0.4771729  94.91167 103.14491
15 103.83900 0.7312962  99.57078 108.10723
16 103.65546 0.5867315  99.48065 107.83027
17 103.83496 1.2427497  99.10243 108.56749
18 102.08027 0.5057453  97.94956 106.21099
19 103.63146 0.6407872  99.42389 107.83904
20 106.90043 1.2036708 102.20989 111.59096
> 
> print( predict( fitw2sls2, se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1    102.71480       2.218302   99.13361   106.2960    96.01860       2.752660
2    105.29603       2.217935  101.71778   108.8743    97.47203       2.639301
3    105.16796       2.230423  101.49045   108.8455    97.59356       2.652015
4    105.44576       2.219968  101.85121   109.0403    97.86806       2.624847
5    107.32615       2.509605  101.78708   112.8652   100.08235       2.833711
6    107.25793       2.457048  102.03328   112.4826   100.02079       2.768585
7    107.82379       2.444971  102.67312   112.9745    99.99313       2.707270
8    108.59023       2.403359  103.70007   113.4804   102.20702       2.649961
9    106.58235       2.519010  100.98821   112.1765   100.40225       2.872508
10   105.09838       2.650213   98.76690   111.4299    97.43753       3.100743
11   100.11702       2.414575   95.15574   105.0783    93.00101       3.175994
12    99.53258       2.214982   95.97812   103.0870    91.29856       3.145055
13   101.24668       2.123875   98.50643   103.9869    93.10332       2.953152
14   104.10529       2.313869   99.81105   108.3995    95.25463       2.913843
15   109.02234       2.732770  102.25112   115.7936   100.24879       2.918985
16   108.99834       2.610158  102.88640   115.1103   101.98907       2.796799
17   108.57636       3.082141  100.07995   117.0728   101.12180       3.374494
18   107.61244       2.353919  103.04470   112.1802   100.53016       2.652323
19   109.34782       2.437431  104.24369   114.4520   100.37626       2.638876
20   113.21125       2.659559  106.82916   119.5933   103.33888       2.583134
   supply.lwr supply.upr
1    91.72133  100.31587
2    94.22521  100.71885
3    94.21509  100.97202
4    94.77689  100.95923
5    95.14911  105.01559
6    95.59287  104.44871
7    96.08758  103.89869
8    98.84952  105.56452
9    95.18620  105.61829
10   90.73808  104.13697
11   85.85913  100.14288
12   84.33646   98.26066
13   87.33286   98.87377
14   89.74934  100.75991
15   94.70830  105.78928
16   97.33695  106.64120
17   92.88380  109.35980
18   97.14857  103.91176
19   97.13392  103.61860
20  100.74297  105.93479
> print( predict( fitw2sls2$eq[[ 2 ]], se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
         fit  se.pred       lwr       upr
1   96.01860 2.752660  91.72133 100.31587
2   97.47203 2.639301  94.22521 100.71885
3   97.59356 2.652015  94.21509 100.97202
4   97.86806 2.624847  94.77689 100.95923
5  100.08235 2.833711  95.14911 105.01559
6  100.02079 2.768585  95.59287 104.44871
7   99.99313 2.707270  96.08758 103.89869
8  102.20702 2.649961  98.84952 105.56452
9  100.40225 2.872508  95.18620 105.61829
10  97.43753 3.100743  90.73808 104.13697
11  93.00101 3.175994  85.85913 100.14288
12  91.29856 3.145055  84.33646  98.26066
13  93.10332 2.953152  87.33286  98.87377
14  95.25463 2.913843  89.74934 100.75991
15 100.24879 2.918985  94.70830 105.78928
16 101.98907 2.796799  97.33695 106.64120
17 101.12180 3.374494  92.88380 109.35980
18 100.53016 2.652323  97.14857 103.91176
19 100.37626 2.638876  97.13392 103.61860
20 103.33888 2.583134 100.74297 105.93479
> 
> print( predict( fitw2sls3, se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1     97.75923       2.081852   92.87717   102.6413    98.45630       2.573822
2     99.94089       2.071254   95.08368   104.7981   100.00549       2.605421
3     99.85915       2.061155   95.02563   104.6927   100.10687       2.587338
4    100.06688       2.073122   95.20529   104.9285   100.40740       2.597372
5    102.04854       2.048448   97.24481   106.8523   102.46362       2.625323
6    101.92563       2.038732   97.14469   106.7066   102.43742       2.597136
7    102.37268       2.042738   97.58234   107.1630   102.44888       2.581263
8    102.91473       2.076160   98.04602   107.7834   104.75260       2.675075
9    101.43743       2.056963   96.61373   106.2611   102.74574       2.610744
10   100.30671       2.150239   95.26428   105.3491    99.65423       2.685751
11    95.70050       2.191150   90.56213   100.8389    95.26283       2.765549
12    94.92999       2.195049   89.78248   100.0775    93.69927       2.858995
13    96.31641       2.163123   91.24376   101.3891    95.60382       2.790809
14    99.08889       2.047993   94.28623   103.8915    97.65425       2.644435
15   103.71113       2.126704   98.72389   108.6984   102.56003       2.601329
16   103.54988       2.076097   98.68131   108.4184   104.38128       2.585873
17   103.66644       2.387742   98.06705   109.2658   103.22357       2.913501
18   102.05709       2.058773   97.22916   106.8850   103.05759       2.592755
19   103.56135       2.100210   98.63624   108.4865   102.94629       2.635290
20   106.75046       2.367595  101.19832   112.3026   106.09652       2.900552
   supply.lwr supply.upr
1    92.42054   104.4921
2    93.89563   106.1153
3    94.03941   106.1743
4    94.31641   106.4984
5    96.30709   108.6202
6    96.34699   108.5279
7    96.39568   108.5021
8    98.47940   111.0258
9    96.62340   108.8681
10   93.35599   105.9525
11   88.77746   101.7482
12   86.99477   100.4038
13   89.05922   102.1484
14   91.45290   103.8556
15   96.45977   108.6603
16   98.31727   110.4453
17   96.39125   110.0559
18   96.97744   109.1377
19   96.76638   109.1262
20   99.29456   112.8985
> print( predict( fitw2sls3$eq[[ 1 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
         fit  se.pred       lwr      upr
1   97.75923 2.081852  92.87717 102.6413
2   99.94089 2.071254  95.08368 104.7981
3   99.85915 2.061155  95.02563 104.6927
4  100.06688 2.073122  95.20529 104.9285
5  102.04854 2.048448  97.24481 106.8523
6  101.92563 2.038732  97.14469 106.7066
7  102.37268 2.042738  97.58234 107.1630
8  102.91473 2.076160  98.04602 107.7834
9  101.43743 2.056963  96.61373 106.2611
10 100.30671 2.150239  95.26428 105.3491
11  95.70050 2.191150  90.56213 100.8389
12  94.92999 2.195049  89.78248 100.0775
13  96.31641 2.163123  91.24376 101.3891
14  99.08889 2.047993  94.28623 103.8915
15 103.71113 2.126704  98.72389 108.6984
16 103.54988 2.076097  98.68131 108.4184
17 103.66644 2.387742  98.06705 109.2658
18 102.05709 2.058773  97.22916 106.8850
19 103.56135 2.100210  98.63624 108.4865
20 106.75046 2.367595 101.19832 112.3026
> 
> print( predict( fitw2sls4e, se.fit = TRUE, interval = "confidence",
+    level = 0.25, useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     97.72419     0.5519609   97.54692   97.90146    98.43362     0.6112951
2     99.88744     0.4839980   99.73200  100.04288   100.04374     0.7003029
3     99.81341     0.4651954   99.66401   99.96281   100.13640     0.6522665
4    100.01222     0.4878400   99.85554  100.16889   100.45361     0.6639608
5    102.08101     0.4427325  101.93883  102.22320   102.44116     0.7689305
6    101.94187     0.4253506  101.80527  102.07848   102.43448     0.6946692
7    102.37688     0.4474217  102.23319  102.52058   102.46767     0.6391315
8    102.88638     0.5469673  102.71072  103.06204   104.83391     0.8214025
9    101.47970     0.4576665  101.33272  101.62669   102.71004     0.7160765
10   100.39123     0.6484051  100.18299  100.59947    99.53416     0.7427691
11    95.71906     0.8472397   95.44696   95.99116    95.14022     0.9439958
12    94.88186     0.8232148   94.61747   95.14624    93.64076     1.2536208
13    96.24007     0.6954345   96.01673   96.46342    95.61056     1.1540947
14    99.08350     0.4665671   98.93366   99.23334    97.62217     0.8141101
15   103.79019     0.5902322  103.60063  103.97975   102.51348     0.6754265
16   103.59298     0.5204769  103.42583  103.76014   104.38960     0.6589402
17   103.83383     0.9188327  103.53874  104.12893   103.07396     1.1960802
18   102.02771     0.4873433  101.87120  102.18423   103.13078     0.5872931
19   103.52922     0.6151476  103.33166  103.72678   103.04226     0.6640802
20   106.67123     1.1255545  106.30975  107.03272   106.31142     0.9091857
   supply.lwr supply.upr
1    98.23730   98.62994
2    99.81883  100.26864
3    99.92692  100.34589
4   100.24037  100.66684
5   102.19421  102.68811
6   102.21138  102.65758
7   102.26240  102.67293
8   104.57011  105.09771
9   102.48007  102.94001
10   99.29561   99.77271
11   94.83704   95.44339
12   93.23815   94.04337
13   95.23991   95.98121
14   97.36071   97.88363
15  102.29656  102.73040
16  104.17798  104.60123
17  102.68983  103.45810
18  102.94217  103.31940
19  102.82898  103.25553
20  106.01943  106.60342
> print( predict( fitw2sls4e$eq[[ 2 ]], se.fit = TRUE, interval = "confidence",
+    level = 0.25, useDfSys = TRUE ) )
         fit    se.fit       lwr       upr
1   98.43362 0.6112951  98.23730  98.62994
2  100.04374 0.7003029  99.81883 100.26864
3  100.13640 0.6522665  99.92692 100.34589
4  100.45361 0.6639608 100.24037 100.66684
5  102.44116 0.7689305 102.19421 102.68811
6  102.43448 0.6946692 102.21138 102.65758
7  102.46767 0.6391315 102.26240 102.67293
8  104.83391 0.8214025 104.57011 105.09771
9  102.71004 0.7160765 102.48007 102.94001
10  99.53416 0.7427691  99.29561  99.77271
11  95.14022 0.9439958  94.83704  95.44339
12  93.64076 1.2536208  93.23815  94.04337
13  95.61056 1.1540947  95.23991  95.98121
14  97.62217 0.8141101  97.36071  97.88363
15 102.51348 0.6754265 102.29656 102.73040
16 104.38960 0.6589402 104.17798 104.60123
17 103.07396 1.1960802 102.68983 103.45810
18 103.13078 0.5872931 102.94217 103.31940
19 103.04226 0.6640802 102.82898 103.25553
20 106.31142 0.9091857 106.01943 106.60342
> 
> print( predict( fitw2sls5, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1     102.8325     0.7808802       2.118506  101.38861   104.2764    95.84916
2     105.4080     0.8124397       2.130341  103.95607   106.8600    97.35852
3     105.2859     0.8235607       2.134607  103.83106   106.7408    97.47287
4     105.5573     0.8200754       2.133265  104.10336   107.0113    97.76291
5     107.5176     1.1863477       2.299068  105.95062   109.0845    99.91865
6     107.4355     1.1326073       2.271804  105.88715   108.9839    99.87485
7     107.9935     1.1409832       2.275991  106.44223   109.5447    99.86693
8     108.7356     1.1434696       2.277239  107.18348   110.2877   102.13885
9     106.7792     1.1792351       2.295406  105.21471   108.3436   100.22893
10    105.3249     1.3065191       2.363321  103.71418   106.9357    97.18701
11    100.2698     1.1080147       2.259644   98.72968   101.8099    92.74466
12     99.6274     0.8405900       2.141235   98.16802   101.0868    91.09809
13    101.3244     0.6380626       2.070125   99.91346   102.7353    92.96293
14    104.2530     0.9141024       2.171147  102.77322   105.7328    95.08217
15    109.2591     1.4401511       2.439740  107.59621   110.9219   100.06846
16    109.2049     1.3328856       2.377999  107.58416   110.8257   101.85956
17    108.8852     1.7416159       2.628977  107.09339   110.6770   100.85163
18    107.7533     1.0493304       2.231454  106.23237   109.2741   100.45790
19    109.4928     1.2159698       2.314493  107.91536   111.0703   100.32456
20    113.3314     1.6689200       2.581393  111.57202   115.0908   103.39603
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      0.8253057       2.635729   94.05275   97.64558
2      0.6964971       2.598277   95.58763   99.12941
3      0.7120472       2.602489   95.69911   99.24664
4      0.6744644       2.592458   95.99598   99.52984
5      1.0868788       2.728964   98.05868  101.77861
6      0.9792680       2.687918   98.04286  101.70683
7      0.8735702       2.651238   98.05994  101.67392
8      0.8706456       2.650276  100.33252  103.94519
9      1.1431508       2.751859   98.35336  102.10450
10     1.3383774       2.838519   95.25238   99.12164
11     1.4826187       2.909312   90.76178   94.72754
12     1.6447161       2.995167   89.05669   93.13949
13     1.4399769       2.887814   90.99470   94.93116
14     1.2466924       2.796458   93.17621   96.98814
15     1.2221732       2.785614   98.16989  101.96704
16     1.1037139       2.735712   99.99500  103.72412
17     1.8078239       3.087744   98.74713  102.95612
18     0.8613130       2.647224   98.65365  102.26215
19     0.8610717       2.647146   98.52037  102.12876
20     0.6661469       2.590307  101.63057  105.16149
> print( predict( fitw2sls5$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
        fit    se.fit  se.pred       lwr      upr
1  102.8325 0.7808802 2.118506 101.38861 104.2764
2  105.4080 0.8124397 2.130341 103.95607 106.8600
3  105.2859 0.8235607 2.134607 103.83106 106.7408
4  105.5573 0.8200754 2.133265 104.10336 107.0113
5  107.5176 1.1863477 2.299068 105.95062 109.0845
6  107.4355 1.1326073 2.271804 105.88715 108.9839
7  107.9935 1.1409832 2.275991 106.44223 109.5447
8  108.7356 1.1434696 2.277239 107.18348 110.2877
9  106.7792 1.1792351 2.295406 105.21471 108.3436
10 105.3249 1.3065191 2.363321 103.71418 106.9357
11 100.2698 1.1080147 2.259644  98.72968 101.8099
12  99.6274 0.8405900 2.141235  98.16802 101.0868
13 101.3244 0.6380626 2.070125  99.91346 102.7353
14 104.2530 0.9141024 2.171147 102.77322 105.7328
15 109.2591 1.4401511 2.439740 107.59621 110.9219
16 109.2049 1.3328856 2.377999 107.58416 110.8257
17 108.8852 1.7416159 2.628977 107.09339 110.6770
18 107.7533 1.0493304 2.231454 106.23237 109.2741
19 109.4928 1.2159698 2.314493 107.91536 111.0703
20 113.3314 1.6689200 2.581393 111.57202 115.0908
> 
> print( predict( fitw2slsd1, se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99 ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1     97.10746     0.7508704       2.128674   94.93126   99.28365    98.91985
2     99.17449     0.7570668       2.130867   96.98034  101.36865   100.40008
3     99.19019     0.6923617       2.108746   97.18357  101.19682   100.45398
4     99.29189     0.7659186       2.134028   97.07209  101.51170   100.70842
5    102.54804     0.5954544       2.078945  100.82227  104.27380   102.64584
6    102.20234     0.5028654       2.054341  100.74492  103.65976   102.58350
7    102.51620     0.5028407       2.054335  101.05885  103.97355   102.55837
8    102.65825     0.6526104       2.096031  100.76684  104.54967   104.77240
9    102.03069     0.6551457       2.096822  100.13193  103.92945   102.74745
10   101.39347     1.0738008       2.262851   98.28135  104.50559    99.67725
11    95.63793     0.9777828       2.218897   92.80409   98.47177    95.36613
12    93.93626     1.1335581       2.291811   90.65094   97.22157    93.82181
13    95.03077     1.1622346       2.306130   91.66234   98.39919    95.64862
14    98.90981     0.5296748       2.061068   97.37469  100.44493    97.58861
15   104.92781     1.0608295       2.256724  101.85328  108.00234   102.31054
16   104.27973     0.7571632       2.130901  102.08529  106.47416   104.05353
17   106.05294     1.9634801       2.796909  100.36232  111.74356   102.84266
18   101.73600     0.5972787       2.079468  100.00495  103.46705   102.70033
19   103.29306     0.7362296       2.123553  101.15930  105.42682   102.55617
20   106.04668     1.4296874       2.451826  101.90311  110.19024   105.60846
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      1.0792946       2.684112   95.76747  102.07223
2      1.0644681       2.678184   97.29100  103.50916
3      0.9622159       2.639211   97.64356  103.26440
4      0.9379245       2.630452   97.96895  103.44789
5      0.9144790       2.622184   99.97485  105.31684
6      0.8078823       2.586939  100.22385  104.94315
7      0.7357100       2.565316  100.40953  104.70722
8      0.9944498       2.651133  101.86783  107.67697
9      0.8080159       2.586980  100.38741  105.10749
10     1.0226082       2.661824   96.69044  102.66407
11     1.2276149       2.747110   91.78053   98.95172
12     1.4278125       2.842222   89.65148   97.99214
13     1.2716031       2.767048   91.93455   99.36270
14     0.9171871       2.623130   94.90971  100.26751
15     0.8986032       2.616690   99.68591  104.93516
16     0.9358447       2.629712  101.32013  106.78693
17     1.6650589       2.968501   97.97939  107.70593
18     0.9883293       2.648844   99.81363  105.58702
19     1.1294989       2.704690   99.25715  105.85519
20     1.7325747       3.006891  100.54799  110.66893
> print( predict( fitw2slsd1$eq[[ 2 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99 ) )
         fit    se.fit  se.pred       lwr       upr
1   98.91985 1.0792946 2.684112  95.76747 102.07223
2  100.40008 1.0644681 2.678184  97.29100 103.50916
3  100.45398 0.9622159 2.639211  97.64356 103.26440
4  100.70842 0.9379245 2.630452  97.96895 103.44789
5  102.64584 0.9144790 2.622184  99.97485 105.31684
6  102.58350 0.8078823 2.586939 100.22385 104.94315
7  102.55837 0.7357100 2.565316 100.40953 104.70722
8  104.77240 0.9944498 2.651133 101.86783 107.67697
9  102.74745 0.8080159 2.586980 100.38741 105.10749
10  99.67725 1.0226082 2.661824  96.69044 102.66407
11  95.36613 1.2276149 2.747110  91.78053  98.95172
12  93.82181 1.4278125 2.842222  89.65148  97.99214
13  95.64862 1.2716031 2.767048  91.93455  99.36270
14  97.58861 0.9171871 2.623130  94.90971 100.26751
15 102.31054 0.8986032 2.616690  99.68591 104.93516
16 104.05353 0.9358447 2.629712 101.32013 106.78693
17 102.84266 1.6650589 2.968501  97.97939 107.70593
18 102.70033 0.9883293 2.648844  99.81363 105.58702
19 102.55617 1.1294989 2.704690  99.25715 105.85519
20 105.60846 1.7325747 3.006891 100.54799 110.66893
> 
> print( predict( fitw2slsd2e, se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData, useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     103.9617     1.2138019  100.07622   107.8472    95.69343     1.0996585
2     106.4410     1.1691397  102.59485   110.2871    97.19161     0.8354832
3     106.3795     1.2163708  102.49168   110.2672    97.34463     0.8637109
4     106.5835     1.1692423  102.73727   110.4297    97.64934     0.7891832
5     109.2998     1.8974159  104.69787   113.9018    99.94328     1.2421671
6     109.0830     1.7733863  104.62466   113.5413    99.90530     1.1145041
7     109.5540     1.7180534  105.15812   113.9500    99.90147     0.9826018
8     110.0449     1.5523924  105.82886   114.2609   102.17384     0.8434380
9     108.6261     1.9390467  103.97481   113.2775   100.38260     1.3099572
10    107.4874     2.2293853  102.47788   112.4969    97.40482     1.6825523
11    101.7842     1.6552923   97.45764   106.1107    92.91497     1.7943959
12    100.5812     1.1250247   96.77292   104.3896    91.19872     1.7495811
13    102.0830     0.8785551   98.46480   105.7012    93.05400     1.4494778
14    105.6555     1.4800459  101.51452   109.7965    95.27898     1.3826203
15    111.4602     2.3307936  106.32045   116.6000   100.39518     1.3946195
16    111.1102     2.0643325  106.30714   115.9132   102.18647     1.1752993
17    111.8027     3.0010945  105.74993   117.8555   101.35657     2.0744096
18    109.0333     1.4754411  104.89704   113.1696   100.74597     0.8607149
19    110.7872     1.5890063  106.53233   115.0421   100.61341     0.8286981
20    114.3211     1.7561251  109.88238   118.7598   103.63919     0.6804887
   supply.lwr supply.upr
1    91.05017  100.33669
2    92.70851  101.67471
3    92.84626  101.84299
4    93.19029  102.10839
5    95.19838  104.68818
6    95.25193  104.55866
7    95.33388  104.46907
8    97.68649  106.66120
9    95.58586  105.17935
10   92.28654  102.52310
11   87.68920   98.14074
12   86.01658   96.38086
13   88.14385   97.96414
14   90.42428  100.13369
15   95.53067  105.25969
16   97.49053  106.88241
17   95.84240  106.87075
18   96.24924  105.24269
19   96.13392  105.09291
20   99.23165  108.04672
> print( predict( fitw2slsd2e$eq[[ 1 ]], se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData, useDfSys = TRUE ) )
        fit    se.fit       lwr      upr
1  103.9617 1.2138019 100.07622 107.8472
2  106.4410 1.1691397 102.59485 110.2871
3  106.3795 1.2163708 102.49168 110.2672
4  106.5835 1.1692423 102.73727 110.4297
5  109.2998 1.8974159 104.69787 113.9018
6  109.0830 1.7733863 104.62466 113.5413
7  109.5540 1.7180534 105.15812 113.9500
8  110.0449 1.5523924 105.82886 114.2609
9  108.6261 1.9390467 103.97481 113.2775
10 107.4874 2.2293853 102.47788 112.4969
11 101.7842 1.6552923  97.45764 106.1107
12 100.5812 1.1250247  96.77292 104.3896
13 102.0830 0.8785551  98.46480 105.7012
14 105.6555 1.4800459 101.51452 109.7965
15 111.4602 2.3307936 106.32045 116.6000
16 111.1102 2.0643325 106.30714 115.9132
17 111.8027 3.0010945 105.74993 117.8555
18 109.0333 1.4754411 104.89704 113.1696
19 110.7872 1.5890063 106.53233 115.0421
20 114.3211 1.7561251 109.88238 118.7598
> 
> print( predict( fitw2slsd3e, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.01, useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1     97.38516     0.6223203       2.047944   97.35930   97.41102    98.15038
2     99.37890     0.6536296       2.057674   99.35292   99.40488    99.74508
3     99.37771     0.5976011       2.040568   99.35194   99.40347    99.87779
4     99.49249     0.6630208       2.060676   99.46647   99.51851   100.20874
5    102.39129     0.5152372       2.017984  102.36581  102.41677   102.34337
6    102.09807     0.4420655       2.000553  102.07281  102.12333   102.34102
7    102.42006     0.4437246       2.000920  102.39479  102.44532   102.37663
8    102.62226     0.5871271       2.037525  102.59653  102.64798   104.73954
9    101.88147     0.5728932       2.033469  101.85580  101.90715   102.74461
10   101.19068     0.9480587       2.169241  101.16330  101.21807    99.63903
11    95.88334     0.8493126       2.127938   95.85647   95.91020    95.19466
12    94.41248     0.9142815       2.154693   94.38528   94.43969    93.61840
13    95.50662     0.9432419       2.167140   95.47926   95.53398    95.57426
14    99.02841     0.4636567       2.005435   99.00309   99.05373    97.69756
15   104.54553     0.8832617       2.141715  104.51849  104.57257   102.72469
16   104.00733     0.6306043       2.050476  103.98144  104.03321   104.59758
17   105.42593     1.6646590       2.564738  105.39354  105.45831   103.47495
18   101.75195     0.5380550       2.023930  101.72639  101.77750   103.29336
19   103.23067     0.6608029       2.059964  103.20466  103.25668   103.20374
20   105.93366     1.2838961       2.335633  105.90417  105.96315   106.41861
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      0.6521033       2.599317   98.11756   98.18320
2      0.7403852       2.622857   99.71197   99.77820
3      0.6818479       2.606938   99.84488   99.91071
4      0.7084904       2.614033  100.17573  100.24174
5      0.7815110       2.634761  102.31010  102.37664
6      0.6987237       2.611402  102.30805  102.37399
7      0.6475240       2.598172  102.34382  102.40943
8      0.9057284       2.674239  104.70577  104.77330
9      0.7363660       2.621725  102.71151  102.77771
10     0.9312180       2.682979   99.60516   99.67291
11     1.1066669       2.748803   95.15996   95.22937
12     1.2865692       2.826034   93.58272   93.65408
13     1.1566661       2.769311   95.53929   95.60922
14     0.8293341       2.649340   97.66411   97.73101
15     0.7166332       2.616251  102.69165  102.75772
16     0.6755101       2.605287  104.56468  104.63047
17     1.3915621       2.875353  103.43864  103.51125
18     0.6994111       2.611586  103.26039  103.32634
19     0.8218983       2.647022  103.17032  103.23716
20     1.3755046       2.867616  106.38240  106.45481
> print( predict( fitw2slsd3e$eq[[ 2 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.01, useDfSys = TRUE ) )
         fit    se.fit  se.pred       lwr       upr
1   98.15038 0.6521033 2.599317  98.11756  98.18320
2   99.74508 0.7403852 2.622857  99.71197  99.77820
3   99.87779 0.6818479 2.606938  99.84488  99.91071
4  100.20874 0.7084904 2.614033 100.17573 100.24174
5  102.34337 0.7815110 2.634761 102.31010 102.37664
6  102.34102 0.6987237 2.611402 102.30805 102.37399
7  102.37663 0.6475240 2.598172 102.34382 102.40943
8  104.73954 0.9057284 2.674239 104.70577 104.77330
9  102.74461 0.7363660 2.621725 102.71151 102.77771
10  99.63903 0.9312180 2.682979  99.60516  99.67291
11  95.19466 1.1066669 2.748803  95.15996  95.22937
12  93.61840 1.2865692 2.826034  93.58272  93.65408
13  95.57426 1.1566661 2.769311  95.53929  95.60922
14  97.69756 0.8293341 2.649340  97.66411  97.73101
15 102.72469 0.7166332 2.616251 102.69165 102.75772
16 104.59758 0.6755101 2.605287 104.56468 104.63047
17 103.47495 1.3915621 2.875353 103.43864 103.51125
18 103.29336 0.6994111 2.611586 103.26039 103.32634
19 103.20374 0.8218983 2.647022 103.17032 103.23716
20 106.41861 1.3755046 2.867616 106.38240 106.45481
> 
> # predict just one observation
> smallData <- data.frame( price = 130, income = 150, farmPrice = 120,
+    trend = 25 )
> 
> print( predict( fitw2sls1e, newdata = smallData ) )
  demand.pred supply.pred
1    110.0697    117.7381
> print( predict( fitw2sls1e$eq[[ 1 ]], newdata = smallData ) )
       fit
1 110.0697
> 
> print( predict( fitw2sls2, se.fit = TRUE, level = 0.9,
+    newdata = smallData ) )
  demand.pred demand.se.fit supply.pred supply.se.fit
1    109.8850      2.522903    118.7104      3.528034
> print( predict( fitw2sls2$eq[[ 1 ]], se.pred = TRUE, level = 0.99,
+    newdata = smallData ) )
       fit se.pred
1 109.8850 3.20885
> 
> print( predict( fitw2sls3, interval = "prediction", level = 0.975,
+    newdata = smallData ) )
  demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1    109.8850   102.3601   117.4100    118.7104   108.5967    128.824
> print( predict( fitw2sls3$eq[[ 1 ]], interval = "confidence", level = 0.8,
+    newdata = smallData ) )
       fit      lwr      upr
1 109.8850 106.5877 113.1823
> 
> print( predict( fitw2sls4e, se.fit = TRUE, interval = "confidence",
+    level = 0.999, newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1    109.6676      2.076198   102.2117   117.1236    119.2196      2.110555
  supply.lwr supply.upr
1   111.6403   126.7989
> print( predict( fitw2sls4e$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.75, newdata = smallData ) )
       fit  se.pred      lwr      upr
1 119.2196 3.273911 115.3899 123.0493
> 
> print( predict( fitw2sls5, se.fit = TRUE, interval = "prediction",
+    newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1    109.6896      2.263064   103.5994   115.7799    119.2279      2.329153
  supply.lwr supply.upr
1   112.2865   126.1692
> print( predict( fitw2sls5$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    newdata = smallData ) )
       fit  se.pred      lwr      upr
1 109.6896 2.999959 105.0954 114.2839
> 
> print( predict( fitw2slsd2e, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1    107.6281       2.71462       3.343045   105.3489   109.9073     119.352
  supply.se.fit supply.se.pred supply.lwr supply.upr
1      3.217325       4.084408   116.5674   122.1366
> print( predict( fitw2slsd2e$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
       fit  se.fit  se.pred      lwr      upr
1 107.6281 2.71462 3.343045 106.7561 108.5001
> 
> 
> ## ************ correlation of predicted values ***************
> print( correlation.systemfit( fitw2sls1e, 1, 2 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fitw2sls2, 2, 1 ) )
               [,1]
 [1,]  0.4134528494
 [2,]  0.1537593302
 [3,]  0.1529619870
 [4,]  0.1126714843
 [5,] -0.0714418267
 [6,] -0.0539432738
 [7,] -0.0509610138
 [8,] -0.0054423289
 [9,] -0.0004762012
[10,] -0.0018944877
[11,]  0.0473510924
[12,]  0.0649726704
[13,]  0.0245905438
[14,] -0.0280362915
[15,]  0.1753264294
[16,]  0.2548776263
[17,]  0.1045402043
[18,]  0.0655787703
[19,]  0.1470076607
[20,]  0.1245927216
> 
> print( correlation.systemfit( fitw2sls3, 1, 2 ) )
               [,1]
 [1,]  0.4134528494
 [2,]  0.1537593302
 [3,]  0.1529619870
 [4,]  0.1126714843
 [5,] -0.0714418267
 [6,] -0.0539432738
 [7,] -0.0509610138
 [8,] -0.0054423289
 [9,] -0.0004762012
[10,] -0.0018944877
[11,]  0.0473510924
[12,]  0.0649726704
[13,]  0.0245905438
[14,] -0.0280362915
[15,]  0.1753264294
[16,]  0.2548776263
[17,]  0.1045402043
[18,]  0.0655787703
[19,]  0.1470076607
[20,]  0.1245927216
> 
> print( correlation.systemfit( fitw2sls4e, 2, 1 ) )
              [,1]
 [1,]  0.384378855
 [2,]  0.306972984
 [3,]  0.266903991
 [4,]  0.301633717
 [5,] -0.027681878
 [6,] -0.050860398
 [7,] -0.058945562
 [8,]  0.101018851
 [9,]  0.100719807
[10,]  0.455474580
[11,]  0.108167324
[12,]  0.005524089
[13,]  0.042185360
[14,] -0.040536614
[15,]  0.420999509
[16,]  0.249735676
[17,]  0.657223160
[18,]  0.242863697
[19,]  0.343361348
[20,]  0.547173845
> 
> print( correlation.systemfit( fitw2sls5, 1, 2 ) )
              [,1]
 [1,]  0.380302298
 [2,]  0.308924103
 [3,]  0.268078450
 [4,]  0.303247165
 [5,] -0.027303816
 [6,] -0.050349006
 [7,] -0.058307754
 [8,]  0.100359927
 [9,]  0.100446064
[10,]  0.454919901
[11,]  0.105254036
[12,]  0.003944537
[13,]  0.041713882
[14,] -0.040372871
[15,]  0.419581827
[16,]  0.247056435
[17,]  0.656193719
[18,]  0.238716886
[19,]  0.337289906
[20,]  0.542390125
> 
> print( correlation.systemfit( fitw2slsd1, 2, 1 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fitw2slsd2e, 1, 2 ) )
               [,1]
 [1,]  0.4822141158
 [2,]  0.2533675830
 [3,]  0.2428235396
 [4,]  0.1954106266
 [5,] -0.1078282162
 [6,] -0.0749581658
 [7,] -0.0556962858
 [8,] -0.0020373115
 [9,] -0.0009205982
[10,] -0.0080395821
[11,]  0.0409988120
[12,]  0.0754175077
[13,]  0.0297019899
[14,] -0.0307748345
[15,]  0.2290631580
[16,]  0.3186071636
[17,]  0.1567344995
[18,] -0.0230158502
[19,]  0.0681281052
[20,]  0.0474805318
> 
> print( correlation.systemfit( fitw2slsd3e, 2, 1 ) )
               [,1]
 [1,]  0.4822141158
 [2,]  0.2533675830
 [3,]  0.2428235396
 [4,]  0.1954106266
 [5,] -0.1078282162
 [6,] -0.0749581658
 [7,] -0.0556962858
 [8,] -0.0020373115
 [9,] -0.0009205982
[10,] -0.0080395821
[11,]  0.0409988120
[12,]  0.0754175077
[13,]  0.0297019899
[14,] -0.0307748345
[15,]  0.2290631580
[16,]  0.3186071636
[17,]  0.1567344995
[18,] -0.0230158502
[19,]  0.0681281052
[20,]  0.0474805318
> 
> 
> ## ************ LOG-Likelihood values ***************
> print( logLik( fitw2sls1e ) )
'log Lik.' -67.63536 (df=9)
> 
> print( logLik( fitw2sls2 ) )
'log Lik.' -65.16437 (df=8)
> 
> print( logLik( fitw2sls3 ) )
'log Lik.' -65.16437 (df=8)
> 
> print( logLik( fitw2sls4e ) )
'log Lik.' -65.69462 (df=7)
> 
> print( logLik( fitw2sls5 ) )
'log Lik.' -65.63349 (df=7)
> 
> print( logLik( fitw2slsd1 ) )
'log Lik.' -75.14682 (df=9)
> 
> print( logLik( fitw2slsd2e ) )
'log Lik.' -69.14806 (df=8)
> 
> print( logLik( fitw2slsd3e ) )
'log Lik.' -69.14806 (df=8)
> 
> 
> ## ************** F tests ****************
> # testing first restriction
> print( linear.hypothesis( fitw2sls1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2sls1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.3073 0.5831
> linear.hypothesis( fitw2sls1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2sls1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.3073 0.5831
> 
> print( linear.hypothesis( fitw2slsd1e, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2slsd1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.9163 0.3454
> linear.hypothesis( fitw2slsd1e, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2slsd1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.9163 0.3454
> 
> # testing second restriction
> restrOnly2m <- matrix(0,1,7)
> restrOnly2q <- 0.5
> restrOnly2m[1,2] <- -1
> restrOnly2m[1,5] <-  1
> restrictOnly2 <- "- demand_price + supply_price = 0.5"
> # first restriction not imposed 
> print( linear.hypothesis( fitw2sls1e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.0139 0.9069
> linear.hypothesis( fitw2sls1e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.0139 0.9069
> 
> print( linear.hypothesis( fitw2slsd1, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.7429 0.3950
> linear.hypothesis( fitw2slsd1, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.7429 0.3950
> 
> # first restriction imposed
> print( linear.hypothesis( fitw2sls2, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls2
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0386 0.8455
> linear.hypothesis( fitw2sls2, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls2
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0386 0.8455
> 
> print( linear.hypothesis( fitw2sls3, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls3
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0386 0.8455
> linear.hypothesis( fitw2sls3, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls3
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0386 0.8455
> 
> print( linear.hypothesis( fitw2slsd2e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd2e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.4171 0.5227
> linear.hypothesis( fitw2slsd2e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd2e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.4171 0.5227
> 
> print( linear.hypothesis( fitw2slsd3e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd3e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.4171 0.5227
> linear.hypothesis( fitw2slsd3e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd3e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.4171 0.5227
> 
> # testing both of the restrictions
> print( linear.hypothesis( fitw2sls1e, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.1766 0.8389
> linear.hypothesis( fitw2sls1e, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.1766 0.8389
> 
> print( linear.hypothesis( fitw2slsd1, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.6504 0.5284
> linear.hypothesis( fitw2slsd1, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.6504 0.5284
> 
> 
> ## ************** Wald tests ****************
> # testing first restriction
> print( linear.hypothesis( fitw2sls1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2sls1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.3073     0.5793
> linear.hypothesis( fitw2sls1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2sls1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.3073     0.5793
> 
> print( linear.hypothesis( fitw2slsd1e, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2slsd1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 1.1107     0.2919
> linear.hypothesis( fitw2slsd1e, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitw2slsd1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 1.1107     0.2919
> 
> # testing second restriction
> # first restriction not imposed
> print( linear.hypothesis( fitw2sls1e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.0168     0.8967
> linear.hypothesis( fitw2sls1e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.0168     0.8967
> 
> print( linear.hypothesis( fitw2slsd1, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.7429     0.3887
> linear.hypothesis( fitw2slsd1, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.7429     0.3887
> # first restriction imposed
> print( linear.hypothesis( fitw2sls2, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls2
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0373     0.8468
> linear.hypothesis( fitw2sls2, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls2
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0373     0.8468
> 
> print( linear.hypothesis( fitw2sls3, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls3
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0373     0.8468
> linear.hypothesis( fitw2sls3, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2sls3
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0373     0.8468
> 
> print( linear.hypothesis( fitw2slsd2e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd2e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.4942     0.4821
> linear.hypothesis( fitw2slsd2e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd2e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.4942     0.4821
> 
> print( linear.hypothesis( fitw2slsd3e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd3e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.4942     0.4821
> linear.hypothesis( fitw2slsd3e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitw2slsd3e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.4942     0.4821
> 
> # testing both of the restrictions
> print( linear.hypothesis( fitw2sls1e, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 0.4282     0.8073
> linear.hypothesis( fitw2sls1e, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2sls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 0.4282     0.8073
> 
> print( linear.hypothesis( fitw2slsd1, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 1.3008     0.5218
> linear.hypothesis( fitw2slsd1, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitw2slsd1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 1.3008     0.5218
> 
> 
> ## ****************** model frame **************************
> print( mf <- model.frame( fitw2sls1e ) )
   consump   price income farmPrice trend
1   98.485 100.323   87.4      98.0     1
2   99.187 104.264   97.6      99.1     2
3  102.163 103.435   96.7      99.1     3
4  101.504 104.506   98.2      98.1     4
5  104.240  98.001   99.8     110.8     5
6  103.243  99.456  100.5     108.2     6
7  103.993 101.066  103.2     105.6     7
8   99.900 104.763  107.8     109.8     8
9  100.350  96.446   96.6     108.7     9
10 102.820  91.228   88.9     100.6    10
11  95.435  93.085   75.1      81.0    11
12  92.424  98.801   76.9      68.6    12
13  94.535 102.908   84.6      70.9    13
14  98.757  98.756   90.6      81.4    14
15 105.797  95.119  103.1     102.3    15
16 100.225  98.451  105.1     105.0    16
17 103.522  86.498   96.4     110.5    17
18  99.929 104.016  104.4      92.5    18
19 105.223 105.769  110.7      89.3    19
20 106.232 113.490  127.1      93.0    20
> print( mf1 <- model.frame( fitw2sls1e$eq[[ 1 ]] ) )
   consump   price income
1   98.485 100.323   87.4
2   99.187 104.264   97.6
3  102.163 103.435   96.7
4  101.504 104.506   98.2
5  104.240  98.001   99.8
6  103.243  99.456  100.5
7  103.993 101.066  103.2
8   99.900 104.763  107.8
9  100.350  96.446   96.6
10 102.820  91.228   88.9
11  95.435  93.085   75.1
12  92.424  98.801   76.9
13  94.535 102.908   84.6
14  98.757  98.756   90.6
15 105.797  95.119  103.1
16 100.225  98.451  105.1
17 103.522  86.498   96.4
18  99.929 104.016  104.4
19 105.223 105.769  110.7
20 106.232 113.490  127.1
> print( attributes( mf1 )$terms )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> print( mf2 <- model.frame( fitw2sls1e$eq[[ 2 ]] ) )
   consump   price farmPrice trend
1   98.485 100.323      98.0     1
2   99.187 104.264      99.1     2
3  102.163 103.435      99.1     3
4  101.504 104.506      98.1     4
5  104.240  98.001     110.8     5
6  103.243  99.456     108.2     6
7  103.993 101.066     105.6     7
8   99.900 104.763     109.8     8
9  100.350  96.446     108.7     9
10 102.820  91.228     100.6    10
11  95.435  93.085      81.0    11
12  92.424  98.801      68.6    12
13  94.535 102.908      70.9    13
14  98.757  98.756      81.4    14
15 105.797  95.119     102.3    15
16 100.225  98.451     105.0    16
17 103.522  86.498     110.5    17
18  99.929 104.016      92.5    18
19 105.223 105.769      89.3    19
20 106.232 113.490      93.0    20
> print( attributes( mf2 )$terms )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> print( all.equal( mf, model.frame( fitw2sls2 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitw2sls2$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitw2sls3 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitw2sls3$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitw2sls4e ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitw2sls4e$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitw2sls5 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitw2sls5$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitw2slsd1 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitw2slsd1$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitw2slsd2e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitw2slsd2e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitw2slsd3e ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitw2slsd3e$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> 
> ## **************** model matrix ************************
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitw2sls1e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( mm <- model.matrix( fitw2sls1e ) )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1                   1      100.323          87.4                  0
demand_2                   1      104.264          97.6                  0
demand_3                   1      103.435          96.7                  0
demand_4                   1      104.506          98.2                  0
demand_5                   1       98.001          99.8                  0
demand_6                   1       99.456         100.5                  0
demand_7                   1      101.066         103.2                  0
demand_8                   1      104.763         107.8                  0
demand_9                   1       96.446          96.6                  0
demand_10                  1       91.228          88.9                  0
demand_11                  1       93.085          75.1                  0
demand_12                  1       98.801          76.9                  0
demand_13                  1      102.908          84.6                  0
demand_14                  1       98.756          90.6                  0
demand_15                  1       95.119         103.1                  0
demand_16                  1       98.451         105.1                  0
demand_17                  1       86.498          96.4                  0
demand_18                  1      104.016         104.4                  0
demand_19                  1      105.769         110.7                  0
demand_20                  1      113.490         127.1                  0
supply_1                   0        0.000           0.0                  1
supply_2                   0        0.000           0.0                  1
supply_3                   0        0.000           0.0                  1
supply_4                   0        0.000           0.0                  1
supply_5                   0        0.000           0.0                  1
supply_6                   0        0.000           0.0                  1
supply_7                   0        0.000           0.0                  1
supply_8                   0        0.000           0.0                  1
supply_9                   0        0.000           0.0                  1
supply_10                  0        0.000           0.0                  1
supply_11                  0        0.000           0.0                  1
supply_12                  0        0.000           0.0                  1
supply_13                  0        0.000           0.0                  1
supply_14                  0        0.000           0.0                  1
supply_15                  0        0.000           0.0                  1
supply_16                  0        0.000           0.0                  1
supply_17                  0        0.000           0.0                  1
supply_18                  0        0.000           0.0                  1
supply_19                  0        0.000           0.0                  1
supply_20                  0        0.000           0.0                  1
          supply_price supply_farmPrice supply_trend
demand_1         0.000              0.0            0
demand_2         0.000              0.0            0
demand_3         0.000              0.0            0
demand_4         0.000              0.0            0
demand_5         0.000              0.0            0
demand_6         0.000              0.0            0
demand_7         0.000              0.0            0
demand_8         0.000              0.0            0
demand_9         0.000              0.0            0
demand_10        0.000              0.0            0
demand_11        0.000              0.0            0
demand_12        0.000              0.0            0
demand_13        0.000              0.0            0
demand_14        0.000              0.0            0
demand_15        0.000              0.0            0
demand_16        0.000              0.0            0
demand_17        0.000              0.0            0
demand_18        0.000              0.0            0
demand_19        0.000              0.0            0
demand_20        0.000              0.0            0
supply_1       100.323             98.0            1
supply_2       104.264             99.1            2
supply_3       103.435             99.1            3
supply_4       104.506             98.1            4
supply_5        98.001            110.8            5
supply_6        99.456            108.2            6
supply_7       101.066            105.6            7
supply_8       104.763            109.8            8
supply_9        96.446            108.7            9
supply_10       91.228            100.6           10
supply_11       93.085             81.0           11
supply_12       98.801             68.6           12
supply_13      102.908             70.9           13
supply_14       98.756             81.4           14
supply_15       95.119            102.3           15
supply_16       98.451            105.0           16
supply_17       86.498            110.5           17
supply_18      104.016             92.5           18
supply_19      105.769             89.3           19
supply_20      113.490             93.0           20
> print( mm1 <- model.matrix( fitw2sls1e$eq[[ 1 ]] ) )
   (Intercept)   price income
1            1 100.323   87.4
2            1 104.264   97.6
3            1 103.435   96.7
4            1 104.506   98.2
5            1  98.001   99.8
6            1  99.456  100.5
7            1 101.066  103.2
8            1 104.763  107.8
9            1  96.446   96.6
10           1  91.228   88.9
11           1  93.085   75.1
12           1  98.801   76.9
13           1 102.908   84.6
14           1  98.756   90.6
15           1  95.119  103.1
16           1  98.451  105.1
17           1  86.498   96.4
18           1 104.016  104.4
19           1 105.769  110.7
20           1 113.490  127.1
attr(,"assign")
[1] 0 1 2
> print( mm2 <- model.matrix( fitw2sls1e$eq[[ 2 ]] ) )
   (Intercept)   price farmPrice trend
1            1 100.323      98.0     1
2            1 104.264      99.1     2
3            1 103.435      99.1     3
4            1 104.506      98.1     4
5            1  98.001     110.8     5
6            1  99.456     108.2     6
7            1 101.066     105.6     7
8            1 104.763     109.8     8
9            1  96.446     108.7     9
10           1  91.228     100.6    10
11           1  93.085      81.0    11
12           1  98.801      68.6    12
13           1 102.908      70.9    13
14           1  98.756      81.4    14
15           1  95.119     102.3    15
16           1  98.451     105.0    16
17           1  86.498     110.5    17
18           1 104.016      92.5    18
19           1 105.769      89.3    19
20           1 113.490      93.0    20
attr(,"assign")
[1] 0 1 2 3
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitw2sls1 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2sls1$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2sls1$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitw2sls1$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitw2sls2e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitw2sls2e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2sls2e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2sls2e$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitw2sls2Sym ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2sls2Sym$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2sls2Sym$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitw2sls2Sym$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitw2slsd3$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitw2slsd3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2slsd3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2slsd3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitw2slsd3e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2slsd3e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2slsd3e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitw2slsd3e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitw2sls4$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitw2sls4 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2sls4$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2sls4$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitw2sls4e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2sls4e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2sls4e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitw2sls4e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitw2sls5$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitw2sls5 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2sls5$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2sls5$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitw2sls5e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitw2sls5e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitw2sls5e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitw2sls5e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> 
> ## **************** formulas ************************
> formula( fitw2sls1e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2sls1e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitw2sls2 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2sls2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitw2sls3 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2sls3$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitw2sls4e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2sls4e$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitw2sls5 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2sls5$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitw2slsd1 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2slsd1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitw2slsd2e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2slsd2e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitw2slsd3e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitw2slsd3e$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> 
> ## **************** model terms *******************
> terms( fitw2sls1e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2sls1e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitw2sls2 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2sls2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitw2sls3 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2sls3$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitw2sls4e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2sls4e$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitw2sls5 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2sls5$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitw2slsd1 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2slsd1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitw2slsd2e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2slsd2e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitw2slsd3e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitw2slsd3e$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
