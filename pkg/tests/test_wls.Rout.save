
R version 2.8.0 (2008-10-20)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library( systemfit )
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'


	The following object(s) are masked from package:stats :

	 xtabs 


	The following object(s) are masked from package:base :

	 colMeans,
	 colSums,
	 rcond,
	 rowMeans,
	 rowSums 

Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

> data( "Kmenta" )
> useMatrix <- FALSE
> 
> demand <- consump ~ price + income
> supply <- consump ~ price + farmPrice + trend
> system <- list( demand = demand, supply = supply )
> restrm <- matrix(0,1,7)  # restriction matrix "R"
> restrm[1,3] <-  1
> restrm[1,7] <- -1
> restrict <- "demand_income - supply_trend = 0"
> restr2m <- matrix(0,2,7)  # restriction matrix "R" 2
> restr2m[1,3] <-  1
> restr2m[1,7] <- -1
> restr2m[2,2] <- -1
> restr2m[2,5] <-  1
> restr2q <- c( 0, 0.5 )  # restriction vector "q" 2
> restrict2 <- c( "demand_income - supply_trend = 0",
+    "- demand_price + supply_price = 0.5" )
> tc <- matrix(0,7,6)
> tc[1,1] <- 1
> tc[2,2] <- 1
> tc[3,3] <- 1
> tc[4,4] <- 1
> tc[5,5] <- 1
> tc[6,6] <- 1
> tc[7,3] <- 1
> restr3m <- matrix(0,1,6)  # restriction matrix "R" 2
> restr3m[1,2] <- -1
> restr3m[1,5] <-  1
> restr3q <- c( 0.5 )  # restriction vector "q" 2
> restrict3 <- "- C2 + C5 = 0.5"
> 
> 
> ## *************** WLS estimation ************************
> fitwls1 <- systemfit( system, "WLS", data = Kmenta, useMatrix = useMatrix )
> print( summary( fitwls1 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 155.883 4.43485 0.709298   0.557559

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.3317 3.72539 1.93013 0.763789 0.735999
supply 20 16 92.5511 5.78444 2.40509 0.654807 0.590084

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.72539 0.00000
supply 0.00000 5.78444

The covariance matrix of the residuals
        demand  supply
demand 3.72539 4.13696
supply 4.13696 5.78444

The correlations of the residuals
         demand   supply
demand 1.000000 0.891179
supply 0.891179 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.8954229  7.5193621 13.28509 2.0906e-10 ***
price       -0.3162988  0.0906774 -3.48818  0.0028153 ** 
income       0.3346356  0.0454218  7.36729 1.0999e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.930127 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.33165 MSE: 3.725391 Root MSE: 1.930127 
Multiple R-Squared: 0.763789 Adjusted R-Squared: 0.735999 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 58.2754312 11.4629099 5.08383 0.00011056 ***
price        0.1603666  0.0948839 1.69013 0.11038810    
farmPrice    0.2481333  0.0461879 5.37226 6.2274e-05 ***
trend        0.2483023  0.0975178 2.54623 0.02156713 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.405087 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551058 MSE: 5.784441 Root MSE: 2.405087 
Multiple R-Squared: 0.654807 Adjusted R-Squared: 0.590084 

> 
> ## *************** WLS estimation (EViews-like) ************************
> fitwls1e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls1e, useDfSys = TRUE ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 155.883 3.01570 0.709298   0.536785

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.3317 3.72539 1.93013 0.763789 0.735999
supply 20 16 92.5511 5.78444 2.40509 0.654807 0.590084

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.16658 0.00000
supply 0.00000 4.62755

The covariance matrix of the residuals
        demand  supply
demand 3.16658 3.41143
supply 3.41143 4.62755

The correlations of the residuals
         demand   supply
demand 1.000000 0.891179
supply 0.891179 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.8954229  6.9325094 14.40971 8.8818e-16 ***
price       -0.3162988  0.0836004 -3.78346 0.00061936 ***
income       0.3346356  0.0418769  7.99094 3.2219e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.930127 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.33165 MSE: 3.725391 Root MSE: 1.930127 
Multiple R-Squared: 0.763789 Adjusted R-Squared: 0.735999 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 58.2754312 10.2527383 5.68389 2.4491e-06 ***
price        0.1603666  0.0848668 1.88963   0.067620 .  
farmPrice    0.2481333  0.0413117 6.00637 9.4678e-07 ***
trend        0.2483023  0.0872225 2.84677   0.007539 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.405087 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551058 MSE: 5.784441 Root MSE: 2.405087 
Multiple R-Squared: 0.654807 Adjusted R-Squared: 0.590084 

> 
> ## ************** WLS with cross-equation restriction ***************
> fitwls2 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls2 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.377 2.34660 0.702781   0.622292

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7499 3.74999 1.93649 0.762229 0.734256
supply 20 16 95.6272 5.97670 2.44473 0.643334 0.576459

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.77566 0.00000
supply 0.00000 5.94299

The covariance matrix of the residuals
        demand  supply
demand 3.74999 4.47951
supply 4.47951 5.97670

The correlations of the residuals
         demand   supply
demand 1.000000 0.946203
supply 0.946203 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6581706  7.5640025 13.17532 6.4393e-15 ***
price       -0.2990854  0.0886668 -3.37314   0.001868 ** 
income       0.3194163  0.0415015  7.69651 5.9845e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.93649 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.749895 MSE: 3.749994 Root MSE: 1.93649 
Multiple R-Squared: 0.762229 Adjusted R-Squared: 0.734256 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.1876896 11.3165129 4.96511 1.9062e-05 ***
price        0.1642703  0.0960493 1.71027   0.096328 .  
farmPrice    0.2579713  0.0451416 5.71471 2.0221e-06 ***
trend        0.3194163  0.0415015 7.69651 5.9845e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.444729 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.627182 MSE: 5.976699 Root MSE: 2.444729 
Multiple R-Squared: 0.643334 Adjusted R-Squared: 0.576459 

> # the same with symbolically specified restrictions
> fitwls2Sym <- systemfit( system, "WLS", data = Kmenta,
+    restrict.matrix = restrict, x = TRUE,
+    useMatrix = useMatrix )
> all.equal( fitwls2, fitwls2Sym )
[1] "Component 2: target, current do not match when deparsed"
> 
> ## ************** WLS with cross-equation restriction (EViews-like) *******
> fitwls2e <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fitwls2e ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.354 1.60653 0.702824   0.588817

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7936 3.75256 1.93715 0.762066 0.734073
supply 20 16 95.5605 5.97253 2.44388 0.643583 0.576755

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.20931 0.00000
supply 0.00000 4.75439

The covariance matrix of the residuals
        demand  supply
demand 3.18968 3.69240
supply 3.69240 4.77803

The correlations of the residuals
         demand   supply
demand 1.000000 0.945826
supply 0.945826 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6460895  6.9733877 14.28948 6.6613e-16 ***
price       -0.2982089  0.0816218 -3.65354 0.00086325 ***
income       0.3186413  0.0380534  8.37353 8.9233e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.937153 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.793574 MSE: 3.752563 Root MSE: 1.937153 
Multiple R-Squared: 0.762066 Adjusted R-Squared: 0.734073 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.2104413 10.1247837 5.55177 3.2948e-06 ***
price        0.1642278  0.0859104 1.91162   0.064384 .  
farmPrice    0.2578641  0.0403925 6.38396 2.7443e-07 ***
trend        0.3186413  0.0380534 8.37353 8.9233e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.443876 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.560501 MSE: 5.972531 Root MSE: 2.443876 
Multiple R-Squared: 0.643583 Adjusted R-Squared: 0.576755 

> 
> ## ******* WLS with cross-equation restriction via restrict.regMat **********
> fitwls3 <- systemfit( system,"WLS", data = Kmenta, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls3 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.377 2.34660 0.702781   0.622292

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7499 3.74999 1.93649 0.762229 0.734256
supply 20 16 95.6272 5.97670 2.44473 0.643334 0.576459

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.77566 0.00000
supply 0.00000 5.94299

The covariance matrix of the residuals
        demand  supply
demand 3.74999 4.47951
supply 4.47951 5.97670

The correlations of the residuals
         demand   supply
demand 1.000000 0.946203
supply 0.946203 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6581706  7.5640025 13.17532 6.4393e-15 ***
price       -0.2990854  0.0886668 -3.37314   0.001868 ** 
income       0.3194163  0.0415015  7.69651 5.9845e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.93649 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.749895 MSE: 3.749994 Root MSE: 1.93649 
Multiple R-Squared: 0.762229 Adjusted R-Squared: 0.734256 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.1876896 11.3165129 4.96511 1.9062e-05 ***
price        0.1642703  0.0960493 1.71027   0.096328 .  
farmPrice    0.2579713  0.0451416 5.71471 2.0221e-06 ***
trend        0.3194163  0.0415015 7.69651 5.9845e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.444729 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.627182 MSE: 5.976699 Root MSE: 2.444729 
Multiple R-Squared: 0.643334 Adjusted R-Squared: 0.576459 

> 
> ## ******* WLS with cross-equation restriction via restrict.regMat (EViews-like) *****
> fitwls3e <- systemfit( system,"WLS", data = Kmenta, restrict.regMat = tc,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fitwls3e ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.354 1.60653 0.702824   0.588817

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7936 3.75256 1.93715 0.762066 0.734073
supply 20 16 95.5605 5.97253 2.44388 0.643583 0.576755

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.20931 0.00000
supply 0.00000 4.75439

The covariance matrix of the residuals
        demand  supply
demand 3.18968 3.69240
supply 3.69240 4.77803

The correlations of the residuals
         demand   supply
demand 1.000000 0.945826
supply 0.945826 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6460895  6.9733877 14.28948 6.6613e-16 ***
price       -0.2982089  0.0816218 -3.65354 0.00086325 ***
income       0.3186413  0.0380534  8.37353 8.9233e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.937153 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.793574 MSE: 3.752563 Root MSE: 1.937153 
Multiple R-Squared: 0.762066 Adjusted R-Squared: 0.734073 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.2104413 10.1247837 5.55177 3.2948e-06 ***
price        0.1642278  0.0859104 1.91162   0.064384 .  
farmPrice    0.2578641  0.0403925 6.38396 2.7443e-07 ***
trend        0.3186413  0.0380534 8.37353 8.9233e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.443876 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.560501 MSE: 5.972531 Root MSE: 2.443876 
Multiple R-Squared: 0.643583 Adjusted R-Squared: 0.576755 

> 
> ## ***** WLS with 2 cross-equation restrictions ***************
> fitwls4 <- systemfit( system,"WLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, useMatrix = useMatrix )
> print( summary( fitwls4 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.904 2.51108 0.701799   0.618554

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6361 3.74330 1.93476 0.762653 0.734730
supply 20 16 96.2676 6.01672 2.45290 0.640946 0.573623

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.76491 0.00000
supply 0.00000 5.98832

The covariance matrix of the residuals
       demand  supply
demand 3.7433 4.47340
supply 4.4734 6.01672

The correlations of the residuals
         demand   supply
demand 1.000000 0.942607
supply 0.942607 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9137976   6.0473974 16.68714 < 2.22e-16 ***
price        -0.3159508   0.0648152 -4.87464 2.3415e-05 ***
income        0.3238376   0.0384796  8.41583 6.2977e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.934761 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.636116 MSE: 3.743301 Root MSE: 1.934761 
Multiple R-Squared: 0.762653 Adjusted R-Squared: 0.73473 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9415650  7.9686947 6.76918 7.6015e-08 ***
price        0.1840492  0.0648152 2.83960  0.0074747 ** 
farmPrice    0.2602630  0.0445606 5.84065 1.2521e-06 ***
trend        0.3238376  0.0384796 8.41583 6.2977e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452901 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.267574 MSE: 6.016723 Root MSE: 2.452901 
Multiple R-Squared: 0.640946 Adjusted R-Squared: 0.573623 

> # the same with symbolically specified restrictions
> fitwls4Sym <- systemfit( system, "WLS", data = Kmenta,
+    restrict.matrix = restrict2, useMatrix = useMatrix )
> all.equal( fitwls4, fitwls4Sym )
[1] "Component 2: target, current do not match when deparsed"
> 
> ## ***** WLS with 2 cross-equation restrictions (EViews-like) **********
> fitwls4e <- systemfit( system,"WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls4e ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.885 1.72025 0.701834   0.586077

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6702 3.74531 1.93528 0.762526 0.734588
supply 20 16 96.2150 6.01344 2.45223 0.641142 0.573856

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.20017 0.00000
supply 0.00000 4.79065

The covariance matrix of the residuals
        demand  supply
demand 3.18351 3.68711
supply 3.68711 4.81075

The correlations of the residuals
         demand   supply
demand 1.000000 0.942165
supply 0.942165 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9762461   5.5234202 18.28147 < 2.22e-16 ***
price        -0.3160276   0.0588646 -5.36872 5.2505e-06 ***
income        0.3232761   0.0352186  9.17914 7.5899e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.935279 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.670192 MSE: 3.745305 Root MSE: 1.935279 
Multiple R-Squared: 0.762526 Adjusted R-Squared: 0.734588 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9630298  7.2088557 7.48566 9.1234e-09 ***
price        0.1839724  0.0588646 3.12535  0.0035607 ** 
farmPrice    0.2601814  0.0398735 6.52517 1.5800e-07 ***
trend        0.3232761  0.0352186 9.17914 7.5899e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452231 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.215011 MSE: 6.013438 Root MSE: 2.452231 
Multiple R-Squared: 0.641142 Adjusted R-Squared: 0.573856 

> 
> ## *********** WLS with 2 cross-equation restrictions via R and restrict.regMat ******
> fitwls5 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls5 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.904 2.51108 0.701799   0.618554

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6361 3.74330 1.93476 0.762653 0.734730
supply 20 16 96.2676 6.01672 2.45290 0.640946 0.573623

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.76491 0.00000
supply 0.00000 5.98832

The covariance matrix of the residuals
       demand  supply
demand 3.7433 4.47340
supply 4.4734 6.01672

The correlations of the residuals
         demand   supply
demand 1.000000 0.942607
supply 0.942607 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9137976   6.0473974 16.68714 < 2.22e-16 ***
price        -0.3159508   0.0648152 -4.87464 2.3415e-05 ***
income        0.3238376   0.0384796  8.41583 6.2977e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.934761 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.636116 MSE: 3.743301 Root MSE: 1.934761 
Multiple R-Squared: 0.762653 Adjusted R-Squared: 0.73473 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9415650  7.9686947 6.76918 7.6015e-08 ***
price        0.1840492  0.0648152 2.83960  0.0074747 ** 
farmPrice    0.2602630  0.0445606 5.84065 1.2521e-06 ***
trend        0.3238376  0.0384796 8.41583 6.2977e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452901 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.267574 MSE: 6.016723 Root MSE: 2.452901 
Multiple R-Squared: 0.640946 Adjusted R-Squared: 0.573623 

> # the same with symbolically specified restrictions
> fitwls5Sym <- systemfit( system, "WLS", data = Kmenta,
+    restrict.matrix = restrict3, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> all.equal( fitwls5, fitwls5Sym )
[1] "Component 2: target, current do not match when deparsed"
> 
> ## *********** WLS with 2 cross-equation restrictions via R and restrict.regMat (EViews-like)
> fitwls5e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    useMatrix = useMatrix )
> print( summary( fitwls5e ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.885 1.72025 0.701834   0.586077

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6702 3.74531 1.93528 0.762526 0.734588
supply 20 16 96.2150 6.01344 2.45223 0.641142 0.573856

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.20017 0.00000
supply 0.00000 4.79065

The covariance matrix of the residuals
        demand  supply
demand 3.18351 3.68711
supply 3.68711 4.81075

The correlations of the residuals
         demand   supply
demand 1.000000 0.942165
supply 0.942165 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9762461   5.5234202 18.28147 < 2.22e-16 ***
price        -0.3160276   0.0588646 -5.36872 5.2505e-06 ***
income        0.3232761   0.0352186  9.17914 7.5899e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.935279 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.670192 MSE: 3.745305 Root MSE: 1.935279 
Multiple R-Squared: 0.762526 Adjusted R-Squared: 0.734588 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9630298  7.2088557 7.48566 9.1234e-09 ***
price        0.1839724  0.0588646 3.12535  0.0035607 ** 
farmPrice    0.2601814  0.0398735 6.52517 1.5800e-07 ***
trend        0.3232761  0.0352186 9.17914 7.5899e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452231 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.215011 MSE: 6.013438 Root MSE: 2.452231 
Multiple R-Squared: 0.641142 Adjusted R-Squared: 0.573856 

> 
> ## *************** iterated WLS estimation *********************
> fitwlsi1 <- systemfit( system, "WLS", data = Kmenta,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi1, useDfSys = TRUE ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 155.883 4.43485 0.709298   0.557559

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.3317 3.72539 1.93013 0.763789 0.735999
supply 20 16 92.5511 5.78444 2.40509 0.654807 0.590084

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.72539 0.00000
supply 0.00000 5.78444

The covariance matrix of the residuals
        demand  supply
demand 3.72539 4.13696
supply 4.13696 5.78444

The correlations of the residuals
         demand   supply
demand 1.000000 0.891179
supply 0.891179 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.8954229  7.5193621 13.28509 8.4377e-15 ***
price       -0.3162988  0.0906774 -3.48818  0.0013998 ** 
income       0.3346356  0.0454218  7.36729 1.8447e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.930127 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.33165 MSE: 3.725391 Root MSE: 1.930127 
Multiple R-Squared: 0.763789 Adjusted R-Squared: 0.735999 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 58.2754312 11.4629099 5.08383 1.4409e-05 ***
price        0.1603666  0.0948839 1.69013   0.100429    
farmPrice    0.2481333  0.0461879 5.37226 6.1488e-06 ***
trend        0.2483023  0.0975178 2.54623   0.015741 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.405087 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551058 MSE: 5.784441 Root MSE: 2.405087 
Multiple R-Squared: 0.654807 Adjusted R-Squared: 0.590084 

> 
> ## *************** iterated WLS estimation (EViews-like) ************
> fitwlsi1e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi1e, useDfSys = TRUE ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 155.883 3.01570 0.709298   0.536785

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.3317 3.72539 1.93013 0.763789 0.735999
supply 20 16 92.5511 5.78444 2.40509 0.654807 0.590084

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.16658 0.00000
supply 0.00000 4.62755

The covariance matrix of the residuals
        demand  supply
demand 3.16658 3.41143
supply 3.41143 4.62755

The correlations of the residuals
         demand   supply
demand 1.000000 0.891179
supply 0.891179 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.8954229  6.9325094 14.40971 8.8818e-16 ***
price       -0.3162988  0.0836004 -3.78346 0.00061936 ***
income       0.3346356  0.0418769  7.99094 3.2219e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.930127 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.33165 MSE: 3.725391 Root MSE: 1.930127 
Multiple R-Squared: 0.763789 Adjusted R-Squared: 0.735999 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 58.2754312 10.2527383 5.68389 2.4491e-06 ***
price        0.1603666  0.0848668 1.88963   0.067620 .  
farmPrice    0.2481333  0.0413117 6.00637 9.4678e-07 ***
trend        0.2483023  0.0872225 2.84677   0.007539 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.405087 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551058 MSE: 5.784441 Root MSE: 2.405087 
Multiple R-Squared: 0.654807 Adjusted R-Squared: 0.590084 

> 
> ## ****** iterated WLS with cross-equation restriction ***************
> fitwlsi2 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi2 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.382 2.34339 0.702772   0.622608

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7412 3.74948 1.93636 0.762261 0.734292
supply 20 16 95.6410 5.97756 2.44490 0.643283 0.576398

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.74949 0.00000
supply 0.00000 5.97754

The covariance matrix of the residuals
        demand  supply
demand 3.74948 4.47988
supply 4.47988 5.97756

The correlations of the residuals
         demand   supply
demand 1.000000 0.946279
supply 0.946279 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6606523  7.5378096 13.22143 5.7732e-15 ***
price       -0.2992655  0.0883868 -3.38586  0.0018046 ** 
income       0.3195755  0.0414037  7.71853 5.6206e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.936358 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.741191 MSE: 3.749482 Root MSE: 1.936358 
Multiple R-Squared: 0.762261 Adjusted R-Squared: 0.734292 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.1830159 11.3486759 4.95062 1.9903e-05 ***
price        0.1642791  0.0963279 1.70542   0.097239 .  
farmPrice    0.2579933  0.0452688 5.69914 2.1186e-06 ***
trend        0.3195755  0.0414037 7.71853 5.6206e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.444905 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.64097 MSE: 5.977561 Root MSE: 2.444905 
Multiple R-Squared: 0.643283 Adjusted R-Squared: 0.576398 

> 
> ## ****** iterated WLS with cross-equation restriction (EViews-like) ********
> fitwlsi2e <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    methodResidCov = "noDfCor", maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi2e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.358 1.60444 0.702817   0.589101

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7851 3.75206 1.93702 0.762097 0.734109
supply 20 16 95.5731 5.97332 2.44404 0.643536 0.576699

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.18926 0.00000
supply 0.00000 4.77864

The covariance matrix of the residuals
        demand  supply
demand 3.18925 3.69268
supply 3.69268 4.77866

The correlations of the residuals
         demand   supply
demand 1.000000 0.945899
supply 0.945899 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6483876  6.9516292 14.33454 6.6613e-16 ***
price       -0.2983756  0.0813903 -3.66599 0.00083377 ***
income       0.3187888  0.0379741  8.39490 8.4107e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.937025 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.785099 MSE: 3.752065 Root MSE: 1.937025 
Multiple R-Squared: 0.762097 Adjusted R-Squared: 0.734109 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.2061134 10.1500042 5.53755 3.4382e-06 ***
price        0.1642359  0.0861290 1.90686   0.065018 .  
farmPrice    0.2578845  0.0404922 6.36874 2.8711e-07 ***
trend        0.3187888  0.0379741 8.39490 8.4107e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.444038 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.573129 MSE: 5.973321 Root MSE: 2.444038 
Multiple R-Squared: 0.643536 Adjusted R-Squared: 0.576699 

> 
> ## ******* iterated WLS with cross-equation restriction via restrict.regMat **********
> fitwlsi3 <- systemfit( system, "WLS", data = Kmenta, restrict.regMat = tc,
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi3 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.382 2.34339 0.702772   0.622608

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7412 3.74948 1.93636 0.762261 0.734292
supply 20 16 95.6410 5.97756 2.44490 0.643283 0.576398

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.74949 0.00000
supply 0.00000 5.97754

The covariance matrix of the residuals
        demand  supply
demand 3.74948 4.47988
supply 4.47988 5.97756

The correlations of the residuals
         demand   supply
demand 1.000000 0.946279
supply 0.946279 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6606523  7.5378096 13.22143 5.7732e-15 ***
price       -0.2992655  0.0883868 -3.38586  0.0018046 ** 
income       0.3195755  0.0414037  7.71853 5.6206e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.936358 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.741191 MSE: 3.749482 Root MSE: 1.936358 
Multiple R-Squared: 0.762261 Adjusted R-Squared: 0.734292 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.1830159 11.3486759 4.95062 1.9903e-05 ***
price        0.1642791  0.0963279 1.70542   0.097239 .  
farmPrice    0.2579933  0.0452688 5.69914 2.1186e-06 ***
trend        0.3195755  0.0414037 7.71853 5.6206e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.444905 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.64097 MSE: 5.977561 Root MSE: 2.444905 
Multiple R-Squared: 0.643283 Adjusted R-Squared: 0.576398 

> 
> ## ******* iterated WLS with cross-equation restriction via restrict.regMat (EViews-like) ***
> fitwlsi3e <- systemfit( system, "WLS", data = Kmenta, restrict.regMat = tc,
+    methodResidCov = "noDfCor", maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi3e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.358 1.60444 0.702817   0.589101

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7851 3.75206 1.93702 0.762097 0.734109
supply 20 16 95.5731 5.97332 2.44404 0.643536 0.576699

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.18926 0.00000
supply 0.00000 4.77864

The covariance matrix of the residuals
        demand  supply
demand 3.18925 3.69268
supply 3.69268 4.77866

The correlations of the residuals
         demand   supply
demand 1.000000 0.945899
supply 0.945899 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6483876  6.9516292 14.33454 6.6613e-16 ***
price       -0.2983756  0.0813903 -3.66599 0.00083377 ***
income       0.3187888  0.0379741  8.39490 8.4107e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.937025 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.785099 MSE: 3.752065 Root MSE: 1.937025 
Multiple R-Squared: 0.762097 Adjusted R-Squared: 0.734109 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.2061134 10.1500042 5.53755 3.4382e-06 ***
price        0.1642359  0.0861290 1.90686   0.065018 .  
farmPrice    0.2578845  0.0404922 6.36874 2.8711e-07 ***
trend        0.3187888  0.0379741 8.39490 8.4107e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.444038 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.573129 MSE: 5.973321 Root MSE: 2.444038 
Multiple R-Squared: 0.643536 Adjusted R-Squared: 0.576699 

> 
> ## ******* iterated WLS with 2 cross-equation restrictions ***********
> fitwlsi4 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi4 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.907 2.50792 0.701793   0.618798

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6305 3.74297 1.93467 0.762674 0.734753
supply 20 16 96.2766 6.01729 2.45302 0.640912 0.573583

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.74297 0.00000
supply 0.00000 6.01728

The covariance matrix of the residuals
        demand  supply
demand 3.74297 4.47377
supply 4.47377 6.01729

The correlations of the residuals
         demand   supply
demand 1.000000 0.942681
supply 0.942681 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9031457   6.0395515 16.70706 < 2.22e-16 ***
price        -0.3159383   0.0647944 -4.87601 2.3319e-05 ***
income        0.3239340   0.0384158  8.43232 6.0118e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.934675 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.630463 MSE: 3.742968 Root MSE: 1.934675 
Multiple R-Squared: 0.762674 Adjusted R-Squared: 0.734753 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9379475  7.9718347 6.76606 7.6728e-08 ***
price        0.1840617  0.0647944 2.84070  0.0074538 ** 
farmPrice    0.2602770  0.0446649 5.82733 1.3038e-06 ***
trend        0.3239340  0.0384158 8.43232 6.0118e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.453016 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.276614 MSE: 6.017288 Root MSE: 2.453016 
Multiple R-Squared: 0.640912 Adjusted R-Squared: 0.573583 

> 
> ## ******* iterated WLS with 2 cross-equation restrictions (EViews-like) *****
> fitwlsi4e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q, maxit = 100,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi4e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.888 1.71819 0.701829   0.586296

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6646 3.74498 1.93519 0.762547 0.734611
supply 20 16 96.2235 6.01397 2.45234 0.641110 0.573819

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.18323 0.00000
supply 0.00000 4.81116

The covariance matrix of the residuals
        demand  supply
demand 3.18323 3.68739
supply 3.68739 4.81117

The correlations of the residuals
         demand   supply
demand 1.000000 0.942237
supply 0.942237 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9661604   5.5170388 18.30079 < 2.22e-16 ***
price        -0.3160149   0.0588500 -5.36983 5.2328e-06 ***
income        0.3233665   0.0351662  9.19537 7.2619e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.935194 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.664581 MSE: 3.744975 Root MSE: 1.935194 
Multiple R-Squared: 0.762547 Adjusted R-Squared: 0.734611 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9595343  7.2114050 7.48253 9.2073e-09 ***
price        0.1839851  0.0588500 3.12634  0.0035514 ** 
farmPrice    0.2601946  0.0399560 6.51203 1.6437e-07 ***
trend        0.3233665  0.0351662 9.19537 7.2619e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452339 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.223451 MSE: 6.013966 Root MSE: 2.452339 
Multiple R-Squared: 0.64111 Adjusted R-Squared: 0.573819 

> 
> ## ***** iterated WLS with 2 cross-equation restrictions via R and restrict.regMat ******
> fitwlsi5 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, maxit = 100,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi5 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.907 2.50792 0.701793   0.618798

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6305 3.74297 1.93467 0.762674 0.734753
supply 20 16 96.2766 6.01729 2.45302 0.640912 0.573583

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.74297 0.00000
supply 0.00000 6.01728

The covariance matrix of the residuals
        demand  supply
demand 3.74297 4.47377
supply 4.47377 6.01729

The correlations of the residuals
         demand   supply
demand 1.000000 0.942681
supply 0.942681 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9031457   6.0395515 16.70706 < 2.22e-16 ***
price        -0.3159383   0.0647944 -4.87601 2.3319e-05 ***
income        0.3239340   0.0384158  8.43232 6.0118e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.934675 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.630463 MSE: 3.742968 Root MSE: 1.934675 
Multiple R-Squared: 0.762674 Adjusted R-Squared: 0.734753 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9379475  7.9718347 6.76606 7.6728e-08 ***
price        0.1840617  0.0647944 2.84070  0.0074538 ** 
farmPrice    0.2602770  0.0446649 5.82733 1.3038e-06 ***
trend        0.3239340  0.0384158 8.43232 6.0118e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.453016 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.276614 MSE: 6.017288 Root MSE: 2.453016 
Multiple R-Squared: 0.640912 Adjusted R-Squared: 0.573583 

> 
> ## *** iterated WLS with 2 cross-equation restrictions via R and restrict.regMat (EViews-like)
> fitwlsi5e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi5e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.888 1.71819 0.701829   0.586296

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6646 3.74498 1.93519 0.762547 0.734611
supply 20 16 96.2235 6.01397 2.45234 0.641110 0.573819

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.18323 0.00000
supply 0.00000 4.81116

The covariance matrix of the residuals
        demand  supply
demand 3.18323 3.68739
supply 3.68739 4.81117

The correlations of the residuals
         demand   supply
demand 1.000000 0.942237
supply 0.942237 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9661604   5.5170388 18.30079 < 2.22e-16 ***
price        -0.3160149   0.0588500 -5.36983 5.2328e-06 ***
income        0.3233665   0.0351662  9.19537 7.2619e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.935194 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.664581 MSE: 3.744975 Root MSE: 1.935194 
Multiple R-Squared: 0.762547 Adjusted R-Squared: 0.734611 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9595343  7.2114050 7.48253 9.2073e-09 ***
price        0.1839851  0.0588500 3.12634  0.0035514 ** 
farmPrice    0.2601946  0.0399560 6.51203 1.6437e-07 ***
trend        0.3233665  0.0351662 9.19537 7.2619e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452339 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.223451 MSE: 6.013966 Root MSE: 2.452339 
Multiple R-Squared: 0.64111 Adjusted R-Squared: 0.573819 

> 
> 
> ## *********** estimations with a single regressor ************
> fitwlsS1 <- systemfit(
+    list( consump ~ price - 1, consump ~ price + trend ), "WLS",
+    data = Kmenta )
Warning message:
Ambiguous method selection for "crossprod", target "dgCMatrix#dtTMatrix" (the first of the signatures shown will be used)
    Matrix#ANY
    ANY#Matrix
 
> print( summary( fitwlsS1 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 36 1120.95 483.606 -1.09042   -1.04806

     N DF     SSR     MSE    RMSE       R2    Adj R2
eq1 20 19 861.449 45.3394 6.73345 -2.21299 -2.212990
eq2 20 17 259.497 15.2645 3.90699  0.03214 -0.081726

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 45.3394  0.0000
eq2  0.0000 15.2645

The covariance matrix of the residuals
        eq1     eq2
eq1 45.3394 14.4388
eq2 14.4388 15.2645

The correlations of the residuals
         eq1      eq2
eq1 1.000000 0.549479
eq2 0.549479 1.000000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1

       Estimate Std. Error t value   Pr(>|t|)    
price 1.0056434  0.0150286 66.9155 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 6.733453 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.448515 MSE: 45.339396 Root MSE: 6.733453 
Multiple R-Squared: -2.21299 Adjusted R-Squared: -2.21299 


WLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ price + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 93.6766604 15.2366971 6.14809 1.0726e-05 ***
price        0.0621990  0.1512505 0.41123    0.68604    
trend        0.0952818  0.1515064 0.62890    0.53778    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 3.906985 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 259.497022 MSE: 15.264531 Root MSE: 3.906985 
Multiple R-Squared: 0.03214 Adjusted R-Squared: -0.081726 

Warning message:
Ambiguous method selection for "crossprod", target "dgCMatrix#dgTMatrix" (the first of the signatures shown will be used)
    Matrix#ANY
    ANY#Matrix
 
> fitwlsS2 <- systemfit(
+    list( consump ~ price - 1, consump ~ trend - 1 ), "WLS",
+    data = Kmenta )
> print( summary( fitwlsS2 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 38 47370.4  110957 -87.3399   -5.28163

     N DF       SSR       MSE     RMSE         R2     Adj R2
eq1 20 19   861.449   45.3394  6.73345   -2.21299   -2.21299
eq2 20 19 46508.922 2447.8380 49.47563 -172.46677 -172.46677

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 45.3394    0.00
eq2  0.0000 2447.84

The covariance matrix of the residuals
         eq1        eq2
eq1 45.33940   -5.15473
eq2 -5.15473 2447.83799

The correlations of the residuals
           eq1        eq2
eq1  1.0000000 -0.0439252
eq2 -0.0439252  1.0000000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1

       Estimate Std. Error t value   Pr(>|t|)    
price 1.0056434  0.0150286 66.9155 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 6.733453 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.448515 MSE: 45.339396 Root MSE: 6.733453 
Multiple R-Squared: -2.21299 Adjusted R-Squared: -2.21299 


WLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.404870   0.923529 8.01802 1.6209e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.47563 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.921896 MSE: 2447.837995 Root MSE: 49.47563 
Multiple R-Squared: -172.466772 Adjusted R-Squared: -172.466772 

> fitwlsS3 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "WLS",
+    data = Kmenta )
> print( summary( fitwlsS3 ) )

systemfit results 
method: WLS 

        N DF   SSR detRCov   OLS-R2 McElroy-R2
system 40 38 93537  108970 -99.0005   -0.97698

     N DF     SSR     MSE    RMSE        R2    Adj R2
eq1 20 19 46508.9 2447.84 49.4756 -172.4668 -172.4668
eq2 20 19 47028.1 2475.16 49.7510  -69.4803  -69.4803

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 2447.84    0.00
eq2    0.00 2475.16

The covariance matrix of the residuals
        eq1     eq2
eq1 2447.84 2439.23
eq2 2439.23 2475.16

The correlations of the residuals
        eq1     eq2
eq1 1.00000 0.98828
eq2 0.98828 1.00000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.404870   0.923529 8.01802 1.6209e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.47563 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.921896 MSE: 2447.837995 Root MSE: 49.47563 
Multiple R-Squared: -172.466772 Adjusted R-Squared: -172.466772 


WLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.318426   0.928669 7.88055 2.0940e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.751015 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47028.107165 MSE: 2475.163535 Root MSE: 49.751015 
Multiple R-Squared: -69.480332 Adjusted R-Squared: -69.480332 

> fitwlsS4 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "WLS",
+    data = Kmenta, restrict.matrix = matrix( c( 1, -1 ), nrow = 1 ) )
> print( summary( fitwlsS4 ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov  OLS-R2 McElroy-R2
system 40 39 93547.8  111736 -99.012   -1.02688

     N DF     SSR     MSE    RMSE        R2    Adj R2
eq1 20 19 46514.2 2448.12 49.4785 -172.4865 -172.4865
eq2 20 19 47033.5 2475.45 49.7539  -69.4885  -69.4885

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 2448.12    0.00
eq2    0.00 2475.45

The covariance matrix of the residuals
        eq1     eq2
eq1 2448.12 2438.95
eq2 2438.95 2475.45

The correlations of the residuals
         eq1      eq2
eq1 1.000000 0.988345
eq2 0.988345 1.000000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.361888   0.654881 11.2416 8.4155e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.47845 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46514.224144 MSE: 2448.11706 Root MSE: 49.47845 
Multiple R-Squared: -172.486548 Adjusted R-Squared: -172.486548 


WLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value   Pr(>|t|)    
trend 7.361888   0.654881 11.2416 8.4155e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.753883 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47033.52844 MSE: 2475.448865 Root MSE: 49.753883 
Multiple R-Squared: -69.488457 Adjusted R-Squared: -69.488457 

> fitwlsS5 <- systemfit(
+    list( consump ~ 1, price ~ 1 ), "WLS",
+    data = Kmenta )
> print( summary( fitwlsS5) )

systemfit results 
method: WLS 

        N DF     SSR detRCov OLS-R2 McElroy-R2
system 40 38 935.366 490.798      0          0

     N DF     SSR     MSE    RMSE R2 Adj R2
eq1 20 19 268.114 14.1113 3.75650  0      0
eq2 20 19 667.251 35.1185 5.92609  0      0

The covariance matrix of the residuals used for estimation
        eq1     eq2
eq1 14.1113  0.0000
eq2  0.0000 35.1185

The covariance matrix of the residuals
         eq1      eq2
eq1 14.11128  2.18374
eq2  2.18374 35.11850

The correlations of the residuals
          eq1       eq2
eq1 1.0000000 0.0980957
eq2 0.0980957 1.0000000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ 1

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 100.898200   0.839979  120.12 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 3.756498 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 268.114299 MSE: 14.111279 Root MSE: 3.756498 
Multiple R-Squared: 0 Adjusted R-Squared: 0 


WLS estimates for 'eq2' (equation 2)
Model Formula: price ~ 1

             Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 100.01905    1.32511 75.4796 < 2.22e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 5.926086 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 667.251499 MSE: 35.1185 Root MSE: 5.926086 
Multiple R-Squared: 0 Adjusted R-Squared: 0 

> 
> 
> ## **************** shorter summaries **********************
> print( summary( fitwls1 ), residCov = FALSE, equations = FALSE )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 155.883 4.43485 0.709298   0.557559

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.3317 3.72539 1.93013 0.763789 0.735999
supply 20 16 92.5511 5.78444 2.40509 0.654807 0.590084


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 99.8954229  7.5193621 13.28509 2.0906e-10 ***
demand_price       -0.3162988  0.0906774 -3.48818 0.00281529 ** 
demand_income       0.3346356  0.0454218  7.36729 1.0999e-06 ***
supply_(Intercept) 58.2754312 11.4629099  5.08383 0.00011056 ***
supply_price        0.1603666  0.0948839  1.69013 0.11038810    
supply_farmPrice    0.2481333  0.0461879  5.37226 6.2274e-05 ***
supply_trend        0.2483023  0.0975178  2.54623 0.02156713 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitwls2e, useDfSys = FALSE, residCov = FALSE ),
+    equations = FALSE )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.354 1.60653 0.702824   0.588817

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7936 3.75256 1.93715 0.762066 0.734073
supply 20 16 95.5605 5.97253 2.44388 0.643583 0.576755


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 99.6460895  6.9733877 14.28948 6.6701e-11 ***
demand_price       -0.2982089  0.0816218 -3.65354  0.0019665 ** 
demand_income       0.3186413  0.0380534  8.37353 1.9501e-07 ***
supply_(Intercept) 56.2104413 10.1247837  5.55177 4.3796e-05 ***
supply_price        0.1642278  0.0859104  1.91162  0.0740056 .  
supply_farmPrice    0.2578641  0.0403925  6.38396 9.0550e-06 ***
supply_trend        0.3186413  0.0380534  8.37353 3.0525e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitwls3 ), residCov = FALSE )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.377 2.34660 0.702781   0.622292

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7499 3.74999 1.93649 0.762229 0.734256
supply 20 16 95.6272 5.97670 2.44473 0.643334 0.576459


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

              Estimate Std. Error  t value   Pr(>|t|)    
(Intercept) 99.6581706  7.5640025 13.17532 6.4393e-15 ***
price       -0.2990854  0.0886668 -3.37314   0.001868 ** 
income       0.3194163  0.0415015  7.69651 5.9845e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.93649 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.749895 MSE: 3.749994 Root MSE: 1.93649 
Multiple R-Squared: 0.762229 Adjusted R-Squared: 0.734256 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 56.1876896 11.3165129 4.96511 1.9062e-05 ***
price        0.1642703  0.0960493 1.71027   0.096328 .  
farmPrice    0.2579713  0.0451416 5.71471 2.0221e-06 ***
trend        0.3194163  0.0415015 7.69651 5.9845e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.444729 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.627182 MSE: 5.976699 Root MSE: 2.444729 
Multiple R-Squared: 0.643334 Adjusted R-Squared: 0.576459 

> 
> print( summary( fitwls4e, residCov = FALSE, equations = FALSE ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.885 1.72025 0.701834   0.586077

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6702 3.74531 1.93528 0.762526 0.734588
supply 20 16 96.2150 6.01344 2.45223 0.641142 0.573856


Coefficients:
                      Estimate  Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 100.9762461   5.5234202 18.28147 < 2.22e-16 ***
demand_price        -0.3160276   0.0588646 -5.36872 5.2505e-06 ***
demand_income        0.3232761   0.0352186  9.17914 7.5899e-11 ***
supply_(Intercept)  53.9630298   7.2088557  7.48566 9.1234e-09 ***
supply_price         0.1839724   0.0588646  3.12535  0.0035607 ** 
supply_farmPrice     0.2601814   0.0398735  6.52517 1.5800e-07 ***
supply_trend         0.3232761   0.0352186  9.17914 7.5899e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitwls5, useDfSys = FALSE ), residCov = FALSE )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.904 2.51108 0.701799   0.618554

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6361 3.74330 1.93476 0.762653 0.734730
supply 20 16 96.2676 6.01672 2.45290 0.640946 0.573623


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9137976   6.0473974 16.68714 5.6413e-12 ***
price        -0.3159508   0.0648152 -4.87464 0.00014256 ***
income        0.3238376   0.0384796  8.41583 1.8185e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.934761 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.636116 MSE: 3.743301 Root MSE: 1.934761 
Multiple R-Squared: 0.762653 Adjusted R-Squared: 0.73473 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9415650  7.9686947 6.76918 4.5068e-06 ***
price        0.1840492  0.0648152 2.83960   0.011833 *  
farmPrice    0.2602630  0.0445606 5.84065 2.5074e-05 ***
trend        0.3238376  0.0384796 8.41583 2.8561e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452901 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.267574 MSE: 6.016723 Root MSE: 2.452901 
Multiple R-Squared: 0.640946 Adjusted R-Squared: 0.573623 

> 
> print( summary( fitwlsi1e, useDfSys = TRUE, equations = FALSE ) )

systemfit results 
method: WLS 

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 33 155.883 3.01570 0.709298   0.536785

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.3317 3.72539 1.93013 0.763789 0.735999
supply 20 16 92.5511 5.78444 2.40509 0.654807 0.590084

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.16658 0.00000
supply 0.00000 4.62755

The covariance matrix of the residuals
        demand  supply
demand 3.16658 3.41143
supply 3.41143 4.62755

The correlations of the residuals
         demand   supply
demand 1.000000 0.891179
supply 0.891179 1.000000


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 99.8954229  6.9325094 14.40971 8.8818e-16 ***
demand_price       -0.3162988  0.0836004 -3.78346 0.00061936 ***
demand_income       0.3346356  0.0418769  7.99094 3.2219e-09 ***
supply_(Intercept) 58.2754312 10.2527383  5.68389 2.4491e-06 ***
supply_price        0.1603666  0.0848668  1.88963 0.06761989 .  
supply_farmPrice    0.2481333  0.0413117  6.00637 9.4678e-07 ***
supply_trend        0.2483023  0.0872225  2.84677 0.00753894 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitwlsi2, equations = FALSE, residCov = FALSE ),
+    residCov = TRUE )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.382 2.34339 0.702772   0.622608

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7412 3.74948 1.93636 0.762261 0.734292
supply 20 16 95.6410 5.97756 2.44490 0.643283 0.576398

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.74949 0.00000
supply 0.00000 5.97754

The covariance matrix of the residuals
        demand  supply
demand 3.74948 4.47988
supply 4.47988 5.97756

The correlations of the residuals
         demand   supply
demand 1.000000 0.946279
supply 0.946279 1.000000


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 99.6606523  7.5378096 13.22143 5.7732e-15 ***
demand_price       -0.2992655  0.0883868 -3.38586  0.0018046 ** 
demand_income       0.3195755  0.0414037  7.71853 5.6206e-09 ***
supply_(Intercept) 56.1830159 11.3486759  4.95062 1.9903e-05 ***
supply_price        0.1642791  0.0963279  1.70542  0.0972386 .  
supply_farmPrice    0.2579933  0.0452688  5.69914 2.1186e-06 ***
supply_trend        0.3195755  0.0414037  7.71853 5.6206e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitwlsi3e ), equations = FALSE, residCov = FALSE )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 34 159.358 1.60444 0.702817   0.589101

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.7851 3.75206 1.93702 0.762097 0.734109
supply 20 16 95.5731 5.97332 2.44404 0.643536 0.576699


Coefficients:
                     Estimate Std. Error  t value   Pr(>|t|)    
demand_(Intercept) 99.6483876  6.9516292 14.33454 6.6613e-16 ***
demand_price       -0.2983756  0.0813903 -3.66599 0.00083377 ***
demand_income       0.3187888  0.0379741  8.39490 8.4107e-10 ***
supply_(Intercept) 56.2061134 10.1500042  5.53755 3.4382e-06 ***
supply_price        0.1642359  0.0861290  1.90686 0.06501771 .  
supply_farmPrice    0.2578845  0.0404922  6.36874 2.8711e-07 ***
supply_trend        0.3187888  0.0379741  8.39490 8.4107e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
> 
> print( summary( fitwlsi4, equations = FALSE ), equations = TRUE )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.907 2.50792 0.701793   0.618798

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6305 3.74297 1.93467 0.762674 0.734753
supply 20 16 96.2766 6.01729 2.45302 0.640912 0.573583

The covariance matrix of the residuals used for estimation
        demand  supply
demand 3.74297 0.00000
supply 0.00000 6.01728

The covariance matrix of the residuals
        demand  supply
demand 3.74297 4.47377
supply 4.47377 6.01729

The correlations of the residuals
         demand   supply
demand 1.000000 0.942681
supply 0.942681 1.000000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9031457   6.0395515 16.70706 < 2.22e-16 ***
price        -0.3159383   0.0647944 -4.87601 2.3319e-05 ***
income        0.3239340   0.0384158  8.43232 6.0118e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.934675 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.630463 MSE: 3.742968 Root MSE: 1.934675 
Multiple R-Squared: 0.762674 Adjusted R-Squared: 0.734753 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9379475  7.9718347 6.76606 7.6728e-08 ***
price        0.1840617  0.0647944 2.84070  0.0074538 ** 
farmPrice    0.2602770  0.0446649 5.82733 1.3038e-06 ***
trend        0.3239340  0.0384158 8.43232 6.0118e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.453016 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.276614 MSE: 6.017288 Root MSE: 2.453016 
Multiple R-Squared: 0.640912 Adjusted R-Squared: 0.573583 

> 
> print( summary( fitwlsi5e, useDfSys = FALSE, residCov = FALSE ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF     SSR detRCov   OLS-R2 McElroy-R2
system 40 35 159.888 1.71819 0.701829   0.586296

        N DF     SSR     MSE    RMSE       R2   Adj R2
demand 20 17 63.6646 3.74498 1.93519 0.762547 0.734611
supply 20 16 96.2235 6.01397 2.45234 0.641110 0.573819


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

               Estimate  Std. Error  t value   Pr(>|t|)    
(Intercept) 100.9661604   5.5170388 18.30079 1.2705e-12 ***
price        -0.3160149   0.0588500 -5.36983 5.0927e-05 ***
income        0.3233665   0.0351662  9.19537 5.2178e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1.935194 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.664581 MSE: 3.744975 Root MSE: 1.935194 
Multiple R-Squared: 0.762547 Adjusted R-Squared: 0.734611 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

              Estimate Std. Error t value   Pr(>|t|)    
(Intercept) 53.9595343  7.2114050 7.48253 1.3058e-06 ***
price        0.1839851  0.0588500 3.12634  0.0065104 ** 
farmPrice    0.2601946  0.0399560 6.51203 7.1642e-06 ***
trend        0.3233665  0.0351662 9.19537 8.7098e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 2.452339 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.223451 MSE: 6.013966 Root MSE: 2.452339 
Multiple R-Squared: 0.64111 Adjusted R-Squared: 0.573819 

> 
> 
> ## ****************** residuals **************************
> print( residuals( fitwls1 ) )
       demand     supply
1   1.0744708 -0.4442544
2  -0.3902787 -0.8955081
3   2.6246816  1.9651334
4   1.8024842  1.1342118
5   1.9455436  1.5138013
6   1.1745134  0.6803121
7   1.5302384  1.5689661
8  -2.9327287 -4.4073714
9  -1.3654672 -2.5989581
10  2.0307798  2.4694121
11 -0.1488821 -0.5982785
12 -1.9542622 -1.6973834
13 -1.1209171 -1.0640179
14 -0.2200033  0.9701222
15  1.4866729  3.1590873
16 -3.7006906 -3.8655164
17 -1.2730806 -0.2646900
18 -2.0022429 -2.4488950
19  1.7380247  3.1097065
20 -0.2988561  1.7141205
> print( residuals( fitwls1$eq[[ 2 ]] ) )
         1          2          3          4          5          6          7 
-0.4442544 -0.8955081  1.9651334  1.1342118  1.5138013  0.6803121  1.5689661 
         8          9         10         11         12         13         14 
-4.4073714 -2.5989581  2.4694121 -0.5982785 -1.6973834 -1.0640179  0.9701222 
        15         16         17         18         19         20 
 3.1590873 -3.8655164 -0.2646900 -2.4488950  3.1097065  1.7141205 
> 
> print( residuals( fitwls2e ) )
        demand     supply
1   0.90687055  0.2094125
2  -0.46602976 -0.3381010
3   2.54953226  2.4554025
4   1.73195200  1.5597373
5   2.01827687  1.7705235
6   1.23212191  0.8863774
7   1.60190665  1.7237761
8  -2.85436515 -4.3780446
9  -1.31578571 -2.5971530
10  2.05169847  2.4998454
11 -0.38227712 -0.4546305
12 -2.26226938 -1.5254828
13 -1.38006367 -1.0006951
14 -0.30807510  0.8769642
15  1.66432237  2.8062595
16 -3.55132820 -4.3278219
17 -1.04663972 -0.8047013
18 -1.96474666 -2.9517308
19  1.84457314  2.5609017
20 -0.06967376  1.0291606
> print( residuals( fitwls2e$eq[[ 1 ]] ) )
          1           2           3           4           5           6 
 0.90687055 -0.46602976  2.54953226  1.73195200  2.01827687  1.23212191 
          7           8           9          10          11          12 
 1.60190665 -2.85436515 -1.31578571  2.05169847 -0.38227712 -2.26226938 
         13          14          15          16          17          18 
-1.38006367 -0.30807510  1.66432237 -3.55132820 -1.04663972 -1.96474666 
         19          20 
 1.84457314 -0.06967376 
> 
> print( residuals( fitwls3 ) )
        demand     supply
1   0.91499142  0.2166145
2  -0.46235933 -0.3319596
3   2.55317353  2.4608042
4   1.73536955  1.5644257
5   2.01475267  1.7733520
6   1.22933056  0.8886478
7   1.59843405  1.7254817
8  -2.85816216 -4.3777215
9  -1.31819296 -2.5971331
10  2.05068488  2.5001807
11 -0.37096825 -0.4530478
12 -2.24734526 -1.5235889
13 -1.36750703 -0.9999974
14 -0.30380768  0.8759378
15  1.65571458  2.8023721
16 -3.55856538 -4.3329155
17 -1.05761164 -0.8106510
18 -1.96656349 -2.9572709
19  1.83941046  2.5548551
20 -0.08077852  1.0216138
> print( residuals( fitwls3$eq[[ 2 ]] ) )
         1          2          3          4          5          6          7 
 0.2166145 -0.3319596  2.4608042  1.5644257  1.7733520  0.8886478  1.7254817 
         8          9         10         11         12         13         14 
-4.3777215 -2.5971331  2.5001807 -0.4530478 -1.5235889 -0.9999974  0.8759378 
        15         16         17         18         19         20 
 2.8023721 -4.3329155 -0.8106510 -2.9572709  2.5548551  1.0216138 
> 
> print( residuals( fitwls4e ) )
        demand     supply
1   0.95926014  0.2442554
2  -0.39069147 -0.3882554
3   2.61427014  2.4169815
4   1.80882154  1.4978524
5   1.97182002  1.8030126
6   1.20834693  0.8915284
7   1.59430587  1.6985284
8  -2.81741017 -4.4906555
9  -1.37511934 -2.5476339
10  1.93507467  2.6665273
11 -0.40185147 -0.2838299
12 -2.18833458 -1.4434426
13 -1.26863528 -1.0097105
14 -0.29843876  0.9209619
15  1.55121718  2.8690017
16 -3.61433102 -4.3417601
17 -1.28230696 -0.6000123
18 -1.92534398 -3.0558510
19  1.88601285  2.4249498
20  0.03333369  0.7275518
> print( residuals( fitwls4e$eq[[ 1 ]] ) )
          1           2           3           4           5           6 
 0.95926014 -0.39069147  2.61427014  1.80882154  1.97182002  1.20834693 
          7           8           9          10          11          12 
 1.59430587 -2.81741017 -1.37511934  1.93507467 -0.40185147 -2.18833458 
         13          14          15          16          17          18 
-1.26863528 -0.29843876  1.55121718 -3.61433102 -1.28230696 -1.92534398 
         19          20 
 1.88601285  0.03333369 
> 
> print( residuals( fitwls5 ) )
        demand     supply
1   0.96492777  0.2494542
2  -0.39105396 -0.3840106
3   2.61447668  2.4207285
4   1.80810356  1.5010373
5   1.97070316  1.8050988
6   1.20672527  0.8931535
7   1.59104447  1.6996806
8  -2.82353846 -4.4906916
9  -1.37431993 -2.5475030
10  1.94059848  2.6671586
11 -0.38872134 -0.2823026
12 -2.17665414 -1.4419035
13 -1.26159392 -1.0092361
14 -0.29444764  0.9203364
15  1.54846863  2.8663879
16 -3.61845848 -4.3454118
17 -1.28063129 -0.6037565
18 -1.92950574 -3.0600326
19  1.87817892  2.4203333
20  0.01569795  0.7214788
> print( residuals( fitwls5$eq[[ 2 ]] ) )
         1          2          3          4          5          6          7 
 0.2494542 -0.3840106  2.4207285  1.5010373  1.8050988  0.8931535  1.6996806 
         8          9         10         11         12         13         14 
-4.4906916 -2.5475030  2.6671586 -0.2823026 -1.4419035 -1.0092361  0.9203364 
        15         16         17         18         19         20 
 2.8663879 -4.3454118 -0.6037565 -3.0600326  2.4203333  0.7214788 
> 
> print( residuals( fitwlsi1e ) )
       demand     supply
1   1.0744708 -0.4442544
2  -0.3902787 -0.8955081
3   2.6246816  1.9651334
4   1.8024842  1.1342118
5   1.9455436  1.5138013
6   1.1745134  0.6803121
7   1.5302384  1.5689661
8  -2.9327287 -4.4073714
9  -1.3654672 -2.5989581
10  2.0307798  2.4694121
11 -0.1488821 -0.5982785
12 -1.9542622 -1.6973834
13 -1.1209171 -1.0640179
14 -0.2200033  0.9701222
15  1.4866729  3.1590873
16 -3.7006906 -3.8655164
17 -1.2730806 -0.2646900
18 -2.0022429 -2.4488950
19  1.7380247  3.1097065
20 -0.2988561  1.7141205
> print( residuals( fitwlsi1e$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 1.0744708 -0.3902787  2.6246816  1.8024842  1.9455436  1.1745134  1.5302384 
         8          9         10         11         12         13         14 
-2.9327287 -1.3654672  2.0307798 -0.1488821 -1.9542622 -1.1209171 -0.2200033 
        15         16         17         18         19         20 
 1.4866729 -3.7006906 -1.2730806 -2.0022429  1.7380247 -0.2988561 
> 
> print( residuals( fitwlsi2 ) )
        demand     supply
1   0.91665962  0.2180940
2  -0.46160535 -0.3306980
3   2.55392152  2.4619138
4   1.73607159  1.5653888
5   2.01402872  1.7739331
6   1.22875715  0.8891142
7   1.59772070  1.7258321
8  -2.85894215 -4.3776551
9  -1.31868747 -2.5971291
10  2.05047667  2.5002496
11 -0.36864516 -0.4527227
12 -2.24427953 -1.5231998
13 -1.36492763 -0.9998541
14 -0.30293107  0.8757270
15  1.65394636  2.8015735
16 -3.56005205 -4.3339618
17 -1.05986550 -0.8118732
18 -1.96693671 -2.9584090
19  1.83834994  2.5536130
20 -0.08305967  1.0200636
> print( residuals( fitwlsi2$eq[[ 2 ]] ) )
         1          2          3          4          5          6          7 
 0.2180940 -0.3306980  2.4619138  1.5653888  1.7739331  0.8891142  1.7258321 
         8          9         10         11         12         13         14 
-4.3776551 -2.5971291  2.5002496 -0.4527227 -1.5231998 -0.9998541  0.8757270 
        15         16         17         18         19         20 
 2.8015735 -4.3339618 -0.8118732 -2.9584090  2.5536130  1.0200636 
> 
> print( residuals( fitwlsi3e ) )
        demand     supply
1   0.90841531  0.2107825
2  -0.46533156 -0.3369327
3   2.55022490  2.4564300
4   1.73260209  1.5606292
5   2.01760649  1.7710616
6   1.23159093  0.8868093
7   1.60124609  1.7241005
8  -2.85508742 -4.3779831
9  -1.31624362 -2.5971492
10  2.05150567  2.4999092
11 -0.38012594 -0.4543294
12 -2.25943049 -1.5251226
13 -1.37767513 -1.0005623
14 -0.30726334  0.8767690
15  1.66268499  2.8055200
16 -3.55270487 -4.3287908
17 -1.04872681 -0.8058330
18 -1.96509226 -2.9527846
19  1.84359109  2.5597515
20 -0.07178612  1.0277250
> print( residuals( fitwlsi3e$eq[[ 1 ]] ) )
          1           2           3           4           5           6 
 0.90841531 -0.46533156  2.55022490  1.73260209  2.01760649  1.23159093 
          7           8           9          10          11          12 
 1.60124609 -2.85508742 -1.31624362  2.05150567 -0.38012594 -2.25943049 
         13          14          15          16          17          18 
-1.37767513 -0.30726334  1.66268499 -3.55270487 -1.04872681 -1.96509226 
         19          20 
 1.84359109 -0.07178612 
> 
> print( residuals( fitwlsi4 ) )
        demand     supply
1   0.96590007  0.2503461
2  -0.39111362 -0.3832799
3   2.61451413  2.4213734
4   1.80798307  1.5015863
5   1.97051040  1.8054561
6   1.20644679  0.8934325
7   1.59048570  1.6998793
8  -2.82458677 -4.4906943
9  -1.37418493 -2.5474820
10  1.94154072  2.6672619
11 -0.38647337 -0.2820455
12 -2.17465143 -1.4416416
13 -1.26038447 -1.0091543
14 -0.29376383  0.9202276
15  1.54799430  2.8659370
16 -3.61916735 -4.3460386
17 -1.28035189 -0.6044060
18 -1.93021720 -3.0607476
19  1.87683864  2.4195446
20  0.01268104  0.7204450
> print( residuals( fitwlsi4$eq[[ 2 ]] ) )
         1          2          3          4          5          6          7 
 0.2503461 -0.3832799  2.4213734  1.5015863  1.8054561  0.8934325  1.6998793 
         8          9         10         11         12         13         14 
-4.4906943 -2.5474820  2.6672619 -0.2820455 -1.4416416 -1.0091543  0.9202276 
        15         16         17         18         19         20 
 2.8659370 -4.3460386 -0.6044060 -3.0607476  2.4195446  0.7204450 
> 
> print( residuals( fitwlsi5e ) )
       demand     supply
1   0.9601718  0.2450916
2  -0.3907514 -0.3875743
3   2.6143020  2.4175829
4   1.8087043  1.4983630
5   1.9716411  1.8033486
6   1.2080863  0.8917896
7   1.5937808  1.6987131
8  -2.8183979 -4.4906636
9  -1.3749893 -2.5476118
10  1.9359668  2.6666321
11 -0.3997364 -0.2835809
12 -2.1864550 -1.4431935
13 -1.2675036 -1.0096344
14 -0.2977962  0.9208623
15  1.5507769  2.8685829
16 -3.6149944 -4.3423473
17 -1.2820321 -0.6006098
18 -1.9260151 -3.0565251
19  1.8847503  2.4242051
20  0.0304912  0.7265696
> print( residuals( fitwlsi5e$eq[[ 1 ]] ) )
         1          2          3          4          5          6          7 
 0.9601718 -0.3907514  2.6143020  1.8087043  1.9716411  1.2080863  1.5937808 
         8          9         10         11         12         13         14 
-2.8183979 -1.3749893  1.9359668 -0.3997364 -2.1864550 -1.2675036 -0.2977962 
        15         16         17         18         19         20 
 1.5507769 -3.6149944 -1.2820321 -1.9260151  1.8847503  0.0304912 
> 
> 
> ## *************** coefficients *********************
> print( round( coef( fitwls1e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         99.895423          -0.316299           0.334636          58.275431 
      supply_price   supply_farmPrice       supply_trend 
          0.160367           0.248133           0.248302 
> print( round( coef( fitwls1e$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
  99.895423   -0.316299    0.334636 
> 
> print( round( coef( fitwlsi2 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         99.660652          -0.299265           0.319576          56.183016 
      supply_price   supply_farmPrice       supply_trend 
          0.164279           0.257993           0.319576 
> print( round( coef( fitwlsi2$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  56.183016    0.164279    0.257993    0.319576 
> 
> print( round( coef( fitwls3e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
         99.646089          -0.298209           0.318641          56.210441 
      supply_price   supply_farmPrice       supply_trend 
          0.164228           0.257864           0.318641 
> print( round( coef( fitwls3e, modified.regMat = TRUE ), digits = 6 ) )
       C1        C2        C3        C4        C5        C6 
99.646089 -0.298209  0.318641 56.210441  0.164228  0.257864 
> print( round( coef( fitwls3e$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
  99.646089   -0.298209    0.318641 
> 
> print( round( coef( fitwls4 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
        100.913798          -0.315951           0.323838          53.941565 
      supply_price   supply_farmPrice       supply_trend 
          0.184049           0.260263           0.323838 
> print( round( coef( fitwls4$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
  53.941565    0.184049    0.260263    0.323838 
> 
> print( round( coef( fitwlsi5 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
        100.903146          -0.315938           0.323934          53.937948 
      supply_price   supply_farmPrice       supply_trend 
          0.184062           0.260277           0.323934 
> print( round( coef( fitwlsi5, modified.regMat = TRUE ), digits = 6 ) )
        C1         C2         C3         C4         C5         C6 
100.903146  -0.315938   0.323934  53.937948   0.184062   0.260277 
> print( round( coef( fitwlsi5$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
 100.903146   -0.315938    0.323934 
> 
> 
> ## *************** coefficients with stats *********************
> print( round( coef( summary( fitwls1e ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 99.895423   6.932509 14.409706 0.000000
demand_price       -0.316299   0.083600 -3.783459 0.001483
demand_income       0.334636   0.041877  7.990943 0.000000
supply_(Intercept) 58.275431  10.252738  5.683889 0.000034
supply_price        0.160367   0.084867  1.889628 0.077067
supply_farmPrice    0.248133   0.041312  6.006373 0.000018
supply_trend        0.248302   0.087223  2.846768 0.011659
> print( round( coef( summary( fitwls1e$eq[[ 1 ]] ) ), digits = 6 ) )
             Estimate Std. Error   t value Pr(>|t|)
(Intercept) 99.895423   6.932509 14.409706 0.000000
price       -0.316299   0.083600 -3.783459 0.001483
income       0.334636   0.041877  7.990943 0.000000
> 
> print( round( coef( summary( fitwlsi2 ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 99.660652   7.537810 13.221434 0.000000
demand_price       -0.299265   0.088387 -3.385863 0.001805
demand_income       0.319576   0.041404  7.718529 0.000000
supply_(Intercept) 56.183016  11.348676  4.950623 0.000020
supply_price        0.164279   0.096328  1.705416 0.097239
supply_farmPrice    0.257993   0.045269  5.699140 0.000002
supply_trend        0.319576   0.041404  7.718529 0.000000
> print( round( coef( summary( fitwlsi2$eq[[ 2 ]] ) ), digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 56.183016  11.348676 4.950623 0.000020
price        0.164279   0.096328 1.705416 0.097239
farmPrice    0.257993   0.045269 5.699140 0.000002
trend        0.319576   0.041404 7.718529 0.000000
> 
> print( round( coef( summary( fitwls3e ) ), digits = 6 ) )
                    Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 99.646089   6.973388 14.289481 0.000000
demand_price       -0.298209   0.081622 -3.653543 0.000863
demand_income       0.318641   0.038053  8.373531 0.000000
supply_(Intercept) 56.210441  10.124784  5.551767 0.000003
supply_price        0.164228   0.085910  1.911618 0.064384
supply_farmPrice    0.257864   0.040393  6.383959 0.000000
supply_trend        0.318641   0.038053  8.373531 0.000000
> print( round( coef( summary( fitwls3e ), modified.regMat = TRUE ), digits = 6 ) )
    Estimate Std. Error   t value Pr(>|t|)
C1 99.646089   6.973388 14.289481 0.000000
C2 -0.298209   0.081622 -3.653543 0.000863
C3  0.318641   0.038053  8.373531 0.000000
C4 56.210441  10.124784  5.551767 0.000003
C5  0.164228   0.085910  1.911618 0.064384
C6  0.257864   0.040393  6.383959 0.000000
> print( round( coef( summary( fitwls3e$eq[[ 1 ]] ) ), digits = 6 ) )
             Estimate Std. Error   t value Pr(>|t|)
(Intercept) 99.646089   6.973388 14.289481 0.000000
price       -0.298209   0.081622 -3.653543 0.000863
income       0.318641   0.038053  8.373531 0.000000
> 
> print( round( coef( summary( fitwls4, useDfSys = FALSE ) ), digits = 6 ) )
                     Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 100.913798   6.047397 16.687145 0.000000
demand_price        -0.315951   0.064815 -4.874640 0.000143
demand_income        0.323838   0.038480  8.415831 0.000000
supply_(Intercept)  53.941565   7.968695  6.769185 0.000005
supply_price         0.184049   0.064815  2.839599 0.011833
supply_farmPrice     0.260263   0.044561  5.840652 0.000025
supply_trend         0.323838   0.038480  8.415831 0.000000
> print( round( coef( summary( fitwls4$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
             Estimate Std. Error  t value Pr(>|t|)
(Intercept) 53.941565   7.968695 6.769185 0.000005
price        0.184049   0.064815 2.839599 0.011833
farmPrice    0.260263   0.044561 5.840652 0.000025
trend        0.323838   0.038480 8.415831 0.000000
> 
> print( round( coef( summary( fitwlsi5, useDfSys = FALSE ) ), digits = 6 ) )
                     Estimate Std. Error   t value Pr(>|t|)
demand_(Intercept) 100.903146   6.039552 16.707059 0.000000
demand_price        -0.315938   0.064794 -4.876008 0.000142
demand_income        0.323934   0.038416  8.432317 0.000000
supply_(Intercept)  53.937948   7.971835  6.766064 0.000005
supply_price         0.184062   0.064794  2.840703 0.011806
supply_farmPrice     0.260277   0.044665  5.827325 0.000026
supply_trend         0.323934   0.038416  8.432317 0.000000
> print( round( coef( summary( fitwlsi5, useDfSys = FALSE ),
+    modified.regMat = TRUE ), digits = 6 ) )
     Estimate Std. Error   t value Pr(>|t|)
C1 100.903146   6.039552 16.707059       NA
C2  -0.315938   0.064794 -4.876008       NA
C3   0.323934   0.038416  8.432317       NA
C4  53.937948   7.971835  6.766064       NA
C5   0.184062   0.064794  2.840703       NA
C6   0.260277   0.044665  5.827325       NA
> print( round( coef( summary( fitwlsi5$eq[[ 1 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
              Estimate Std. Error   t value Pr(>|t|)
(Intercept) 100.903146   6.039552 16.707059 0.000000
price        -0.315938   0.064794 -4.876008 0.000142
income        0.323934   0.038416  8.432317 0.000000
> 
> 
> ## *********** variance covariance matrix of the coefficients *******
> print( round( vcov( fitwls1e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          48.059686    -0.505581      0.027338
demand_price                -0.505581     0.006989     -0.001983
demand_income                0.027338    -0.001983      0.001754
supply_(Intercept)           0.000000     0.000000      0.000000
supply_price                 0.000000     0.000000      0.000000
supply_farmPrice             0.000000     0.000000      0.000000
supply_trend                 0.000000     0.000000      0.000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000     0.000000         0.000000
demand_price                 0.000000     0.000000         0.000000
demand_income                0.000000     0.000000         0.000000
supply_(Intercept)         105.118642    -0.790000        -0.243489
supply_price                -0.790000     0.007202         0.000675
supply_farmPrice            -0.243489     0.000675         0.001707
supply_trend                -0.223347     0.000418         0.001052
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.223347
supply_price           0.000418
supply_farmPrice       0.001052
supply_trend           0.007608
> print( round( vcov( fitwls1e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   48.059686 -0.505581  0.027338
price         -0.505581  0.006989 -0.001983
income         0.027338 -0.001983  0.001754
> 
> print( round( vcov( fitwls2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          57.214133    -0.596328      0.026850
demand_price                -0.596328     0.007862     -0.001948
demand_income                0.026850    -0.001948      0.001722
supply_(Intercept)          -0.788252     0.057190     -0.050565
supply_price                 0.001474    -0.000107      0.000095
supply_farmPrice             0.003714    -0.000269      0.000238
supply_trend                 0.026850    -0.001948      0.001722
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -0.788252     0.001474         0.003714
demand_price                 0.057190    -0.000107        -0.000269
demand_income               -0.050565     0.000095         0.000238
supply_(Intercept)         128.063465    -1.001596        -0.280017
supply_price                -1.001596     0.009225         0.000806
supply_farmPrice            -0.280017     0.000806         0.002038
supply_trend                -0.050565     0.000095         0.000238
                   supply_trend
demand_(Intercept)     0.026850
demand_price          -0.001948
demand_income          0.001722
supply_(Intercept)    -0.050565
supply_price           0.000095
supply_farmPrice       0.000238
supply_trend           0.001722
> print( round( vcov( fitwls2$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  128.063465 -1.001596 -0.280017 -0.050565
price         -1.001596  0.009225  0.000806  0.000095
farmPrice     -0.280017  0.000806  0.002038  0.000238
trend         -0.050565  0.000095  0.000238  0.001722
> 
> print( round( vcov( fitwls3e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          48.628136    -0.506597      0.022574
demand_price                -0.506597     0.006662     -0.001638
demand_income                0.022574    -0.001638      0.001448
supply_(Intercept)          -0.662713     0.048082     -0.042512
supply_price                 0.001239    -0.000090      0.000079
supply_farmPrice             0.003123    -0.000227      0.000200
supply_trend                 0.022574    -0.001638      0.001448
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -0.662713     0.001239         0.003123
demand_price                 0.048082    -0.000090        -0.000227
demand_income               -0.042512     0.000079         0.000200
supply_(Intercept)         102.511245    -0.801390        -0.224299
supply_price                -0.801390     0.007381         0.000645
supply_farmPrice            -0.224299     0.000645         0.001632
supply_trend                -0.042512     0.000079         0.000200
                   supply_trend
demand_(Intercept)     0.022574
demand_price          -0.001638
demand_income          0.001448
supply_(Intercept)    -0.042512
supply_price           0.000079
supply_farmPrice       0.000200
supply_trend           0.001448
> print( round( vcov( fitwls3e, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3         C4        C5        C6
C1 48.628136 -0.506597  0.022574  -0.662713  0.001239  0.003123
C2 -0.506597  0.006662 -0.001638   0.048082 -0.000090 -0.000227
C3  0.022574 -0.001638  0.001448  -0.042512  0.000079  0.000200
C4 -0.662713  0.048082 -0.042512 102.511245 -0.801390 -0.224299
C5  0.001239 -0.000090  0.000079  -0.801390  0.007381  0.000645
C6  0.003123 -0.000227  0.000200  -0.224299  0.000645  0.001632
> print( round( vcov( fitwls3e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   48.628136 -0.506597  0.022574
price         -0.506597  0.006662 -0.001638
income         0.022574 -0.001638  0.001448
> 
> print( round( vcov( fitwls4 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          36.571016    -0.321554     -0.043279
demand_price                -0.321554     0.004201     -0.001011
demand_income               -0.043279    -0.001011      0.001481
supply_(Intercept)          35.846737    -0.431417      0.074877
supply_price                -0.321554     0.004201     -0.001011
supply_farmPrice            -0.033436     0.000226      0.000111
supply_trend                -0.043279    -0.001011      0.001481
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          35.846737    -0.321554        -0.033436
demand_price                -0.431417     0.004201         0.000226
demand_income                0.074877    -0.001011         0.000111
supply_(Intercept)          63.500095    -0.431417        -0.215648
supply_price                -0.431417     0.004201         0.000226
supply_farmPrice            -0.215648     0.000226         0.001986
supply_trend                 0.074877    -0.001011         0.000111
                   supply_trend
demand_(Intercept)    -0.043279
demand_price          -0.001011
demand_income          0.001481
supply_(Intercept)     0.074877
supply_price          -0.001011
supply_farmPrice       0.000111
supply_trend           0.001481
> print( round( vcov( fitwls4$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)   63.500095 -0.431417 -0.215648  0.074877
price         -0.431417  0.004201  0.000226 -0.001011
farmPrice     -0.215648  0.000226  0.001986  0.000111
trend          0.074877 -0.001011  0.000111  0.001481
> 
> print( round( vcov( fitwls5 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          36.571016    -0.321554     -0.043279
demand_price                -0.321554     0.004201     -0.001011
demand_income               -0.043279    -0.001011      0.001481
supply_(Intercept)          35.846737    -0.431417      0.074877
supply_price                -0.321554     0.004201     -0.001011
supply_farmPrice            -0.033436     0.000226      0.000111
supply_trend                -0.043279    -0.001011      0.001481
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          35.846737    -0.321554        -0.033436
demand_price                -0.431417     0.004201         0.000226
demand_income                0.074877    -0.001011         0.000111
supply_(Intercept)          63.500095    -0.431417        -0.215648
supply_price                -0.431417     0.004201         0.000226
supply_farmPrice            -0.215648     0.000226         0.001986
supply_trend                 0.074877    -0.001011         0.000111
                   supply_trend
demand_(Intercept)    -0.043279
demand_price          -0.001011
demand_income          0.001481
supply_(Intercept)     0.074877
supply_price          -0.001011
supply_farmPrice       0.000111
supply_trend           0.001481
> print( round( vcov( fitwls5, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3        C4        C5        C6
C1 36.571016 -0.321554 -0.043279 35.846737 -0.321554 -0.033436
C2 -0.321554  0.004201 -0.001011 -0.431417  0.004201  0.000226
C3 -0.043279 -0.001011  0.001481  0.074877 -0.001011  0.000111
C4 35.846737 -0.431417  0.074877 63.500095 -0.431417 -0.215648
C5 -0.321554  0.004201 -0.001011 -0.431417  0.004201  0.000226
C6 -0.033436  0.000226  0.000111 -0.215648  0.000226  0.001986
> print( round( vcov( fitwls5$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   36.571016 -0.321554 -0.043279
price         -0.321554  0.004201 -0.001011
income        -0.043279 -0.001011  0.001481
> 
> print( round( vcov( fitwlsi1 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          56.540807    -0.594801      0.032162
demand_price                -0.594801     0.008222     -0.002333
demand_income                0.032162    -0.002333      0.002063
supply_(Intercept)           0.000000     0.000000      0.000000
supply_price                 0.000000     0.000000      0.000000
supply_farmPrice             0.000000     0.000000      0.000000
supply_trend                 0.000000     0.000000      0.000000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)           0.000000     0.000000         0.000000
demand_price                 0.000000     0.000000         0.000000
demand_income                0.000000     0.000000         0.000000
supply_(Intercept)         131.398303    -0.987500        -0.304361
supply_price                -0.987500     0.009003         0.000844
supply_farmPrice            -0.304361     0.000844         0.002133
supply_trend                -0.279183     0.000522         0.001316
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.279183
supply_price           0.000522
supply_farmPrice       0.001316
supply_trend           0.009510
> print( round( vcov( fitwlsi1$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  131.398303 -0.987500 -0.304361 -0.279183
price         -0.987500  0.009003  0.000844  0.000522
farmPrice     -0.304361  0.000844  0.002133  0.001316
trend         -0.279183  0.000522  0.001316  0.009510
> 
> print( round( vcov( fitwlsi2e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          48.325149    -0.503487      0.022480
demand_price                -0.503487     0.006624     -0.001631
demand_income                0.022480    -0.001631      0.001442
supply_(Intercept)          -0.659954     0.047882     -0.042335
supply_price                 0.001234    -0.000090      0.000079
supply_farmPrice             0.003110    -0.000226      0.000199
supply_trend                 0.022480    -0.001631      0.001442
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -0.659954     0.001234         0.003110
demand_price                 0.047882    -0.000090        -0.000226
demand_income               -0.042335     0.000079         0.000199
supply_(Intercept)         103.022585    -0.805456        -0.225388
supply_price                -0.805456     0.007418         0.000649
supply_farmPrice            -0.225388     0.000649         0.001640
supply_trend                -0.042335     0.000079         0.000199
                   supply_trend
demand_(Intercept)     0.022480
demand_price          -0.001631
demand_income          0.001442
supply_(Intercept)    -0.042335
supply_price           0.000079
supply_farmPrice       0.000199
supply_trend           0.001442
> print( round( vcov( fitwlsi2e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   48.325149 -0.503487  0.022480
price         -0.503487  0.006624 -0.001631
income         0.022480 -0.001631  0.001442
> 
> print( round( vcov( fitwlsi3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          56.818574    -0.592263      0.026724
demand_price                -0.592263     0.007812     -0.001939
demand_income                0.026724    -0.001939      0.001714
supply_(Intercept)          -0.784542     0.056921     -0.050327
supply_price                 0.001467    -0.000106      0.000094
supply_farmPrice             0.003697    -0.000268      0.000237
supply_trend                 0.026724    -0.001939      0.001714
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          -0.784542     0.001467         0.003697
demand_price                 0.056921    -0.000106        -0.000268
demand_income               -0.050327     0.000094         0.000237
supply_(Intercept)         128.792445    -1.007391        -0.281572
supply_price                -1.007391     0.009279         0.000811
supply_farmPrice            -0.281572     0.000811         0.002049
supply_trend                -0.050327     0.000094         0.000237
                   supply_trend
demand_(Intercept)     0.026724
demand_price          -0.001939
demand_income          0.001714
supply_(Intercept)    -0.050327
supply_price           0.000094
supply_farmPrice       0.000237
supply_trend           0.001714
> print( round( vcov( fitwlsi3, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3         C4        C5        C6
C1 56.818574 -0.592263  0.026724  -0.784542  0.001467  0.003697
C2 -0.592263  0.007812 -0.001939   0.056921 -0.000106 -0.000268
C3  0.026724 -0.001939  0.001714  -0.050327  0.000094  0.000237
C4 -0.784542  0.056921 -0.050327 128.792445 -1.007391 -0.281572
C5  0.001467 -0.000106  0.000094  -1.007391  0.009279  0.000811
C6  0.003697 -0.000268  0.000237  -0.281572  0.000811  0.002049
> print( round( vcov( fitwlsi3$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)  128.792445 -1.007391 -0.281572 -0.050327
price         -1.007391  0.009279  0.000811  0.000094
farmPrice     -0.281572  0.000811  0.002049  0.000237
trend         -0.050327  0.000094  0.000237  0.001714
> 
> print( round( vcov( fitwlsi4e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          30.437717    -0.265752     -0.037918
demand_price                -0.265752     0.003463     -0.000827
demand_income               -0.037918    -0.000827      0.001237
supply_(Intercept)          29.676241    -0.355820      0.060620
supply_price                -0.265752     0.003463     -0.000827
supply_farmPrice            -0.027921     0.000187      0.000094
supply_trend                -0.037918    -0.000827      0.001237
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          29.676241    -0.265752        -0.027921
demand_price                -0.355820     0.003463         0.000187
demand_income                0.060620    -0.000827         0.000094
supply_(Intercept)          52.004362    -0.355820        -0.173988
supply_price                -0.355820     0.003463         0.000187
supply_farmPrice            -0.173988     0.000187         0.001596
supply_trend                 0.060620    -0.000827         0.000094
                   supply_trend
demand_(Intercept)    -0.037918
demand_price          -0.000827
demand_income          0.001237
supply_(Intercept)     0.060620
supply_price          -0.000827
supply_farmPrice       0.000094
supply_trend           0.001237
> print( round( vcov( fitwlsi4e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)   30.437717 -0.265752 -0.037918
price         -0.265752  0.003463 -0.000827
income        -0.037918 -0.000827  0.001237
> 
> print( round( vcov( fitwlsi5e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)          30.437717    -0.265752     -0.037918
demand_price                -0.265752     0.003463     -0.000827
demand_income               -0.037918    -0.000827      0.001237
supply_(Intercept)          29.676241    -0.355820      0.060620
supply_price                -0.265752     0.003463     -0.000827
supply_farmPrice            -0.027921     0.000187      0.000094
supply_trend                -0.037918    -0.000827      0.001237
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)          29.676241    -0.265752        -0.027921
demand_price                -0.355820     0.003463         0.000187
demand_income                0.060620    -0.000827         0.000094
supply_(Intercept)          52.004362    -0.355820        -0.173988
supply_price                -0.355820     0.003463         0.000187
supply_farmPrice            -0.173988     0.000187         0.001596
supply_trend                 0.060620    -0.000827         0.000094
                   supply_trend
demand_(Intercept)    -0.037918
demand_price          -0.000827
demand_income          0.001237
supply_(Intercept)     0.060620
supply_price          -0.000827
supply_farmPrice       0.000094
supply_trend           0.001237
> print( round( vcov( fitwlsi5e, modified.regMat = TRUE ), digits = 6 ) )
          C1        C2        C3        C4        C5        C6
C1 30.437717 -0.265752 -0.037918 29.676241 -0.265752 -0.027921
C2 -0.265752  0.003463 -0.000827 -0.355820  0.003463  0.000187
C3 -0.037918 -0.000827  0.001237  0.060620 -0.000827  0.000094
C4 29.676241 -0.355820  0.060620 52.004362 -0.355820 -0.173988
C5 -0.265752  0.003463 -0.000827 -0.355820  0.003463  0.000187
C6 -0.027921  0.000187  0.000094 -0.173988  0.000187  0.001596
> print( round( vcov( fitwlsi5e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)   52.004362 -0.355820 -0.173988  0.060620
price         -0.355820  0.003463  0.000187 -0.000827
farmPrice     -0.173988  0.000187  0.001596  0.000094
trend          0.060620 -0.000827  0.000094  0.001237
> 
> 
> ## *********** confidence intervals of coefficients *************
> print( confint( fitwls1 ) )
                    2.5 %  97.5 %
demand_(Intercept) 84.031 115.760
demand_price       -0.508  -0.125
demand_income       0.239   0.430
supply_(Intercept) 33.975  82.576
supply_price       -0.041   0.362
supply_farmPrice    0.150   0.346
supply_trend        0.042   0.455
> print( confint( fitwls1$eq[[ 2 ]], level = 0.9 ) )
               5 %   95 %
(Intercept) 38.263 78.288
price       -0.005  0.326
farmPrice    0.167  0.329
trend        0.078  0.419
> 
> print( confint( fitwls2e, level = 0.9 ) )
                      5 %    95 %
demand_(Intercept) 85.474 113.818
demand_price       -0.464  -0.132
demand_income       0.241   0.396
supply_(Intercept) 35.634  76.786
supply_price       -0.010   0.339
supply_farmPrice    0.176   0.340
supply_trend        0.241   0.396
> print( confint( fitwls2e$eq[[ 1 ]], level = 0.99 ) )
             0.5 %  99.5 %
(Intercept) 80.620 118.672
price       -0.521  -0.076
income       0.215   0.422
> 
> print( confint( fitwls3, level = 0.99 ) )
                    0.5 %  99.5 %
demand_(Intercept) 84.286 115.030
demand_price       -0.479  -0.119
demand_income       0.235   0.404
supply_(Intercept) 33.190  79.186
supply_price       -0.031   0.359
supply_farmPrice    0.166   0.350
supply_trend        0.235   0.404
> print( confint( fitwls3$eq[[ 2 ]], level = 0.5 ) )
              25 %   75 %
(Intercept) 48.472 63.903
price        0.099  0.230
farmPrice    0.227  0.289
trend        0.291  0.348
> 
> print( confint( fitwls4e, level = 0.5 ) )
                     25 %    75 %
demand_(Intercept) 89.763 112.189
demand_price       -0.436  -0.197
demand_income       0.252   0.395
supply_(Intercept) 39.328  68.598
supply_price        0.064   0.303
supply_farmPrice    0.179   0.341
supply_trend        0.252   0.395
> print( confint( fitwls4e$eq[[ 1 ]], level = 0.25 ) )
            37.5 %  62.5 %
(Intercept) 99.202 102.750
price       -0.335  -0.297
income       0.312   0.335
> 
> print( confint( fitwls5, level = 0.25 ) )
                   37.5 %  62.5 %
demand_(Intercept) 88.637 113.191
demand_price       -0.448  -0.184
demand_income       0.246   0.402
supply_(Intercept) 37.764  70.119
supply_price        0.052   0.316
supply_farmPrice    0.170   0.351
supply_trend        0.246   0.402
> print( confint( fitwls5$eq[[ 2 ]], level = 0.975 ) )
             1.3 % 98.8 %
(Intercept) 35.279 72.604
price        0.032  0.336
farmPrice    0.156  0.365
trend        0.234  0.414
> 
> print( confint( fitwlsi1e, level = 0.975, useDfSys = TRUE ) )
                    1.3 %  98.8 %
demand_(Intercept) 85.791 114.000
demand_price       -0.486  -0.146
demand_income       0.249   0.420
supply_(Intercept) 37.416  79.135
supply_price       -0.012   0.333
supply_farmPrice    0.164   0.332
supply_trend        0.071   0.426
> print( confint( fitwlsi1e$eq[[ 1 ]], level = 0.999, useDfSys = TRUE ) )
             0.1 %   100 %
(Intercept) 74.863 124.928
price       -0.618  -0.014
income       0.183   0.486
> 
> print( confint( fitwlsi2, level = 0.999 ) )
                    0.1 %   100 %
demand_(Intercept) 84.342 114.979
demand_price       -0.479  -0.120
demand_income       0.235   0.404
supply_(Intercept) 33.120  79.246
supply_price       -0.031   0.360
supply_farmPrice    0.166   0.350
supply_trend        0.235   0.404
> print( confint( fitwlsi2$eq[[ 2 ]], level = 0.1 ) )
              45 %   55 %
(Intercept) 54.746 57.620
price        0.152  0.176
farmPrice    0.252  0.264
trend        0.314  0.325
> 
> print( confint( fitwlsi3e, level = 0.1 ) )
                     45 %    55 %
demand_(Intercept) 85.521 113.776
demand_price       -0.464  -0.133
demand_income       0.242   0.396
supply_(Intercept) 35.579  76.833
supply_price       -0.011   0.339
supply_farmPrice    0.176   0.340
supply_trend        0.242   0.396
> print( confint( fitwlsi3e$eq[[ 1 ]], level = 0.01 ) )
            49.5 % 50.5 %
(Intercept) 99.561 99.736
price       -0.299 -0.297
income       0.318  0.319
> 
> print( confint( fitwlsi4, level = 0.01 ) )
                   49.5 %  50.5 %
demand_(Intercept) 88.642 113.164
demand_price       -0.447  -0.184
demand_income       0.246   0.402
supply_(Intercept) 37.754  70.122
supply_price        0.053   0.316
supply_farmPrice    0.170   0.351
supply_trend        0.246   0.402
> print( confint( fitwlsi4$eq[[ 2 ]], level = 0.33 ) )
            33.5 % 66.5 %
(Intercept) 50.512 57.364
price        0.156  0.212
farmPrice    0.241  0.279
trend        0.307  0.340
> 
> print( confint( fitwlsi5e, level = 0.33 ) )
                   33.5 %  66.5 %
demand_(Intercept) 89.766 112.166
demand_price       -0.435  -0.197
demand_income       0.252   0.395
supply_(Intercept) 39.320  68.599
supply_price        0.065   0.303
supply_farmPrice    0.179   0.341
supply_trend        0.252   0.395
> print( confint( fitwlsi5e$eq[[ 1 ]] ) )
             2.5 %  97.5 %
(Intercept) 89.766 112.166
price       -0.435  -0.197
income       0.252   0.395
> 
> 
> ## *********** fitted values *************
> print( fitted( fitwls1 ) )
      demand    supply
1   97.41053  98.92925
2   99.57728 100.08251
3   99.53832 100.19787
4   99.70152 100.36979
5  102.29446 102.72620
6  102.06849 102.56269
7  102.46276 102.42403
8  102.83273 104.30737
9  101.71547 102.94896
10 100.78922 100.35059
11  95.58388  96.03328
12  94.37826  94.12138
13  95.65592  95.59902
14  98.97700  97.78688
15 104.31033 102.63791
16 103.92569 104.09052
17 104.79508 103.78669
18 101.93124 102.37790
19 103.48498 102.11329
20 106.53086 104.51788
> print( fitted( fitwls1$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.92925 100.08251 100.19787 100.36979 102.72620 102.56269 102.42403 104.30737 
        9        10        11        12        13        14        15        16 
102.94896 100.35059  96.03328  94.12138  95.59902  97.78688 102.63791 104.09052 
       17        18        19        20 
103.78669 102.37790 102.11329 104.51788 
> 
> print( fitted( fitwls2e ) )
      demand    supply
1   97.57813  98.27559
2   99.65303  99.52510
3   99.61347  99.70760
4   99.77205  99.94426
5  102.22172 102.46948
6  102.01088 102.35662
7  102.39109 102.26922
8  102.75437 104.27804
9  101.66579 102.94715
10 100.76830 100.32015
11  95.81728  95.88963
12  94.68627  93.94948
13  95.91506  95.53570
14  99.06508  97.88004
15 104.13268 102.99074
16 103.77633 104.55282
17 104.56864 104.32670
18 101.89375 102.88073
19 103.37843 102.66210
20 106.30167 105.20284
> print( fitted( fitwls2e$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.57813  99.65303  99.61347  99.77205 102.22172 102.01088 102.39109 102.75437 
        9        10        11        12        13        14        15        16 
101.66579 100.76830  95.81728  94.68627  95.91506  99.06508 104.13268 103.77633 
       17        18        19        20 
104.56864 101.89375 103.37843 106.30167 
> 
> print( fitted( fitwls3 ) )
      demand    supply
1   97.57001  98.26839
2   99.64936  99.51896
3   99.60983  99.70220
4   99.76863  99.93957
5  102.22525 102.46665
6  102.01367 102.35435
7  102.39457 102.26752
8  102.75816 104.27772
9  101.66819 102.94713
10 100.76932 100.31982
11  95.80597  95.88805
12  94.67135  93.94759
13  95.90251  95.53500
14  99.06081  97.88106
15 104.14129 102.99463
16 103.78357 104.55792
17 104.57961 104.33265
18 101.89556 102.88627
19 103.38359 102.66814
20 106.31278 105.21039
> print( fitted( fitwls3$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.26839  99.51896  99.70220  99.93957 102.46665 102.35435 102.26752 104.27772 
        9        10        11        12        13        14        15        16 
102.94713 100.31982  95.88805  93.94759  95.53500  97.88106 102.99463 104.55792 
       17        18        19        20 
104.33265 102.88627 102.66814 105.21039 
> 
> print( fitted( fitwls4e ) )
      demand    supply
1   97.52574  98.24074
2   99.57769  99.57526
3   99.54873  99.74602
4   99.69518 100.00615
5  102.26818 102.43699
6  102.03465 102.35147
7  102.39869 102.29447
8  102.71741 104.39066
9  101.72512 102.89763
10 100.88493 100.15347
11  95.83685  95.71883
12  94.61233  93.86744
13  95.80364  95.54471
14  99.05544  97.83604
15 104.24578 102.92800
16 103.83933 104.56676
17 104.80431 104.12201
18 101.85434 102.98485
19 103.33699 102.79805
20 106.19867 105.50445
> print( fitted( fitwls4e$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.52574  99.57769  99.54873  99.69518 102.26818 102.03465 102.39869 102.71741 
        9        10        11        12        13        14        15        16 
101.72512 100.88493  95.83685  94.61233  95.80364  99.05544 104.24578 103.83933 
       17        18        19        20 
104.80431 101.85434 103.33699 106.19867 
> 
> print( fitted( fitwls5 ) )
      demand    supply
1   97.52007  98.23555
2   99.57805  99.57101
3   99.54852  99.74227
4   99.69590 100.00296
5  102.26930 102.43490
6  102.03627 102.34985
7  102.40196 102.29332
8  102.72354 104.39069
9  101.72432 102.89750
10 100.87940 100.15284
11  95.82372  95.71730
12  94.60065  93.86590
13  95.79659  95.54424
14  99.05145  97.83666
15 104.24853 102.93061
16 103.84346 104.57041
17 104.80263 104.12576
18 101.85851 102.98903
19 103.34482 102.80267
20 106.21630 105.51052
> print( fitted( fitwls5$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.23555  99.57101  99.74227 100.00296 102.43490 102.34985 102.29332 104.39069 
        9        10        11        12        13        14        15        16 
102.89750 100.15284  95.71730  93.86590  95.54424  97.83666 102.93061 104.57041 
       17        18        19        20 
104.12576 102.98903 102.80267 105.51052 
> 
> print( fitted( fitwlsi1e ) )
      demand    supply
1   97.41053  98.92925
2   99.57728 100.08251
3   99.53832 100.19787
4   99.70152 100.36979
5  102.29446 102.72620
6  102.06849 102.56269
7  102.46276 102.42403
8  102.83273 104.30737
9  101.71547 102.94896
10 100.78922 100.35059
11  95.58388  96.03328
12  94.37826  94.12138
13  95.65592  95.59902
14  98.97700  97.78688
15 104.31033 102.63791
16 103.92569 104.09052
17 104.79508 103.78669
18 101.93124 102.37790
19 103.48498 102.11329
20 106.53086 104.51788
> print( fitted( fitwlsi1e$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.41053  99.57728  99.53832  99.70152 102.29446 102.06849 102.46276 102.83273 
        9        10        11        12        13        14        15        16 
101.71547 100.78922  95.58388  94.37826  95.65592  98.97700 104.31033 103.92569 
       17        18        19        20 
104.79508 101.93124 103.48498 106.53086 
> 
> print( fitted( fitwlsi2 ) )
      demand    supply
1   97.56834  98.26691
2   99.64861  99.51770
3   99.60908  99.70109
4   99.76793  99.93861
5  102.22597 102.46607
6  102.01424 102.35389
7  102.39528 102.26717
8  102.75894 104.27766
9  101.66869 102.94713
10 100.76952 100.31975
11  95.80365  95.88772
12  94.66828  93.94720
13  95.89993  95.53485
14  99.05993  97.88127
15 104.14305 102.99543
16 103.78505 104.55896
17 104.58187 104.33387
18 101.89594 102.88741
19 103.38465 102.66939
20 106.31506 105.21194
> print( fitted( fitwlsi2$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.26691  99.51770  99.70109  99.93861 102.46607 102.35389 102.26717 104.27766 
        9        10        11        12        13        14        15        16 
102.94713 100.31975  95.88772  93.94720  95.53485  97.88127 102.99543 104.55896 
       17        18        19        20 
104.33387 102.88741 102.66939 105.21194 
> 
> print( fitted( fitwlsi3e ) )
      demand    supply
1   97.57658  98.27422
2   99.65233  99.52393
3   99.61278  99.70657
4   99.77140  99.94337
5  102.22239 102.46894
6  102.01141 102.35619
7  102.39175 102.26890
8  102.75509 104.27798
9  101.66624 102.94715
10 100.76849 100.32009
11  95.81513  95.88933
12  94.68343  93.94912
13  95.91268  95.53556
14  99.06426  97.88023
15 104.13432 102.99148
16 103.77770 104.55379
17 104.57073 104.32783
18 101.89409 102.88178
19 103.37941 102.66325
20 106.30379 105.20427
> print( fitted( fitwlsi3e$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.57658  99.65233  99.61278  99.77140 102.22239 102.01141 102.39175 102.75509 
        9        10        11        12        13        14        15        16 
101.66624 100.76849  95.81513  94.68343  95.91268  99.06426 104.13432 103.77770 
       17        18        19        20 
104.57073 101.89409 103.37941 106.30379 
> 
> print( fitted( fitwlsi4 ) )
      demand    supply
1   97.51910  98.23465
2   99.57811  99.57028
3   99.54849  99.74163
4   99.69602 100.00241
5  102.26949 102.43454
6  102.03655 102.34957
7  102.40251 102.29312
8  102.72459 104.39069
9  101.72418 102.89748
10 100.87846 100.15274
11  95.82147  95.71705
12  94.59865  93.86564
13  95.79538  95.54415
14  99.05076  97.83677
15 104.24901 102.93106
16 103.84417 104.57104
17 104.80235 104.12641
18 101.85922 102.98975
19 103.34616 102.80346
20 106.21932 105.51156
> print( fitted( fitwlsi4$eq[[ 2 ]] ) )
        1         2         3         4         5         6         7         8 
 98.23465  99.57028  99.74163 100.00241 102.43454 102.34957 102.29312 104.39069 
        9        10        11        12        13        14        15        16 
102.89748 100.15274  95.71705  93.86564  95.54415  97.83677 102.93106 104.57104 
       17        18        19        20 
104.12641 102.98975 102.80346 105.51156 
> 
> print( fitted( fitwlsi5e ) )
      demand    supply
1   97.52483  98.23991
2   99.57775  99.57457
3   99.54870  99.74542
4   99.69530 100.00564
5  102.26836 102.43665
6  102.03491 102.35121
7  102.39922 102.29429
8  102.71840 104.39066
9  101.72499 102.89761
10 100.88403 100.15337
11  95.83474  95.71858
12  94.61045  93.86719
13  95.80250  95.54463
14  99.05480  97.83614
15 104.24622 102.92842
16 103.83999 104.56735
17 104.80403 104.12261
18 101.85502 102.98553
19 103.33825 102.79879
20 106.20151 105.50543
> print( fitted( fitwlsi5e$eq[[ 1 ]] ) )
        1         2         3         4         5         6         7         8 
 97.52483  99.57775  99.54870  99.69530 102.26836 102.03491 102.39922 102.71840 
        9        10        11        12        13        14        15        16 
101.72499 100.88403  95.83474  94.61045  95.80250  99.05480 104.24622 103.83999 
       17        18        19        20 
104.80403 101.85502 103.33825 106.20151 
> 
> 
> ## *********** predicted values *************
> predictData <- Kmenta
> predictData$consump <- NULL
> predictData$price <- Kmenta$price * 0.9
> predictData$income <- Kmenta$income * 1.1
> 
> print( predict( fitwls1, se.fit = TRUE, interval = "prediction" ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     97.41053     0.6429061   93.11835  101.70270    98.92925     1.0562480
2     99.57728     0.5771956   95.32688  103.82768   100.08251     1.0374518
3     99.53832     0.5449443   95.30691  103.76972   100.19787     0.9385873
4     99.70152     0.5820617   95.44816  103.95487   100.36979     0.9123586
5    102.29446     0.5016690   98.08694  106.50197   102.72620     0.8946358
6    102.06849     0.4634706   97.88052  106.25646   102.56269     0.7906098
7    102.46276     0.4835427   98.26470  106.66082   102.42403     0.7188933
8    102.83273     0.6012030   98.56754  107.09792   104.30737     0.9633419
9    101.71547     0.5267396   97.49434  105.93660   102.94896     0.7884907
10   100.78922     0.7882143   96.39053  105.18791   100.35059     0.9805372
11    95.58388     0.9455360   91.04929  100.11848    96.03328     1.1849089
12    94.37826     0.9796228   89.81157   98.94495    94.12138     1.3944857
13    95.65592     0.8800474   91.18038  100.13145    95.59902     1.2443670
14    98.97700     0.5076743   94.76628  103.18772    97.78688     0.8956664
15   104.31033     0.7581877   99.93520  108.68546   102.63791     0.8740121
16   103.92569     0.6163758   99.65087  108.20051   104.09052     0.9157984
17   104.79508     1.2729944   99.91693  109.67323   103.78669     1.6051425
18   101.93124     0.5355403   97.70518  106.15730   102.37790     0.9624635
19   103.48498     0.6800135   99.16742  107.80253   102.11329     1.0975095
20   106.53086     1.2739852  101.65155  111.41016   104.51788     1.6642760
   supply.lwr supply.upr
1    93.36068   104.4978
2    94.52983   105.6352
3    94.72482   105.6709
4    94.91671   105.8229
5    97.28633   108.1661
6    97.19572   107.9297
7    97.10259   107.7455
8    98.81503   109.7997
9    97.58340   108.3145
10   94.84459   105.8566
11   90.34954   101.7170
12   88.22781   100.0150
13   89.85846   101.3396
14   92.34625   103.2275
15   97.21313   108.0627
16   98.63485   109.5462
17   97.65693   109.9165
18   96.88624   107.8695
19   96.50897   107.7176
20   98.31765   110.7181
> print( predict( fitwls1$eq[[ 2 ]], se.fit = TRUE, interval = "prediction" ) )
         fit    se.fit      lwr      upr
1   98.92925 1.0562480 93.36068 104.4978
2  100.08251 1.0374518 94.52983 105.6352
3  100.19787 0.9385873 94.72482 105.6709
4  100.36979 0.9123586 94.91671 105.8229
5  102.72620 0.8946358 97.28633 108.1661
6  102.56269 0.7906098 97.19572 107.9297
7  102.42403 0.7188933 97.10259 107.7455
8  104.30737 0.9633419 98.81503 109.7997
9  102.94896 0.7884907 97.58340 108.3145
10 100.35059 0.9805372 94.84459 105.8566
11  96.03328 1.1849089 90.34954 101.7170
12  94.12138 1.3944857 88.22781 100.0150
13  95.59902 1.2443670 89.85846 101.3396
14  97.78688 0.8956664 92.34625 103.2275
15 102.63791 0.8740121 97.21313 108.0627
16 104.09052 0.9157984 98.63485 109.5462
17 103.78669 1.6051425 97.65693 109.9165
18 102.37790 0.9624635 96.88624 107.8695
19 102.11329 1.0975095 96.50897 107.7176
20 104.51788 1.6642760 98.31765 110.7181
> 
> print( predict( fitwls2e, se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1     103.3548       2.121769  100.23784   106.4717    96.62801       2.652305
2     105.8722       2.122807  102.74613   108.9983    97.81280       2.566527
3     105.7793       2.132197  102.57138   108.9871    98.00891       2.575770
4     106.0176       2.124613  102.87561   109.1595    98.22798       2.555081
5     108.3242       2.352586  103.51746   113.1310   100.86003       2.715806
6     108.1791       2.311283  103.63952   112.7187   100.72328       2.665122
7     108.6934       2.303087  104.20811   113.1786   100.60944       2.617766
8     109.3134       2.273420  105.02893   113.5980   102.55755       2.576167
9     107.6200       2.359011  102.77253   112.4674   101.36324       2.744218
10    106.3215       2.462926  100.84484   111.7982    98.82194       2.917806
11    100.9862       2.280160   96.65545   105.3169    94.36092       2.979804
12    100.0830       2.122655   96.95821   103.2077    92.32690       2.964108
13    101.6796       2.049031   99.27499   104.0842    93.84566       2.814328
14    104.8970       2.196285  101.17043   108.6235    96.25819       2.777269
15    110.2544       2.532022  104.38339   116.1254   101.42862       2.778391
16    110.0611       2.435089  104.74830   115.3740   102.93598       2.686074
17    110.2198       2.812503  102.87785   117.5617   102.90616       3.135222
18    108.3222       2.232261  104.32814   112.3163   101.17250       2.576098
19    110.0599       2.302592  105.57797   114.5419   100.92508       2.566816
20    113.7360       2.497424  108.06035   119.4116   103.33902       2.524894
   supply.lwr supply.upr
1    92.91701  100.33900
2    94.99013  100.63547
3    95.07911  100.93871
4    95.54331  100.91265
5    96.59494  105.12512
6    96.89508  104.55148
7    97.23134  103.98754
8    99.62322  105.49187
9    96.86854  105.85794
10   93.08215  104.56173
11   88.22204  100.49979
12   86.28734   98.36645
13   88.82023   98.87109
14   91.50757  101.00880
15   96.66951  106.18774
16   98.92242  106.94955
17   95.83455  109.97778
18   98.23896  104.10603
19   98.09900  103.75116
20  101.05445  105.62358
> print( predict( fitwls2e$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
        fit  se.pred       lwr      upr
1  103.3548 2.121769 100.23784 106.4717
2  105.8722 2.122807 102.74613 108.9983
3  105.7793 2.132197 102.57138 108.9871
4  106.0176 2.124613 102.87561 109.1595
5  108.3242 2.352586 103.51746 113.1310
6  108.1791 2.311283 103.63952 112.7187
7  108.6934 2.303087 104.20811 113.1786
8  109.3134 2.273420 105.02893 113.5980
9  107.6200 2.359011 102.77253 112.4674
10 106.3215 2.462926 100.84484 111.7982
11 100.9862 2.280160  96.65545 105.3169
12 100.0830 2.122655  96.95821 103.2077
13 101.6796 2.049031  99.27499 104.0842
14 104.8970 2.196285 101.17043 108.6235
15 110.2544 2.532022 104.38339 116.1254
16 110.0611 2.435089 104.74830 115.3740
17 110.2198 2.812503 102.87785 117.5617
18 108.3222 2.232261 104.32814 112.3163
19 110.0599 2.302592 105.57797 114.5419
20 113.7360 2.497424 108.06035 119.4116
> 
> print( predict( fitwls3, se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1     97.57001       2.031852   92.80520  102.33482    98.26839       2.535330
2     99.64936       2.019746   94.91294  104.38578    99.51896       2.564586
3     99.60983       2.010678   94.89467  104.32498    99.70220       2.547705
4     99.76863       2.021433   95.02826  104.50901    99.93957       2.556828
5    102.22525       1.999360   97.53664  106.91386   102.46665       2.586852
6    102.01367       1.990707   97.34535  106.68199   102.35435       2.559262
7    102.39457       1.994884   97.71645  107.07268   102.26752       2.543361
8    102.75816       2.026689   98.00546  107.51086   104.27772       2.632255
9    101.66819       2.006897   96.96191  106.37448   102.94713       2.572052
10   100.76932       2.092613   95.86202  105.67661   100.31982       2.638749
11    95.80597       2.139534   90.78864  100.82329    95.88805       2.717651
12    94.67135       2.141473   89.64947   99.69322    93.94759       2.815408
13    95.90251       2.106694   90.96219  100.84282    95.53500       2.749739
14    99.06081       2.000007   94.37068  103.75094    97.88106       2.605147
15   104.14129       2.070537   99.28576  108.99681   102.99463       2.561061
16   103.78357       2.025560   99.03351  108.53362   104.55792       2.547688
17   104.57961       2.306185   99.17148  109.98775   104.33265       2.854724
18   101.89556       2.009637   97.18285  106.60828   102.88627       2.552868
19   103.38359       2.049950   98.57634  108.19084   102.66814       2.593128
20   106.31278       2.306350  100.90426  111.72130   105.21039       2.838883
   supply.lwr supply.upr
1    92.32289   104.2139
2    93.50486   105.5331
3    93.72768   105.6767
4    93.94367   105.9355
5    96.40034   108.5330
6    96.35274   108.3560
7    96.30319   108.2318
8    98.10494   110.4505
9    96.91553   108.9787
10   94.13180   106.5078
11   89.51500   102.2611
12   87.34530   100.5499
13   89.08670   101.9833
14   91.77185   103.9903
15   96.98880   109.0005
16   98.58344   110.5324
17   97.63816   111.0271
18   96.89965   108.8729
19   96.58711   108.7492
20   98.55305   111.8677
> print( predict( fitwls3$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
         fit  se.pred      lwr      upr
1   98.26839 2.535330 92.32289 104.2139
2   99.51896 2.564586 93.50486 105.5331
3   99.70220 2.547705 93.72768 105.6767
4   99.93957 2.556828 93.94367 105.9355
5  102.46665 2.586852 96.40034 108.5330
6  102.35435 2.559262 96.35274 108.3560
7  102.26752 2.543361 96.30319 108.2318
8  104.27772 2.632255 98.10494 110.4505
9  102.94713 2.572052 96.91553 108.9787
10 100.31982 2.638749 94.13180 106.5078
11  95.88805 2.717651 89.51500 102.2611
12  93.94759 2.815408 87.34530 100.5499
13  95.53500 2.749739 89.08670 101.9833
14  97.88106 2.605147 91.77185 103.9903
15 102.99463 2.561061 96.98880 109.0005
16 104.55792 2.547688 98.58344 110.5324
17 104.33265 2.854724 97.63816 111.0271
18 102.88627 2.552868 96.89965 108.8729
19 102.66814 2.593128 96.58711 108.7492
20 105.21039 2.838883 98.55305 111.8677
> 
> print( predict( fitwls4e, se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     97.52574     0.5411318   97.35195   97.69953    98.24074     0.5977061
2     99.57769     0.4711652   99.42637   99.72901    99.57526     0.6788869
3     99.54873     0.4538917   99.40296   99.69450    99.74602     0.6336021
4     99.69518     0.4747512   99.54271   99.84765   100.00615     0.6434304
5    102.26818     0.4336288  102.12892  102.40744   102.43699     0.7528527
6    102.03465     0.4180538  101.90039  102.16891   102.35147     0.6799018
7    102.39869     0.4402439  102.25731  102.54008   102.29447     0.6246769
8    102.71741     0.5368824  102.54499  102.88983   104.39066     0.7987784
9    101.72512     0.4470025  101.58156  101.86868   102.89763     0.6999301
10   100.88493     0.6283967  100.68311  101.08674   100.15347     0.7155425
11    95.83685     0.8330272   95.56932   96.10439    95.71883     0.9162461
12    94.61233     0.8073247   94.35306   94.87161    93.86744     1.2263908
13    95.80364     0.6768936   95.58624   96.02103    95.54471     1.1297604
14    99.05544     0.4590429   98.90801   99.20286    97.83604     0.7957504
15   104.24578     0.5715452  104.06223  104.42934   102.92800     0.6556507
16   103.83933     0.5090263  103.67585  104.00281   104.56676     0.6443078
17   104.80431     0.8773425  104.52254  105.08607   104.12201     1.1503725
18   101.85434     0.4780096  101.70083  102.00786   102.98485     0.5745827
19   103.33699     0.6037356  103.14309  103.53088   102.79805     0.6485995
20   106.19867     1.1023012  105.84465  106.55268   105.50445     0.8745894
   supply.lwr supply.upr
1    98.04879   98.43270
2    99.35722   99.79329
3    99.54253   99.94951
4    99.79950  100.21279
5   102.19520  102.67877
6   102.13312  102.56983
7   102.09385  102.49509
8   104.13412  104.64719
9   102.67285  103.12242
10   99.92367  100.38328
11   95.42457   96.01309
12   93.47358   94.26131
13   95.18188   95.90754
14   97.58048   98.09160
15  102.71743  103.13857
16  104.35983  104.77369
17  103.75256  104.49146
18  102.80032  103.16938
19  102.58975  103.00635
20  105.22357  105.78533
> print( predict( fitwls4e$eq[[ 1 ]], se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
         fit    se.fit       lwr       upr
1   97.52574 0.5411318  97.35195  97.69953
2   99.57769 0.4711652  99.42637  99.72901
3   99.54873 0.4538917  99.40296  99.69450
4   99.69518 0.4747512  99.54271  99.84765
5  102.26818 0.4336288 102.12892 102.40744
6  102.03465 0.4180538 101.90039 102.16891
7  102.39869 0.4402439 102.25731 102.54008
8  102.71741 0.5368824 102.54499 102.88983
9  101.72512 0.4470025 101.58156 101.86868
10 100.88493 0.6283967 100.68311 101.08674
11  95.83685 0.8330272  95.56932  96.10439
12  94.61233 0.8073247  94.35306  94.87161
13  95.80364 0.6768936  95.58624  96.02103
14  99.05544 0.4590429  98.90801  99.20286
15 104.24578 0.5715452 104.06223 104.42934
16 103.83933 0.5090263 103.67585 104.00281
17 104.80431 0.8773425 104.52254 105.08607
18 101.85434 0.4780096 101.70083 102.00786
19 103.33699 0.6037356 103.14309 103.53088
20 106.19867 1.1023012 105.84465 106.55268
> 
> print( predict( fitwls5, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1     103.5201     0.7491781       2.074745  102.10605   104.9342    96.38911
2     106.0329     0.7839155       2.087540  104.61015   107.4557    97.65204
3     105.9481     0.7932300       2.091056  104.52288   107.3733    97.83856
4     106.1779     0.7917647       2.090500  104.75305   107.6027    98.07954
5     108.5975     1.1356385       2.243429  107.06851   110.1266   100.63120
6     108.4332     1.0860872       2.218758  106.92094   109.9454   100.51937
7     108.9371     1.0973950       2.224315  107.42114   110.4532   100.43321
8     109.5245     1.1072698       2.229203  108.00516   111.0438   102.46254
9     107.8998     1.1261155       2.238624  106.37405   109.4256   101.12242
10    106.6407     1.2432658       2.299785  105.07322   108.2081    98.47380
11    101.1968     1.0658889       2.208941   99.69124   102.7023    94.00408
12    100.2126     0.8144036       2.099179   98.78187   101.6433    92.04748
13    101.7876     0.6173095       2.030855  100.40349   103.1718    93.65022
14    105.1056     0.8740814       2.123045  103.65863   106.5526    96.01907
15    110.5926     1.3771964       2.374862  108.97397   112.2112   101.17995
16    110.3576     1.2792261       2.319422  108.77672   111.9384   102.75843
17    110.6573     1.6558053       2.546565  108.92169   112.3930   102.53377
18    108.5258     1.0139645       2.184359  107.03698   110.0145   101.07463
19    110.2715     1.1799842       2.266200  108.72692   111.8160   100.85600
20    113.9180     1.6346173       2.532839  112.19171   115.6443   103.42175
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      0.7990824       2.579778   94.63083   98.14739
2      0.6791416       2.545183   95.91734   99.38675
3      0.6924804       2.548775   96.10141   99.57571
4      0.6566609       2.539277   96.34886   99.81022
5      1.0513865       2.668733   98.81229  102.45011
6      0.9471824       2.629425   98.72725  102.31149
7      0.8452420       2.594447   98.66493  102.20149
8      0.8490795       2.595700  100.69340  104.23167
9      1.0999557       2.688238   99.29022  102.95463
10     1.2761372       2.765004   96.58927  100.35833
11     1.4220983       2.835328   92.07162   95.93654
12     1.5952243       2.925998   90.05322   94.04173
13     1.4007768       2.824694   91.72501   95.57543
14     1.2011578       2.731209   94.15757   97.88056
15     1.1686511       2.717070   99.32810  103.03181
16     1.0604880       2.672332  100.93706  104.57979
17     1.7267137       2.999711  100.48927  104.57826
18     0.8312935       2.589937   99.30942  102.83983
19     0.8342535       2.590888   99.09014  102.62185
20     0.6528172       2.538286  101.69174  105.15175
> print( predict( fitwls5$eq[[ 2 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
         fit    se.fit  se.pred       lwr       upr
1   96.38911 0.7990824 2.579778  94.63083  98.14739
2   97.65204 0.6791416 2.545183  95.91734  99.38675
3   97.83856 0.6924804 2.548775  96.10141  99.57571
4   98.07954 0.6566609 2.539277  96.34886  99.81022
5  100.63120 1.0513865 2.668733  98.81229 102.45011
6  100.51937 0.9471824 2.629425  98.72725 102.31149
7  100.43321 0.8452420 2.594447  98.66493 102.20149
8  102.46254 0.8490795 2.595700 100.69340 104.23167
9  101.12242 1.0999557 2.688238  99.29022 102.95463
10  98.47380 1.2761372 2.765004  96.58927 100.35833
11  94.00408 1.4220983 2.835328  92.07162  95.93654
12  92.04748 1.5952243 2.925998  90.05322  94.04173
13  93.65022 1.4007768 2.824694  91.72501  95.57543
14  96.01907 1.2011578 2.731209  94.15757  97.88056
15 101.17995 1.1686511 2.717070  99.32810 103.03181
16 102.75843 1.0604880 2.672332 100.93706 104.57979
17 102.53377 1.7267137 2.999711 100.48927 104.57826
18 101.07463 0.8312935 2.589937  99.30942 102.83983
19 100.85600 0.8342535 2.590888  99.09014 102.62185
20 103.42175 0.6528172 2.538286 101.69174 105.15175
> 
> print( predict( fitwlsi1e, se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99, useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1     97.41053     0.5927301       2.019089   95.79043   99.03062    98.92925
2     99.57728     0.5321481       2.002142   98.12277  101.03179   100.08251
3     99.53832     0.5024139       1.994445   98.16508  100.91155   100.19787
4     99.70152     0.5366343       2.003339   98.23475  101.16829   100.36979
5    102.29446     0.4625160       1.984770  101.03027  103.55864   102.72620
6    102.06849     0.4272988       1.976860  100.90056  103.23641   102.56269
7    102.46276     0.4458044       1.980942  101.24425  103.68127   102.42403
8    102.83273     0.5542818       2.008138  101.31772  104.34773   104.30737
9    101.71547     0.4856299       1.990283  100.38811  103.04283   102.94896
10   100.78922     0.7266977       2.062397   98.80295  102.77549   100.35059
11    95.58388     0.8717412       2.117858   93.20117   97.96659    96.03328
12    94.37826     0.9031676       2.130986   91.90966   96.84687    94.12138
13    95.65592     0.8113636       2.093729   93.43824   97.87360    95.59902
14    98.97700     0.4680526       1.986068   97.69769  100.25632    97.78688
15   104.31033     0.6990145       2.052806  102.39973  106.22093   102.63791
16   103.92569     0.5682704       2.012044  102.37245  105.47893   104.09052
17   104.79508     1.1736428       2.258944  101.58719  108.00297   103.78669
18   101.93124     0.4937438       1.992279  100.58170  103.28078   102.37790
19   103.48498     0.6269415       2.029396  101.77137  105.19858   102.11329
20   106.53086     1.1745563       2.259419  103.32047  109.74124   104.51788
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      0.9447369       2.583983   96.34703  101.51148
2      0.9279251       2.577884   97.54623  102.61878
3      0.8394980       2.547390   97.90329  102.49245
4      0.8160383       2.539756   98.13933  102.60025
5      0.8001866       2.534707  100.53907  104.91333
6      0.7071429       2.506889  100.62987  104.49551
7      0.6429978       2.489556  100.66654  104.18152
8      0.8616392       2.554773  101.95227  106.66247
9      0.7052475       2.506355  101.02132  104.87659
10     0.8770191       2.560001   97.95345  102.74772
11     1.0598147       2.628241   93.13651   98.93005
12     1.2472659       2.709264   90.71226   97.53051
13     1.1129957       2.650132   92.55689   98.64114
14     0.8011084       2.534998   95.59723   99.97653
15     0.7817402       2.528944  100.50120  104.77462
16     0.8191150       2.540746  101.85165  106.32938
17     1.4356831       2.801005   99.86257  107.71081
18     0.8608535       2.554508  100.02494  104.73085
19     0.9816423       2.597703   99.43019  104.79639
20     1.4885737       2.828479  100.44920  108.58656
> print( predict( fitwlsi1e$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99, useDfSys = TRUE ) )
         fit    se.fit  se.pred       lwr       upr
1   97.41053 0.5927301 2.019089  95.79043  99.03062
2   99.57728 0.5321481 2.002142  98.12277 101.03179
3   99.53832 0.5024139 1.994445  98.16508 100.91155
4   99.70152 0.5366343 2.003339  98.23475 101.16829
5  102.29446 0.4625160 1.984770 101.03027 103.55864
6  102.06849 0.4272988 1.976860 100.90056 103.23641
7  102.46276 0.4458044 1.980942 101.24425 103.68127
8  102.83273 0.5542818 2.008138 101.31772 104.34773
9  101.71547 0.4856299 1.990283 100.38811 103.04283
10 100.78922 0.7266977 2.062397  98.80295 102.77549
11  95.58388 0.8717412 2.117858  93.20117  97.96659
12  94.37826 0.9031676 2.130986  91.90966  96.84687
13  95.65592 0.8113636 2.093729  93.43824  97.87360
14  98.97700 0.4680526 1.986068  97.69769 100.25632
15 104.31033 0.6990145 2.052806 102.39973 106.22093
16 103.92569 0.5682704 2.012044 102.37245 105.47893
17 104.79508 1.1736428 2.258944 101.58719 108.00297
18 101.93124 0.4937438 1.992279 100.58170 103.28078
19 103.48498 0.6269415 2.029396 101.77137 105.19858
20 106.53086 1.1745563 2.259419 103.32047 109.74124
> 
> print( predict( fitwlsi2, se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1     103.3638     0.9367713   99.72649   107.0010    96.61881     1.1511536
2     105.8879     0.9417896  102.24696   109.5289    97.80486     0.8746145
3     105.7948     0.9661980  102.13562   109.4540    98.00187     0.9090365
4     106.0337     0.9467030  102.38905   109.6783    98.22180     0.8332240
5     108.3482     1.4480318  104.25967   112.4367   100.85612     1.3274674
6     108.2024     1.3678200  104.19361   112.2111   100.72003     1.1915793
7     108.7179     1.3521389  104.72435   112.7114   100.60687     1.0515709
8     109.3392     1.2927561  105.40228   113.2760   102.55662     0.9137037
9     107.6421     1.4594574  103.54198   111.7422   101.36272     1.3996585
10    106.3407     1.6469029  102.04236   110.6390    98.82107     1.7873720
11    100.9894     1.3001218   97.04556   104.9332    94.35853     1.9114938
12    100.0826     0.9380103   96.44441   103.7208    92.32411     1.8804939
13    101.6832     0.7220605   98.18875   105.1777    93.84429     1.5648690
14    104.9107     1.1208297  101.12752   108.6939    96.25892     1.4793420
15    110.2845     1.7689877  105.84959   114.7193   101.43282     1.4812862
16    110.0901     1.6015948  105.84099   114.3392   102.94162     1.2482948
17    110.2512     2.2096941  105.28311   115.2192   102.91289     2.2008808
18    108.3451     1.2046028  104.48904   112.2012   101.17864     0.9109945
19    110.0877     1.3527626  106.09354   114.0818   100.93182     0.8768975
20    113.7732     1.7142018  109.40031   118.1461   103.34753     0.7051871
   supply.lwr supply.upr
1    92.04933  101.18828
2    93.41415  102.19557
3    93.59121  102.41252
4    93.85416  102.58943
5    96.15190  105.56033
6    96.12102  105.31904
7    96.10654  105.10719
8    98.14320  106.97003
9    96.59905  106.12639
10   93.69998  103.94215
11   89.11084   99.60622
12   87.10854   97.53967
13   88.93584   98.75274
14   91.42689  101.09094
15   96.59909  106.26655
16   98.29979  107.58344
17   97.35044  108.47535
18   96.76683  105.59046
19   96.53981  105.32384
20   99.04485  107.65021
> print( predict( fitwlsi2$eq[[ 2 ]], se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
         fit    se.fit      lwr       upr
1   96.61881 1.1511536 92.04933 101.18828
2   97.80486 0.8746145 93.41415 102.19557
3   98.00187 0.9090365 93.59121 102.41252
4   98.22180 0.8332240 93.85416 102.58943
5  100.85612 1.3274674 96.15190 105.56033
6  100.72003 1.1915793 96.12102 105.31904
7  100.60687 1.0515709 96.10654 105.10719
8  102.55662 0.9137037 98.14320 106.97003
9  101.36272 1.3996585 96.59905 106.12639
10  98.82107 1.7873720 93.69998 103.94215
11  94.35853 1.9114938 89.11084  99.60622
12  92.32411 1.8804939 87.10854  97.53967
13  93.84429 1.5648690 88.93584  98.75274
14  96.25892 1.4793420 91.42689 101.09094
15 101.43282 1.4812862 96.59909 106.26655
16 102.94162 1.2482948 98.29979 107.58344
17 102.91289 2.2008808 97.35044 108.47535
18 101.17864 0.9109945 96.76683 105.59046
19 100.93182 0.8768975 96.53981 105.32384
20 103.34753 0.7051871 99.04485 107.65021
> 
> print( predict( fitwlsi3e, interval = "prediction", level = 0.925 ) )
   demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1     97.57658   93.87091  101.28226    98.27422   93.64898   102.8995
2     99.65233   95.96505  103.33961    99.52393   94.85563   104.1922
3     99.61278   95.93964  103.28591    99.70657   95.06371   104.3494
4     99.77140   96.08147  103.46133    99.94337   95.28717   104.5996
5    102.22239   98.56690  105.87788   102.46894   97.76844   107.1694
6    102.01141   98.36935  105.65346   102.35619   97.69694   107.0154
7    102.39175   98.74324  106.04027   102.26890   97.63341   106.9044
8    102.75509   99.05698  106.45320   104.27798   99.50987   109.0461
9    101.66624   97.99894  105.33355   102.94715   98.26901   107.6253
10   100.76849   96.96707  104.56992   100.32009   95.54225   105.0979
11    95.81513   91.94116   99.68909    95.88933   90.99290   100.7858
12    94.68343   90.80730   98.55956    93.94912   88.90505    98.9932
13    95.91268   92.09062   99.73473    95.53556   90.59084   100.4803
14    99.06426   95.40782  102.72071    97.88023   93.15264   102.6078
15   104.13432  100.36819  107.90044   102.99148   98.32921   107.6538
16   103.77770  100.08173  107.47368   104.55379   99.91106   109.1965
17   104.57073  100.43316  108.70830   104.32783   99.22316   109.4325
18   101.89409   98.22249  105.56570   102.88178   98.23118   107.5324
19   103.37941   99.64506  107.11376   102.66325   97.95241   107.3741
20   106.30379  102.16598  110.44159   105.20427  100.12295   110.2856
> print( predict( fitwlsi3e$eq[[ 1 ]], interval = "prediction", level = 0.925 ) )
         fit       lwr       upr
1   97.57658  93.87091 101.28226
2   99.65233  95.96505 103.33961
3   99.61278  95.93964 103.28591
4   99.77140  96.08147 103.46133
5  102.22239  98.56690 105.87788
6  102.01141  98.36935 105.65346
7  102.39175  98.74324 106.04027
8  102.75509  99.05698 106.45320
9  101.66624  97.99894 105.33355
10 100.76849  96.96707 104.56992
11  95.81513  91.94116  99.68909
12  94.68343  90.80730  98.55956
13  95.91268  92.09062  99.73473
14  99.06426  95.40782 102.72071
15 104.13432 100.36819 107.90044
16 103.77770 100.08173 107.47368
17 104.57073 100.43316 108.70830
18 101.89409  98.22249 105.56570
19 103.37941  99.64506 107.11376
20 106.30379 102.16598 110.44159
> 
> print( predict( fitwlsi4, interval = "confidence", newdata = predictData ) )
   demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1     103.5199  102.00084   105.0389    96.38809   94.76510   98.01109
2     106.0338  104.44438   107.6232    97.65118   96.27098   99.03138
3     105.9488  104.34039   107.5573    97.83778   96.43046   99.24511
4     106.1788  104.57348   107.7841    98.07886   96.74406   99.41366
5     108.5986  106.29482   110.9023   100.63072   98.49350  102.76795
6     108.4343  106.23123   110.6373   100.51896   98.59354  102.44438
7     108.9386  106.71285   111.1643   100.43288   98.71460  102.15116
8     109.5265  107.28143   111.7715   102.46241  100.73508  104.18974
9     107.9005  105.61588   110.1851   101.12228   98.88701  103.35755
10    106.6405  104.11810   109.1628    98.47358   95.88227  101.06489
11    101.1951   99.03450   103.3558    94.00371   91.11466   96.89275
12    100.2112   98.56106   101.8614    92.04709   88.80335   95.29084
13    101.7871  100.53624   103.0380    93.65001   90.80091   96.49911
14    105.1057  103.33284   106.8785    96.01905   93.57783   98.46027
15    110.5939  107.79986   113.3880   101.18029   98.80672  103.55386
16    110.3592  107.76427   112.9540   102.75893  100.60437  104.91350
17    110.6579  107.29788   114.0179   102.53431   99.02766  106.04096
18    108.5274  106.47135   110.5834   101.07521   99.38595  102.76447
19    110.2738  107.88153   112.6660   100.85665   99.16098  102.55232
20    113.9221  110.60991   117.2343   103.42264  102.09559  104.74968
> print( predict( fitwlsi4$eq[[ 2 ]], interval = "confidence",
+    newdata = predictData ) )
         fit       lwr       upr
1   96.38809  94.76510  98.01109
2   97.65118  96.27098  99.03138
3   97.83778  96.43046  99.24511
4   98.07886  96.74406  99.41366
5  100.63072  98.49350 102.76795
6  100.51896  98.59354 102.44438
7  100.43288  98.71460 102.15116
8  102.46241 100.73508 104.18974
9  101.12228  98.88701 103.35755
10  98.47358  95.88227 101.06489
11  94.00371  91.11466  96.89275
12  92.04709  88.80335  95.29084
13  93.65001  90.80091  96.49911
14  96.01905  93.57783  98.46027
15 101.18029  98.80672 103.55386
16 102.75893 100.60437 104.91350
17 102.53431  99.02766 106.04096
18 101.07521  99.38595 102.76447
19 100.85665  99.16098 102.55232
20 103.42264 102.09559 104.74968
> 
> print( predict( fitwlsi5e, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.01 ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1     97.52483     0.5400036       2.009124   97.49947   97.55019    98.23991
2     99.57775     0.4702323       1.991505   99.55261   99.60289    99.57457
3     99.54870     0.4529386       1.987493   99.52361   99.57379    99.74542
4     99.69530     0.4738147       1.992354   99.67015   99.72045   100.00564
5    102.26836     0.4326308       1.982964  102.24333  102.29339   102.43665
6    102.03491     0.4170038       1.979613  102.00992  102.05990   102.35121
7    102.39922     0.4391323       1.984392  102.37417  102.42427   102.29429
8    102.71840     0.5356140       2.007949  102.69305  102.74374   104.39066
9    101.72499     0.4460194       1.985928  101.69992  101.75006   102.89761
10   100.88403     0.6272902       2.034323  100.85835  100.90971   100.15337
11    95.83474     0.8311882       2.106146   95.80815   95.86132    95.71858
12    94.61045     0.8057985       2.096255   94.58399   94.63692    93.86719
13    95.80250     0.6758509       2.049817   95.77663   95.82838    95.54463
14    99.05480     0.4579061       1.988631   99.02969   99.07990    97.83614
15   104.24622     0.5707106       2.017594  104.22075  104.27169   102.92842
16   103.83999     0.5080032       2.000761  103.81474  103.86525   104.56735
17   104.80403     0.8766627       2.124503  104.77721  104.83085   104.12261
18   101.85502     0.4768610       1.993081  101.82986  101.88017   102.98553
19   103.33825     0.6023452       2.026770  103.31267  103.36383   102.79879
20   106.20151     1.0999909       2.225973  106.17341  106.22961   105.50543
   supply.se.fit supply.se.pred supply.lwr supply.upr
1      0.5983125       2.524271   98.20804   98.27177
2      0.6795139       2.544741   99.54245   99.60670
3      0.6343129       2.533045   99.71344   99.77739
4      0.6441366       2.535523   99.97363  100.03764
5      0.7543882       2.565749  102.40426  102.46904
6      0.6812909       2.545216  102.31908  102.38334
7      0.6259133       2.530955  102.26234  102.32624
8      0.8001120       2.579563  104.35810  104.42323
9      0.7013499       2.550658  102.86541  102.92981
10     0.7162473       2.554795  100.12112  100.18562
11     0.9176132       2.618393   95.68553   95.75163
12     1.2289238       2.743031   93.83257   93.90182
13     1.1321679       2.701068   95.51054   95.57873
14     0.7973588       2.578710   97.80359   97.86869
15     0.6565249       2.538699  102.89637  102.96046
16     0.6453483       2.535831  104.53534  104.59936
17     1.1512322       2.709114  104.08841  104.15681
18     0.5753597       2.518929  102.95373  103.01732
19     0.6494177       2.536870  102.76677  102.83082
20     0.8747639       2.603685  105.47256  105.53830
> print( predict( fitwlsi5e$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.01 ) )
         fit    se.fit  se.pred       lwr       upr
1   97.52483 0.5400036 2.009124  97.49947  97.55019
2   99.57775 0.4702323 1.991505  99.55261  99.60289
3   99.54870 0.4529386 1.987493  99.52361  99.57379
4   99.69530 0.4738147 1.992354  99.67015  99.72045
5  102.26836 0.4326308 1.982964 102.24333 102.29339
6  102.03491 0.4170038 1.979613 102.00992 102.05990
7  102.39922 0.4391323 1.984392 102.37417 102.42427
8  102.71840 0.5356140 2.007949 102.69305 102.74374
9  101.72499 0.4460194 1.985928 101.69992 101.75006
10 100.88403 0.6272902 2.034323 100.85835 100.90971
11  95.83474 0.8311882 2.106146  95.80815  95.86132
12  94.61045 0.8057985 2.096255  94.58399  94.63692
13  95.80250 0.6758509 2.049817  95.77663  95.82838
14  99.05480 0.4579061 1.988631  99.02969  99.07990
15 104.24622 0.5707106 2.017594 104.22075 104.27169
16 103.83999 0.5080032 2.000761 103.81474 103.86525
17 104.80403 0.8766627 2.124503 104.77721 104.83085
18 101.85502 0.4768610 1.993081 101.82986 101.88017
19 103.33825 0.6023452 2.026770 103.31267 103.36383
20 106.20151 1.0999909 2.225973 106.17341 106.22961
> 
> # predict just one observation
> smallData <- data.frame( price = 130, income = 150, farmPrice = 120,
+    trend = 25 )
> 
> print( predict( fitwls1, newdata = smallData ) )
  demand.pred supply.pred
1    108.9719    115.1066
> print( predict( fitwls1$eq[[ 1 ]], newdata = smallData ) )
       fit
1 108.9719
> 
> print( predict( fitwls2e, se.fit = TRUE, level = 0.9,
+    newdata = smallData ) )
  demand.pred demand.se.fit supply.pred supply.se.fit
1    108.6751      2.232114    116.4698      3.029383
> print( predict( fitwls2e$eq[[ 1 ]], se.pred = TRUE, level = 0.99,
+    newdata = smallData ) )
       fit  se.pred
1 108.6751 2.955486
> 
> print( predict( fitwls3, interval = "prediction", level = 0.975,
+    newdata = smallData ) )
  demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1    108.6895   101.4168   115.9622    116.4848   106.6985   126.2711
> print( predict( fitwls3$eq[[ 1 ]], interval = "confidence", level = 0.8,
+    newdata = smallData ) )
       fit      lwr      upr
1 108.6895 105.5235 111.8555
> 
> print( predict( fitwls4e, se.fit = TRUE, interval = "confidence",
+    level = 0.999, newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1    108.3841      2.022465   101.1211   115.6470    117.1831      2.023029
  supply.lwr supply.upr
1   109.9181   124.4481
> print( predict( fitwls4e$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.75, newdata = smallData ) )
       fit  se.pred      lwr      upr
1 117.1831 3.179007 113.4644 120.9018
> 
> print( predict( fitwls5, se.fit = TRUE, interval = "prediction",
+    newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1    108.4158      2.204294   102.4616   114.3700    117.1955      2.232657
  supply.lwr supply.upr
1   110.4619   123.9290
> print( predict( fitwls5$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    newdata = smallData ) )
       fit  se.pred      lwr      upr
1 108.4158 2.932953 103.9409 112.8908
> 
> print( predict( fitwlsi3e, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1    108.6779      2.225366       2.950308   106.6664   110.6893    116.4726
  supply.se.fit supply.se.pred supply.lwr supply.upr
1       3.03627       3.897725   113.8153     119.13
> print( predict( fitwlsi3e$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
       fit   se.fit  se.pred     lwr      upr
1 108.6779 2.225366 2.950308 107.963 109.3927
> 
> 
> ## ************ correlation of predicted values ***************
> print( correlation.systemfit( fitwls1, 2, 1 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fitwls2e, 1, 2 ) )
               [,1]
 [1,]  0.4115250948
 [2,]  0.1476243455
 [3,]  0.1477105740
 [4,]  0.1076538329
 [5,] -0.0692837781
 [6,] -0.0530387684
 [7,] -0.0515507551
 [8,] -0.0061527116
 [9,] -0.0003325098
[10,] -0.0012616002
[11,]  0.0485737003
[12,]  0.0649964981
[13,]  0.0246180879
[14,] -0.0284850242
[15,]  0.1749800980
[16,]  0.2527224191
[17,]  0.1033924160
[18,]  0.0742187805
[19,]  0.1565453583
[20,]  0.1354384602
> 
> print( correlation.systemfit( fitwls3, 2, 1 ) )
               [,1]
 [1,]  0.4059007052
 [2,]  0.1453642164
 [3,]  0.1453753421
 [4,]  0.1058345766
 [5,] -0.0679578282
 [6,] -0.0520264637
 [7,] -0.0505428859
 [8,] -0.0060310164
 [9,] -0.0003260297
[10,] -0.0012373958
[11,]  0.0475335961
[12,]  0.0634931455
[13,]  0.0240601297
[14,] -0.0279098394
[15,]  0.1715798057
[16,]  0.2482122651
[17,]  0.1014092496
[18,]  0.0730842901
[19,]  0.1539499362
[20,]  0.1329437387
> 
> print( correlation.systemfit( fitwls4e, 1, 2 ) )
              [,1]
 [1,]  0.381624440
 [2,]  0.291726703
 [3,]  0.254209402
 [4,]  0.285981118
 [5,] -0.027748597
 [6,] -0.049737587
 [7,] -0.058503091
 [8,]  0.093878722
 [9,]  0.094692182
[10,]  0.438137210
[11,]  0.105586324
[12,]  0.008757484
[13,]  0.040901768
[14,] -0.039844430
[15,]  0.407668956
[16,]  0.245707948
[17,]  0.641600205
[18,]  0.240373572
[19,]  0.340751504
[20,]  0.542701864
> 
> print( correlation.systemfit( fitwls5, 2, 1 ) )
              [,1]
 [1,]  0.377463361
 [2,]  0.293573225
 [3,]  0.255278767
 [4,]  0.287508859
 [5,] -0.027357165
 [6,] -0.049208930
 [7,] -0.057831291
 [8,]  0.093232705
 [9,]  0.094422234
[10,]  0.437498987
[11,]  0.102725087
[12,]  0.007198567
[13,]  0.040430021
[14,] -0.039645302
[15,]  0.406196629
[16,]  0.242970462
[17,]  0.640554444
[18,]  0.236242777
[19,]  0.334674502
[20,]  0.537750325
> 
> print( correlation.systemfit( fitwlsi1e, 1, 2 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fitwlsi2, 2, 1 ) )
               [,1]
 [1,]  0.4046963582
 [2,]  0.1448812792
 [3,]  0.1448771320
 [4,]  0.1054476389
 [5,] -0.0676775463
 [6,] -0.0518124438
 [7,] -0.0503300691
 [8,] -0.0060053343
 [9,] -0.0003246611
[10,] -0.0012322796
[11,]  0.0473150301
[12,]  0.0631785831
[13,]  0.0239432437
[14,] -0.0277885882
[15,]  0.1708619045
[16,]  0.2472564637
[17,]  0.1009901318
[18,]  0.0728417781
[19,]  0.1533975265
[20,]  0.1324154824
> 
> print( correlation.systemfit( fitwlsi3e, 1, 2 ) )
               [,1]
 [1,]  0.4104849041
 [2,]  0.1472057720
 [3,]  0.1472776244
 [4,]  0.1073158269
 [5,] -0.0690363738
 [6,] -0.0528499086
 [7,] -0.0513625613
 [8,] -0.0061299793
 [9,] -0.0003313000
[10,] -0.0012570838
[11,]  0.0483788413
[12,]  0.0647140218
[13,]  0.0245133343
[14,] -0.0283775000
[15,]  0.1743451185
[16,]  0.2518823415
[17,]  0.1030223295
[18,]  0.0740087349
[19,]  0.1560633777
[20,]  0.1349735335
> 
> print( correlation.systemfit( fitwlsi4, 2, 1 ) )
              [,1]
 [1,]  0.376715715
 [2,]  0.293869901
 [3,]  0.255442794
 [4,]  0.287749865
 [5,] -0.027287463
 [6,] -0.049113757
 [7,] -0.057711054
 [8,]  0.093114682
 [9,]  0.094366574
[10,]  0.437361582
[11,]  0.102226968
[12,]  0.006932181
[13,]  0.040345202
[14,] -0.039607646
[15,]  0.405908578
[16,]  0.242478183
[17,]  0.640335727
[18,]  0.235511131
[19,]  0.333601416
[20,]  0.536872895
> 
> print( correlation.systemfit( fitwlsi5e, 1, 2 ) )
              [,1]
 [1,]  0.380977079
 [2,]  0.292036504
 [3,]  0.254393812
 [4,]  0.286240302
 [5,] -0.027687296
 [6,] -0.049655459
 [7,] -0.058398266
 [8,]  0.093779446
 [9,]  0.094654795
[10,]  0.438052437
[11,]  0.105130854
[12,]  0.008506098
[13,]  0.040828414
[14,] -0.039814654
[15,]  0.407455034
[16,]  0.245282340
[17,]  0.641457306
[18,]  0.239724174
[19,]  0.339793982
[20,]  0.541923460
> 
> 
> ## ************ Log-Likelihood values ***************
> print( logLik( fitwls1 ) )
'log Lik.' -67.79584 (df=9)
> 
> print( logLik( fitwls2e ) )
'log Lik.' -61.49829 (df=8)
> 
> print( logLik( fitwls3 ) )
'log Lik.' -61.43061 (df=8)
> 
> print( logLik( fitwls4e ) )
'log Lik.' -62.18226 (df=7)
> 
> print( logLik( fitwls5 ) )
'log Lik.' -62.10806 (df=7)
> 
> print( logLik( fitwlsi1e ) )
'log Lik.' -67.79584 (df=9)
> 
> print( logLik( fitwlsi2 ) )
'log Lik.' -61.4169 (df=8)
> 
> print( logLik( fitwlsi3e ) )
'log Lik.' -61.4853 (df=8)
> 
> print( logLik( fitwlsi4 ) )
'log Lik.' -62.09546 (df=7)
> 
> print( logLik( fitwlsi5e ) )
'log Lik.' -62.17024 (df=7)
> 
> 
> ## ************** F tests ****************
> # testing first restriction
> print( linear.hypothesis( fitwls1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwls1
Model 2: restricted model

  Res.Df Df     F Pr(>F)
1     33                
2     34 -1 0.644  0.428
> linear.hypothesis( fitwls1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwls1
Model 2: restricted model

  Res.Df Df     F Pr(>F)
1     33                
2     34 -1 0.644  0.428
> 
> print( linear.hypothesis( fitwlsi1e, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwlsi1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.6569 0.4235
> linear.hypothesis( fitwlsi1e, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwlsi1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.6569 0.4235
> 
> # testing second restriction
> restrOnly2m <- matrix(0,1,7)
> restrOnly2q <- 0.5
> restrOnly2m[1,2] <- -1
> restrOnly2m[1,5] <-  1
> restrictOnly2 <- "- demand_price + supply_price = 0.5"
> # first restriction not imposed 
> print( linear.hypothesis( fitwls1e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.0317 0.8599
> linear.hypothesis( fitwls1e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.0317 0.8599
> 
> print( linear.hypothesis( fitwlsi1, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.0316   0.86
> linear.hypothesis( fitwlsi1, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     34 -1 0.0316   0.86
> 
> # first restriction imposed
> print( linear.hypothesis( fitwls2, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls2
Model 2: restricted model

  Res.Df Df    F Pr(>F)
1     34               
2     35 -1 0.08  0.779
> linear.hypothesis( fitwls2, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls2
Model 2: restricted model

  Res.Df Df    F Pr(>F)
1     34               
2     35 -1 0.08  0.779
> 
> print( linear.hypothesis( fitwls3, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls3
Model 2: restricted model

  Res.Df Df    F Pr(>F)
1     34               
2     35 -1 0.08  0.779
> linear.hypothesis( fitwls3, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls3
Model 2: restricted model

  Res.Df Df    F Pr(>F)
1     34               
2     35 -1 0.08  0.779
> 
> print( linear.hypothesis( fitwlsi2e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi2e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0835 0.7743
> linear.hypothesis( fitwlsi2e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi2e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0835 0.7743
> 
> print( linear.hypothesis( fitwlsi3e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi3e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0835 0.7743
> linear.hypothesis( fitwlsi3e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi3e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     34                 
2     35 -1 0.0835 0.7743
> 
> # testing both of the restrictions
> print( linear.hypothesis( fitwls1e, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.3707 0.6931
> linear.hypothesis( fitwls1e, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.3707 0.6931
> 
> print( linear.hypothesis( fitwlsi1, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.3621  0.699
> linear.hypothesis( fitwlsi1, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df      F Pr(>F)
1     33                 
2     35 -2 0.3621  0.699
> 
> 
> ## ************** Wald tests ****************
> # testing first restriction
> print( linear.hypothesis( fitwls1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwls1
Model 2: restricted model

  Res.Df Df Chisq Pr(>Chisq)
1     33                    
2     34 -1 0.644     0.4223
> linear.hypothesis( fitwls1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwls1
Model 2: restricted model

  Res.Df Df Chisq Pr(>Chisq)
1     33                    
2     34 -1 0.644     0.4223
> 
> print( linear.hypothesis( fitwlsi1e, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwlsi1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.7962     0.3722
> linear.hypothesis( fitwlsi1e, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: fitwlsi1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.7962     0.3722
> 
> # testing second restriction
> # first restriction not imposed
> print( linear.hypothesis( fitwls1e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.0384     0.8447
> linear.hypothesis( fitwls1e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.0384     0.8447
> 
> print( linear.hypothesis( fitwlsi1, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.0316     0.8589
> linear.hypothesis( fitwlsi1, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     34 -1 0.0316     0.8589
> 
> # first restriction imposed
> print( linear.hypothesis( fitwls2, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls2
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0776     0.7806
> linear.hypothesis( fitwls2, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls2
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0776     0.7806
> 
> print( linear.hypothesis( fitwls3, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls3
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0776     0.7806
> linear.hypothesis( fitwls3, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwls3
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0776     0.7806
> 
> print( linear.hypothesis( fitwlsi2e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi2e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0983     0.7539
> linear.hypothesis( fitwlsi2e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi2e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0983     0.7539
> 
> print( linear.hypothesis( fitwlsi3e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi3e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0983     0.7539
> linear.hypothesis( fitwlsi3e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
-demand_price + supply_price = 0.5

Model 1: fitwlsi3e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     34                     
2     35 -1 0.0983     0.7539
> 
> # testing both of the restrictions
> print( linear.hypothesis( fitwls1e, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 0.8986     0.6381
> linear.hypothesis( fitwls1e, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwls1e
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 0.8986     0.6381
> 
> print( linear.hypothesis( fitwlsi1, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 0.7242     0.6962
> linear.hypothesis( fitwlsi1, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
-demand_price + supply_price = 0.5

Model 1: fitwlsi1
Model 2: restricted model

  Res.Df Df  Chisq Pr(>Chisq)
1     33                     
2     35 -2 0.7242     0.6962
> 
> 
> ## ****************** model frame **************************
> print( mf <- model.frame( fitwls1 ) )
   consump   price income farmPrice trend
1   98.485 100.323   87.4      98.0     1
2   99.187 104.264   97.6      99.1     2
3  102.163 103.435   96.7      99.1     3
4  101.504 104.506   98.2      98.1     4
5  104.240  98.001   99.8     110.8     5
6  103.243  99.456  100.5     108.2     6
7  103.993 101.066  103.2     105.6     7
8   99.900 104.763  107.8     109.8     8
9  100.350  96.446   96.6     108.7     9
10 102.820  91.228   88.9     100.6    10
11  95.435  93.085   75.1      81.0    11
12  92.424  98.801   76.9      68.6    12
13  94.535 102.908   84.6      70.9    13
14  98.757  98.756   90.6      81.4    14
15 105.797  95.119  103.1     102.3    15
16 100.225  98.451  105.1     105.0    16
17 103.522  86.498   96.4     110.5    17
18  99.929 104.016  104.4      92.5    18
19 105.223 105.769  110.7      89.3    19
20 106.232 113.490  127.1      93.0    20
> print( mf1 <- model.frame( fitwls1$eq[[ 1 ]] ) )
   consump   price income
1   98.485 100.323   87.4
2   99.187 104.264   97.6
3  102.163 103.435   96.7
4  101.504 104.506   98.2
5  104.240  98.001   99.8
6  103.243  99.456  100.5
7  103.993 101.066  103.2
8   99.900 104.763  107.8
9  100.350  96.446   96.6
10 102.820  91.228   88.9
11  95.435  93.085   75.1
12  92.424  98.801   76.9
13  94.535 102.908   84.6
14  98.757  98.756   90.6
15 105.797  95.119  103.1
16 100.225  98.451  105.1
17 103.522  86.498   96.4
18  99.929 104.016  104.4
19 105.223 105.769  110.7
20 106.232 113.490  127.1
> print( attributes( mf1 )$terms )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> print( mf2 <- model.frame( fitwls1$eq[[ 2 ]] ) )
   consump   price farmPrice trend
1   98.485 100.323      98.0     1
2   99.187 104.264      99.1     2
3  102.163 103.435      99.1     3
4  101.504 104.506      98.1     4
5  104.240  98.001     110.8     5
6  103.243  99.456     108.2     6
7  103.993 101.066     105.6     7
8   99.900 104.763     109.8     8
9  100.350  96.446     108.7     9
10 102.820  91.228     100.6    10
11  95.435  93.085      81.0    11
12  92.424  98.801      68.6    12
13  94.535 102.908      70.9    13
14  98.757  98.756      81.4    14
15 105.797  95.119     102.3    15
16 100.225  98.451     105.0    16
17 103.522  86.498     110.5    17
18  99.929 104.016      92.5    18
19 105.223 105.769      89.3    19
20 106.232 113.490      93.0    20
> print( attributes( mf2 )$terms )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> print( all.equal( mf, model.frame( fitwls2e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwls2e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwls3 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwls3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwls4e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwls4e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwls5 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwls5$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi1e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwlsi1e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi2 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwlsi2$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi3e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwlsi3e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi4 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwlsi4$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi5e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwlsi5e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> 
> ## **************** model matrix ************************
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls1e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( mm <- model.matrix( fitwlsi1e ) )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1                   1      100.323          87.4                  0
demand_2                   1      104.264          97.6                  0
demand_3                   1      103.435          96.7                  0
demand_4                   1      104.506          98.2                  0
demand_5                   1       98.001          99.8                  0
demand_6                   1       99.456         100.5                  0
demand_7                   1      101.066         103.2                  0
demand_8                   1      104.763         107.8                  0
demand_9                   1       96.446          96.6                  0
demand_10                  1       91.228          88.9                  0
demand_11                  1       93.085          75.1                  0
demand_12                  1       98.801          76.9                  0
demand_13                  1      102.908          84.6                  0
demand_14                  1       98.756          90.6                  0
demand_15                  1       95.119         103.1                  0
demand_16                  1       98.451         105.1                  0
demand_17                  1       86.498          96.4                  0
demand_18                  1      104.016         104.4                  0
demand_19                  1      105.769         110.7                  0
demand_20                  1      113.490         127.1                  0
supply_1                   0        0.000           0.0                  1
supply_2                   0        0.000           0.0                  1
supply_3                   0        0.000           0.0                  1
supply_4                   0        0.000           0.0                  1
supply_5                   0        0.000           0.0                  1
supply_6                   0        0.000           0.0                  1
supply_7                   0        0.000           0.0                  1
supply_8                   0        0.000           0.0                  1
supply_9                   0        0.000           0.0                  1
supply_10                  0        0.000           0.0                  1
supply_11                  0        0.000           0.0                  1
supply_12                  0        0.000           0.0                  1
supply_13                  0        0.000           0.0                  1
supply_14                  0        0.000           0.0                  1
supply_15                  0        0.000           0.0                  1
supply_16                  0        0.000           0.0                  1
supply_17                  0        0.000           0.0                  1
supply_18                  0        0.000           0.0                  1
supply_19                  0        0.000           0.0                  1
supply_20                  0        0.000           0.0                  1
          supply_price supply_farmPrice supply_trend
demand_1         0.000              0.0            0
demand_2         0.000              0.0            0
demand_3         0.000              0.0            0
demand_4         0.000              0.0            0
demand_5         0.000              0.0            0
demand_6         0.000              0.0            0
demand_7         0.000              0.0            0
demand_8         0.000              0.0            0
demand_9         0.000              0.0            0
demand_10        0.000              0.0            0
demand_11        0.000              0.0            0
demand_12        0.000              0.0            0
demand_13        0.000              0.0            0
demand_14        0.000              0.0            0
demand_15        0.000              0.0            0
demand_16        0.000              0.0            0
demand_17        0.000              0.0            0
demand_18        0.000              0.0            0
demand_19        0.000              0.0            0
demand_20        0.000              0.0            0
supply_1       100.323             98.0            1
supply_2       104.264             99.1            2
supply_3       103.435             99.1            3
supply_4       104.506             98.1            4
supply_5        98.001            110.8            5
supply_6        99.456            108.2            6
supply_7       101.066            105.6            7
supply_8       104.763            109.8            8
supply_9        96.446            108.7            9
supply_10       91.228            100.6           10
supply_11       93.085             81.0           11
supply_12       98.801             68.6           12
supply_13      102.908             70.9           13
supply_14       98.756             81.4           14
supply_15       95.119            102.3           15
supply_16       98.451            105.0           16
supply_17       86.498            110.5           17
supply_18      104.016             92.5           18
supply_19      105.769             89.3           19
supply_20      113.490             93.0           20
> print( mm1 <- model.matrix( fitwlsi1e$eq[[ 1 ]] ) )
   (Intercept)   price income
1            1 100.323   87.4
2            1 104.264   97.6
3            1 103.435   96.7
4            1 104.506   98.2
5            1  98.001   99.8
6            1  99.456  100.5
7            1 101.066  103.2
8            1 104.763  107.8
9            1  96.446   96.6
10           1  91.228   88.9
11           1  93.085   75.1
12           1  98.801   76.9
13           1 102.908   84.6
14           1  98.756   90.6
15           1  95.119  103.1
16           1  98.451  105.1
17           1  86.498   96.4
18           1 104.016  104.4
19           1 105.769  110.7
20           1 113.490  127.1
attr(,"assign")
[1] 0 1 2
> print( mm2 <- model.matrix( fitwlsi1e$eq[[ 2 ]] ) )
   (Intercept)   price farmPrice trend
1            1 100.323      98.0     1
2            1 104.264      99.1     2
3            1 103.435      99.1     3
4            1 104.506      98.1     4
5            1  98.001     110.8     5
6            1  99.456     108.2     6
7            1 101.066     105.6     7
8            1 104.763     109.8     8
9            1  96.446     108.7     9
10           1  91.228     100.6    10
11           1  93.085      81.0    11
12           1  98.801      68.6    12
13           1 102.908      70.9    13
14           1  98.756      81.4    14
15           1  95.119     102.3    15
16           1  98.451     105.0    16
17           1  86.498     110.5    17
18           1 104.016      92.5    18
19           1 105.769      89.3    19
20           1 113.490      93.0    20
attr(,"assign")
[1] 0 1 2 3
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwlsi1 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwlsi1$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwlsi1$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls1$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls2$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwls2 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls2$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwls2e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls2e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls2e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls2e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwlsi3$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwlsi3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwlsi3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwlsi3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwlsi3e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwlsi3e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwlsi3e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwlsi3e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls4e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwls4e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls4e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls4e$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwls4Sym ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls4Sym$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls4Sym$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls4Sym$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls5$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwls5 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls5$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls5$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwls5e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls5e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls5e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls5e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> 
> ## **************** formulas ************************
> formula( fitwls1 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwls2e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls2e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwls3 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls3$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwls4e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls4e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwls5 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwlsi1e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi1e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwlsi2 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwlsi3e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi3e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwlsi4 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi4$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwlsi5e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi5e$eq[[ 1 ]] )
consump ~ price + income
> 
> 
> ## **************** model terms *******************
> terms( fitwls1 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwls2e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls2e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwls3 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls3$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwls4e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls4e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwls5 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwlsi1e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi1e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwlsi2 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwlsi3e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi3e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwlsi4 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi4$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwlsi5e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi5e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
