
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( systemfit )
Loading required package: Matrix
Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

> options( digits = 3 )
> 
> data( "Kmenta" )
> useMatrix <- FALSE
> 
> demand <- consump ~ price + income
> supply <- consump ~ price + farmPrice + trend
> system <- list( demand = demand, supply = supply )
> restrm <- matrix(0,1,7)  # restriction matrix "R"
> restrm[1,3] <-  1
> restrm[1,7] <- -1
> restrict <- "demand_income - supply_trend = 0"
> restr2m <- matrix(0,2,7)  # restriction matrix "R" 2
> restr2m[1,3] <-  1
> restr2m[1,7] <- -1
> restr2m[2,2] <- -1
> restr2m[2,5] <-  1
> restr2q <- c( 0, 0.5 )  # restriction vector "q" 2
> restrict2 <- c( "demand_income - supply_trend = 0",
+    "- demand_price + supply_price = 0.5" )
> tc <- matrix(0,7,6)
> tc[1,1] <- 1
> tc[2,2] <- 1
> tc[3,3] <- 1
> tc[4,4] <- 1
> tc[5,5] <- 1
> tc[6,6] <- 1
> tc[7,3] <- 1
> restr3m <- matrix(0,1,6)  # restriction matrix "R" 2
> restr3m[1,2] <- -1
> restr3m[1,5] <-  1
> restr3q <- c( 0.5 )  # restriction vector "q" 2
> restrict3 <- "- C2 + C5 = 0.5"
> 
> 
> ## *************** WLS estimation ************************
> fitwls1 <- systemfit( system, "WLS", data = Kmenta, useMatrix = useMatrix )
> print( summary( fitwls1 ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    4.43  0.709      0.558

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   0.00
supply   0.00   5.78

The covariance matrix of the residuals
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     7.5194   13.29  2.1e-10 ***
price        -0.3163     0.0907   -3.49   0.0028 ** 
income        0.3346     0.0454    7.37  1.1e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    11.4629    5.08  0.00011 ***
price         0.1604     0.0949    1.69  0.11039    
farmPrice     0.2481     0.0462    5.37  6.2e-05 ***
trend         0.2483     0.0975    2.55  0.02157 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> 
> ## *************** WLS estimation (EViews-like) ************************
> fitwls1e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls1e, useDfSys = TRUE ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.02  0.709      0.537

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.17   0.00
supply   0.00   4.63

The covariance matrix of the residuals
       demand supply
demand   3.17   3.41
supply   3.41   4.63

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     6.9325   14.41  8.9e-16 ***
price        -0.3163     0.0836   -3.78  0.00062 ***
income        0.3346     0.0419    7.99  3.2e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    10.2527    5.68  2.4e-06 ***
price         0.1604     0.0849    1.89   0.0676 .  
farmPrice     0.2481     0.0413    6.01  9.5e-07 ***
trend         0.2483     0.0872    2.85   0.0075 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> 
> ## ************** WLS with cross-equation restriction ***************
> fitwls2 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls2 ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    2.35  0.703      0.622

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.98 2.44 0.643  0.576

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.78   0.00
supply   0.00   5.94

The covariance matrix of the residuals
       demand supply
demand   3.75   4.48
supply   4.48   5.98

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6582     7.5640   13.18  6.4e-15 ***
price        -0.2991     0.0887   -3.37   0.0019 ** 
income        0.3194     0.0415    7.70  6.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.936 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.75 MSE: 3.75 Root MSE: 1.936 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.1877    11.3165    4.97  1.9e-05 ***
price         0.1643     0.0960    1.71    0.096 .  
farmPrice     0.2580     0.0451    5.71  2.0e-06 ***
trend         0.3194     0.0415    7.70  6.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.445 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.627 MSE: 5.977 Root MSE: 2.445 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> # the same with symbolically specified restrictions
> fitwls2Sym <- systemfit( system, "WLS", data = Kmenta,
+    restrict.matrix = restrict, x = TRUE,
+    useMatrix = useMatrix )
> all.equal( fitwls2, fitwls2Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## ************** WLS with cross-equation restriction (EViews-like) *******
> fitwls2e <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fitwls2e ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    1.61  0.703      0.589

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.97 2.44 0.644  0.577

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.21   0.00
supply   0.00   4.75

The covariance matrix of the residuals
       demand supply
demand   3.19   3.69
supply   3.69   4.78

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6461     6.9734   14.29  6.7e-16 ***
price        -0.2982     0.0816   -3.65  0.00086 ***
income        0.3186     0.0381    8.37  8.9e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.937 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.794 MSE: 3.753 Root MSE: 1.937 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.2104    10.1248    5.55  3.3e-06 ***
price         0.1642     0.0859    1.91    0.064 .  
farmPrice     0.2579     0.0404    6.38  2.7e-07 ***
trend         0.3186     0.0381    8.37  8.9e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.444 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.561 MSE: 5.973 Root MSE: 2.444 
Multiple R-Squared: 0.644 Adjusted R-Squared: 0.577 

> 
> ## ******* WLS with cross-equation restriction via restrict.regMat **********
> fitwls3 <- systemfit( system,"WLS", data = Kmenta, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls3 ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    2.35  0.703      0.622

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.98 2.44 0.643  0.576

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.78   0.00
supply   0.00   5.94

The covariance matrix of the residuals
       demand supply
demand   3.75   4.48
supply   4.48   5.98

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6582     7.5640   13.18  6.4e-15 ***
price        -0.2991     0.0887   -3.37   0.0019 ** 
income        0.3194     0.0415    7.70  6.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.936 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.75 MSE: 3.75 Root MSE: 1.936 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.1877    11.3165    4.97  1.9e-05 ***
price         0.1643     0.0960    1.71    0.096 .  
farmPrice     0.2580     0.0451    5.71  2.0e-06 ***
trend         0.3194     0.0415    7.70  6.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.445 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.627 MSE: 5.977 Root MSE: 2.445 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## ******* WLS with cross-equation restriction via restrict.regMat (EViews-like) *****
> fitwls3e <- systemfit( system,"WLS", data = Kmenta, restrict.regMat = tc,
+    methodResidCov = "noDfCor", useMatrix = useMatrix )
> print( summary( fitwls3e ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    1.61  0.703      0.589

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.97 2.44 0.644  0.577

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.21   0.00
supply   0.00   4.75

The covariance matrix of the residuals
       demand supply
demand   3.19   3.69
supply   3.69   4.78

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6461     6.9734   14.29  6.7e-16 ***
price        -0.2982     0.0816   -3.65  0.00086 ***
income        0.3186     0.0381    8.37  8.9e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.937 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.794 MSE: 3.753 Root MSE: 1.937 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.2104    10.1248    5.55  3.3e-06 ***
price         0.1642     0.0859    1.91    0.064 .  
farmPrice     0.2579     0.0404    6.38  2.7e-07 ***
trend         0.3186     0.0381    8.37  8.9e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.444 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.561 MSE: 5.973 Root MSE: 2.444 
Multiple R-Squared: 0.644 Adjusted R-Squared: 0.577 

> 
> ## ***** WLS with 2 cross-equation restrictions ***************
> fitwls4 <- systemfit( system,"WLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, useMatrix = useMatrix )
> print( summary( fitwls4 ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.51  0.702      0.619

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.6 3.74 1.94 0.763  0.735
supply 20 16 96.3 6.02 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.76   0.00
supply   0.00   5.99

The covariance matrix of the residuals
       demand supply
demand   3.74   4.47
supply   4.47   6.02

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9138     6.0474   16.69  < 2e-16 ***
price        -0.3160     0.0648   -4.87  2.3e-05 ***
income        0.3238     0.0385    8.42  6.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.636 MSE: 3.743 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9416     7.9687    6.77  7.6e-08 ***
price         0.1840     0.0648    2.84   0.0075 ** 
farmPrice     0.2603     0.0446    5.84  1.3e-06 ***
trend         0.3238     0.0385    8.42  6.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.453 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.268 MSE: 6.017 Root MSE: 2.453 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> # the same with symbolically specified restrictions
> fitwls4Sym <- systemfit( system, "WLS", data = Kmenta,
+    restrict.matrix = restrict2, useMatrix = useMatrix )
> all.equal( fitwls4, fitwls4Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## ***** WLS with 2 cross-equation restrictions (EViews-like) **********
> fitwls4e <- systemfit( system,"WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls4e ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.72  0.702      0.586

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.763  0.735
supply 20 16 96.2 6.01 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand    3.2   0.00
supply    0.0   4.79

The covariance matrix of the residuals
       demand supply
demand   3.18   3.69
supply   3.69   4.81

The correlations of the residuals
       demand supply
demand  1.000  0.942
supply  0.942  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9762     5.5234   18.28  < 2e-16 ***
price        -0.3160     0.0589   -5.37  5.3e-06 ***
income        0.3233     0.0352    9.18  7.6e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.67 MSE: 3.745 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9630     7.2089    7.49  9.1e-09 ***
price         0.1840     0.0589    3.13   0.0036 ** 
farmPrice     0.2602     0.0399    6.53  1.6e-07 ***
trend         0.3233     0.0352    9.18  7.6e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.452 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.215 MSE: 6.013 Root MSE: 2.452 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> ## *********** WLS with 2 cross-equation restrictions via R and restrict.regMat ******
> fitwls5 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwls5 ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.51  0.702      0.619

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.6 3.74 1.94 0.763  0.735
supply 20 16 96.3 6.02 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.76   0.00
supply   0.00   5.99

The covariance matrix of the residuals
       demand supply
demand   3.74   4.47
supply   4.47   6.02

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9138     6.0474   16.69  < 2e-16 ***
price        -0.3160     0.0648   -4.87  2.3e-05 ***
income        0.3238     0.0385    8.42  6.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.636 MSE: 3.743 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9416     7.9687    6.77  7.6e-08 ***
price         0.1840     0.0648    2.84   0.0075 ** 
farmPrice     0.2603     0.0446    5.84  1.3e-06 ***
trend         0.3238     0.0385    8.42  6.3e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.453 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.268 MSE: 6.017 Root MSE: 2.453 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> # the same with symbolically specified restrictions
> fitwls5Sym <- systemfit( system, "WLS", data = Kmenta,
+    restrict.matrix = restrict3, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> all.equal( fitwls5, fitwls5Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## *********** WLS with 2 cross-equation restrictions via R and restrict.regMat (EViews-like)
> fitwls5e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    useMatrix = useMatrix )
> print( summary( fitwls5e ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.72  0.702      0.586

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.763  0.735
supply 20 16 96.2 6.01 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand    3.2   0.00
supply    0.0   4.79

The covariance matrix of the residuals
       demand supply
demand   3.18   3.69
supply   3.69   4.81

The correlations of the residuals
       demand supply
demand  1.000  0.942
supply  0.942  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9762     5.5234   18.28  < 2e-16 ***
price        -0.3160     0.0589   -5.37  5.3e-06 ***
income        0.3233     0.0352    9.18  7.6e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.67 MSE: 3.745 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9630     7.2089    7.49  9.1e-09 ***
price         0.1840     0.0589    3.13   0.0036 ** 
farmPrice     0.2602     0.0399    6.53  1.6e-07 ***
trend         0.3233     0.0352    9.18  7.6e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.452 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.215 MSE: 6.013 Root MSE: 2.452 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> ## *************** iterated WLS estimation *********************
> fitwlsi1 <- systemfit( system, "WLS", data = Kmenta,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi1, useDfSys = TRUE ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    4.43  0.709      0.558

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   0.00
supply   0.00   5.78

The covariance matrix of the residuals
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     7.5194   13.29  8.4e-15 ***
price        -0.3163     0.0907   -3.49   0.0014 ** 
income        0.3346     0.0454    7.37  1.8e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    11.4629    5.08  1.4e-05 ***
price         0.1604     0.0949    1.69    0.100    
farmPrice     0.2481     0.0462    5.37  6.1e-06 ***
trend         0.2483     0.0975    2.55    0.016 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> 
> ## *************** iterated WLS estimation (EViews-like) ************
> fitwlsi1e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi1e, useDfSys = TRUE ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.02  0.709      0.537

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.17   0.00
supply   0.00   4.63

The covariance matrix of the residuals
       demand supply
demand   3.17   3.41
supply   3.41   4.63

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.8954     6.9325   14.41  8.9e-16 ***
price        -0.3163     0.0836   -3.78  0.00062 ***
income        0.3346     0.0419    7.99  3.2e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.93 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.332 MSE: 3.725 Root MSE: 1.93 
Multiple R-Squared: 0.764 Adjusted R-Squared: 0.736 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  58.2754    10.2527    5.68  2.4e-06 ***
price         0.1604     0.0849    1.89   0.0676 .  
farmPrice     0.2481     0.0413    6.01  9.5e-07 ***
trend         0.2483     0.0872    2.85   0.0075 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.405 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 92.551 MSE: 5.784 Root MSE: 2.405 
Multiple R-Squared: 0.655 Adjusted R-Squared: 0.59 

> 
> ## ****** iterated WLS with cross-equation restriction ***************
> fitwlsi2 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi2 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    2.34  0.703      0.623

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.98 2.44 0.643  0.576

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.75   0.00
supply   0.00   5.98

The covariance matrix of the residuals
       demand supply
demand   3.75   4.48
supply   4.48   5.98

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6607     7.5378   13.22  5.8e-15 ***
price        -0.2993     0.0884   -3.39   0.0018 ** 
income        0.3196     0.0414    7.72  5.6e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.936 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.741 MSE: 3.749 Root MSE: 1.936 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.1830    11.3487    4.95  2.0e-05 ***
price         0.1643     0.0963    1.71    0.097 .  
farmPrice     0.2580     0.0453    5.70  2.1e-06 ***
trend         0.3196     0.0414    7.72  5.6e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.445 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.641 MSE: 5.978 Root MSE: 2.445 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## ****** iterated WLS with cross-equation restriction (EViews-like) ********
> fitwlsi2e <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restrm,
+    methodResidCov = "noDfCor", maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi2e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.6  0.703      0.589

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.97 2.44 0.644  0.577

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.19   0.00
supply   0.00   4.78

The covariance matrix of the residuals
       demand supply
demand   3.19   3.69
supply   3.69   4.78

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6484     6.9516   14.33  4.4e-16 ***
price        -0.2984     0.0814   -3.67  0.00083 ***
income        0.3188     0.0380    8.39  8.4e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.937 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.785 MSE: 3.752 Root MSE: 1.937 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.2061    10.1500    5.54  3.4e-06 ***
price         0.1642     0.0861    1.91    0.065 .  
farmPrice     0.2579     0.0405    6.37  2.9e-07 ***
trend         0.3188     0.0380    8.39  8.4e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.444 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.573 MSE: 5.973 Root MSE: 2.444 
Multiple R-Squared: 0.644 Adjusted R-Squared: 0.577 

> 
> ## ******* iterated WLS with cross-equation restriction via restrict.regMat **********
> fitwlsi3 <- systemfit( system, "WLS", data = Kmenta, restrict.regMat = tc,
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi3 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    2.34  0.703      0.623

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.98 2.44 0.643  0.576

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.75   0.00
supply   0.00   5.98

The covariance matrix of the residuals
       demand supply
demand   3.75   4.48
supply   4.48   5.98

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6607     7.5378   13.22  5.8e-15 ***
price        -0.2993     0.0884   -3.39   0.0018 ** 
income        0.3196     0.0414    7.72  5.6e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.936 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.741 MSE: 3.749 Root MSE: 1.936 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.1830    11.3487    4.95  2.0e-05 ***
price         0.1643     0.0963    1.71    0.097 .  
farmPrice     0.2580     0.0453    5.70  2.1e-06 ***
trend         0.3196     0.0414    7.72  5.6e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.445 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.641 MSE: 5.978 Root MSE: 2.445 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> ## ******* iterated WLS with cross-equation restriction via restrict.regMat (EViews-like) ***
> fitwlsi3e <- systemfit( system, "WLS", data = Kmenta, restrict.regMat = tc,
+    methodResidCov = "noDfCor", maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi3e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.6  0.703      0.589

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.97 2.44 0.644  0.577

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.19   0.00
supply   0.00   4.78

The covariance matrix of the residuals
       demand supply
demand   3.19   3.69
supply   3.69   4.78

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6484     6.9516   14.33  4.4e-16 ***
price        -0.2984     0.0814   -3.67  0.00083 ***
income        0.3188     0.0380    8.39  8.4e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.937 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.785 MSE: 3.752 Root MSE: 1.937 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.2061    10.1500    5.54  3.4e-06 ***
price         0.1642     0.0861    1.91    0.065 .  
farmPrice     0.2579     0.0405    6.37  2.9e-07 ***
trend         0.3188     0.0380    8.39  8.4e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.444 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.573 MSE: 5.973 Root MSE: 2.444 
Multiple R-Squared: 0.644 Adjusted R-Squared: 0.577 

> nobs( fitwlsi3e )
[1] 40
> 
> ## ******* iterated WLS with 2 cross-equation restrictions ***********
> fitwlsi4 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi4 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.51  0.702      0.619

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.6 3.74 1.94 0.763  0.735
supply 20 16 96.3 6.02 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.74   0.00
supply   0.00   6.02

The covariance matrix of the residuals
       demand supply
demand   3.74   4.47
supply   4.47   6.02

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9031     6.0396   16.71  < 2e-16 ***
price        -0.3159     0.0648   -4.88  2.3e-05 ***
income        0.3239     0.0384    8.43  6.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.63 MSE: 3.743 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9379     7.9718    6.77  7.7e-08 ***
price         0.1841     0.0648    2.84   0.0075 ** 
farmPrice     0.2603     0.0447    5.83  1.3e-06 ***
trend         0.3239     0.0384    8.43  6.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.453 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.277 MSE: 6.017 Root MSE: 2.453 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> ## ******* iterated WLS with 2 cross-equation restrictions (EViews-like) *****
> fitwlsi4e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q, maxit = 100,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi4e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.72  0.702      0.586

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.763  0.735
supply 20 16 96.2 6.01 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.18   0.00
supply   0.00   4.81

The covariance matrix of the residuals
       demand supply
demand   3.18   3.69
supply   3.69   4.81

The correlations of the residuals
       demand supply
demand  1.000  0.942
supply  0.942  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9662     5.5170   18.30  < 2e-16 ***
price        -0.3160     0.0589   -5.37  5.2e-06 ***
income        0.3234     0.0352    9.20  7.3e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.665 MSE: 3.745 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9595     7.2114    7.48  9.2e-09 ***
price         0.1840     0.0589    3.13   0.0036 ** 
farmPrice     0.2602     0.0400    6.51  1.6e-07 ***
trend         0.3234     0.0352    9.20  7.3e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.452 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.223 MSE: 6.014 Root MSE: 2.452 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> ## ***** iterated WLS with 2 cross-equation restrictions via R and restrict.regMat ******
> fitwlsi5 <- systemfit( system, "WLS", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, maxit = 100,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitwlsi5 ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.51  0.702      0.619

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.6 3.74 1.94 0.763  0.735
supply 20 16 96.3 6.02 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.74   0.00
supply   0.00   6.02

The covariance matrix of the residuals
       demand supply
demand   3.74   4.47
supply   4.47   6.02

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9031     6.0396   16.71  < 2e-16 ***
price        -0.3159     0.0648   -4.88  2.3e-05 ***
income        0.3239     0.0384    8.43  6.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.63 MSE: 3.743 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9379     7.9718    6.77  7.7e-08 ***
price         0.1841     0.0648    2.84   0.0075 ** 
farmPrice     0.2603     0.0447    5.83  1.3e-06 ***
trend         0.3239     0.0384    8.43  6.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.453 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.277 MSE: 6.017 Root MSE: 2.453 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> ## *** iterated WLS with 2 cross-equation restrictions via R and restrict.regMat (EViews-like)
> fitwlsi5e <- systemfit( system, "WLS", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitwlsi5e ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.72  0.702      0.586

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.763  0.735
supply 20 16 96.2 6.01 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.18   0.00
supply   0.00   4.81

The covariance matrix of the residuals
       demand supply
demand   3.18   3.69
supply   3.69   4.81

The correlations of the residuals
       demand supply
demand  1.000  0.942
supply  0.942  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9662     5.5170   18.30  < 2e-16 ***
price        -0.3160     0.0589   -5.37  5.2e-06 ***
income        0.3234     0.0352    9.20  7.3e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.665 MSE: 3.745 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9595     7.2114    7.48  9.2e-09 ***
price         0.1840     0.0589    3.13   0.0036 ** 
farmPrice     0.2602     0.0400    6.51  1.6e-07 ***
trend         0.3234     0.0352    9.20  7.3e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.452 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.223 MSE: 6.014 Root MSE: 2.452 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> 
> ## *********** estimations with a single regressor ************
> fitwlsS1 <- systemfit(
+    list( consump ~ price - 1, consump ~ price + trend ), "WLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitwlsS1 ) )

systemfit results 
method: WLS 

        N DF  SSR detRCov OLS-R2 McElroy-R2
system 40 36 1121     484  -1.09      -1.05

     N DF SSR  MSE RMSE     R2 Adj R2
eq1 20 19 861 45.3 6.73 -2.213 -2.213
eq2 20 17 259 15.3 3.91  0.032 -0.082

The covariance matrix of the residuals used for estimation
     eq1  eq2
eq1 45.3  0.0
eq2  0.0 15.3

The covariance matrix of the residuals
     eq1  eq2
eq1 45.3 14.4
eq2 14.4 15.3

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.549
eq2 0.549 1.000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1

      Estimate Std. Error t value Pr(>|t|)    
price    1.006      0.015    66.9   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 6.733 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.449 MSE: 45.339 Root MSE: 6.733 
Multiple R-Squared: -2.213 Adjusted R-Squared: -2.213 


WLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ price + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.6767    15.2367    6.15  1.1e-05 ***
price         0.0622     0.1513    0.41     0.69    
trend         0.0953     0.1515    0.63     0.54    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.907 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 259.497 MSE: 15.265 Root MSE: 3.907 
Multiple R-Squared: 0.032 Adjusted R-Squared: -0.082 

> fitwlsS2 <- systemfit(
+    list( consump ~ price - 1, consump ~ trend - 1 ), "WLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitwlsS2 ) )

systemfit results 
method: WLS 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 38 47370  110957  -87.3      -5.28

     N DF   SSR    MSE  RMSE      R2  Adj R2
eq1 20 19   861   45.3  6.73   -2.21   -2.21
eq2 20 19 46509 2447.8 49.48 -172.47 -172.47

The covariance matrix of the residuals used for estimation
     eq1  eq2
eq1 45.3    0
eq2  0.0 2448

The covariance matrix of the residuals
      eq1     eq2
eq1 45.34   -5.15
eq2 -5.15 2447.84

The correlations of the residuals
        eq1     eq2
eq1  1.0000 -0.0439
eq2 -0.0439  1.0000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1

      Estimate Std. Error t value Pr(>|t|)    
price    1.006      0.015    66.9   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 6.733 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.449 MSE: 45.339 Root MSE: 6.733 
Multiple R-Squared: -2.213 Adjusted R-Squared: -2.213 


WLS estimates for 'eq2' (equation 2)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.405      0.924    8.02  1.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.476 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.922 MSE: 2447.838 Root MSE: 49.476 
Multiple R-Squared: -172.467 Adjusted R-Squared: -172.467 

> fitwlsS3 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "WLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitwlsS3 ) )

systemfit results 
method: WLS 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 38 93537  108970    -99     -0.977

     N DF   SSR  MSE RMSE     R2 Adj R2
eq1 20 19 46509 2448 49.5 -172.5 -172.5
eq2 20 19 47028 2475 49.8  -69.5  -69.5

The covariance matrix of the residuals used for estimation
     eq1  eq2
eq1 2448    0
eq2    0 2475

The covariance matrix of the residuals
     eq1  eq2
eq1 2448 2439
eq2 2439 2475

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.988
eq2 0.988 1.000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.405      0.924    8.02  1.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.476 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.922 MSE: 2447.838 Root MSE: 49.476 
Multiple R-Squared: -172.467 Adjusted R-Squared: -172.467 


WLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.318      0.929    7.88  2.1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.751 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47028.107 MSE: 2475.164 Root MSE: 49.751 
Multiple R-Squared: -69.48 Adjusted R-Squared: -69.48 

> fitwlsS4 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "WLS",
+    data = Kmenta, restrict.matrix = matrix( c( 1, -1 ), nrow = 1 ),
+    useMatrix = useMatrix )
> print( summary( fitwlsS4 ) )

systemfit results 
method: WLS 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 39 93548  111736    -99      -1.03

     N DF   SSR  MSE RMSE     R2 Adj R2
eq1 20 19 46514 2448 49.5 -172.5 -172.5
eq2 20 19 47034 2475 49.8  -69.5  -69.5

The covariance matrix of the residuals used for estimation
     eq1  eq2
eq1 2448    0
eq2    0 2475

The covariance matrix of the residuals
     eq1  eq2
eq1 2448 2439
eq2 2439 2475

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.988
eq2 0.988 1.000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.362      0.655    11.2  8.4e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.478 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46514.224 MSE: 2448.117 Root MSE: 49.478 
Multiple R-Squared: -172.487 Adjusted R-Squared: -172.487 


WLS estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.362      0.655    11.2  8.4e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.754 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47033.528 MSE: 2475.449 Root MSE: 49.754 
Multiple R-Squared: -69.488 Adjusted R-Squared: -69.488 

> fitwlsS5 <- systemfit(
+    list( consump ~ 1, price ~ 1 ), "WLS",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitwlsS5) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 38 935     491      0          0

     N DF SSR  MSE RMSE R2 Adj R2
eq1 20 19 268 14.1 3.76  0      0
eq2 20 19 667 35.1 5.93  0      0

The covariance matrix of the residuals used for estimation
     eq1  eq2
eq1 14.1  0.0
eq2  0.0 35.1

The covariance matrix of the residuals
      eq1   eq2
eq1 14.11  2.18
eq2  2.18 35.12

The correlations of the residuals
       eq1    eq2
eq1 1.0000 0.0981
eq2 0.0981 1.0000


WLS estimates for 'eq1' (equation 1)
Model Formula: consump ~ 1

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   100.90       0.84     120   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.756 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 268.114 MSE: 14.111 Root MSE: 3.756 
Multiple R-Squared: 0 Adjusted R-Squared: 0 


WLS estimates for 'eq2' (equation 2)
Model Formula: price ~ 1

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   100.02       1.33    75.5   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.926 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 667.251 MSE: 35.118 Root MSE: 5.926 
Multiple R-Squared: 0 Adjusted R-Squared: 0 

> 
> 
> ## **************** shorter summaries **********************
> print( summary( fitwls1 ), residCov = FALSE, equations = FALSE )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    4.43  0.709      0.558

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.8954     7.5194   13.29  2.1e-10 ***
demand_price        -0.3163     0.0907   -3.49  0.00282 ** 
demand_income        0.3346     0.0454    7.37  1.1e-06 ***
supply_(Intercept)  58.2754    11.4629    5.08  0.00011 ***
supply_price         0.1604     0.0949    1.69  0.11039    
supply_farmPrice     0.2481     0.0462    5.37  6.2e-05 ***
supply_trend         0.2483     0.0975    2.55  0.02157 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitwls2e, useDfSys = FALSE, residCov = FALSE ),
+    equations = FALSE )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    1.61  0.703      0.589

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.97 2.44 0.644  0.577


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.6461     6.9734   14.29  6.7e-11 ***
demand_price        -0.2982     0.0816   -3.65    0.002 ** 
demand_income        0.3186     0.0381    8.37  2.0e-07 ***
supply_(Intercept)  56.2104    10.1248    5.55  4.4e-05 ***
supply_price         0.1642     0.0859    1.91    0.074 .  
supply_farmPrice     0.2579     0.0404    6.38  9.1e-06 ***
supply_trend         0.3186     0.0381    8.37  3.1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitwls3 ), residCov = FALSE )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    2.35  0.703      0.622

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.98 2.44 0.643  0.576


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.6582     7.5640   13.18  6.4e-15 ***
price        -0.2991     0.0887   -3.37   0.0019 ** 
income        0.3194     0.0415    7.70  6.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.936 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.75 MSE: 3.75 Root MSE: 1.936 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  56.1877    11.3165    4.97  1.9e-05 ***
price         0.1643     0.0960    1.71    0.096 .  
farmPrice     0.2580     0.0451    5.71  2.0e-06 ***
trend         0.3194     0.0415    7.70  6.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.445 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 95.627 MSE: 5.977 Root MSE: 2.445 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.576 

> 
> print( summary( fitwls4e, residCov = FALSE, equations = FALSE ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.72  0.702      0.586

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.763  0.735
supply 20 16 96.2 6.01 2.45 0.641  0.574


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept) 100.9762     5.5234   18.28  < 2e-16 ***
demand_price        -0.3160     0.0589   -5.37  5.3e-06 ***
demand_income        0.3233     0.0352    9.18  7.6e-11 ***
supply_(Intercept)  53.9630     7.2089    7.49  9.1e-09 ***
supply_price         0.1840     0.0589    3.13   0.0036 ** 
supply_farmPrice     0.2602     0.0399    6.53  1.6e-07 ***
supply_trend         0.3233     0.0352    9.18  7.6e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitwls5, useDfSys = FALSE ), residCov = FALSE )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.51  0.702      0.619

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.6 3.74 1.94 0.763  0.735
supply 20 16 96.3 6.02 2.45 0.641  0.574


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9138     6.0474   16.69  5.6e-12 ***
price        -0.3160     0.0648   -4.87  0.00014 ***
income        0.3238     0.0385    8.42  1.8e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.636 MSE: 3.743 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9416     7.9687    6.77  4.5e-06 ***
price         0.1840     0.0648    2.84    0.012 *  
farmPrice     0.2603     0.0446    5.84  2.5e-05 ***
trend         0.3238     0.0385    8.42  2.9e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.453 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.268 MSE: 6.017 Root MSE: 2.453 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> print( summary( fitwlsi1e, useDfSys = TRUE, equations = FALSE ) )

systemfit results 
method: WLS 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 156    3.02  0.709      0.537

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.3 3.73 1.93 0.764  0.736
supply 20 16 92.6 5.78 2.40 0.655  0.590

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.17   0.00
supply   0.00   4.63

The covariance matrix of the residuals
       demand supply
demand   3.17   3.41
supply   3.41   4.63

The correlations of the residuals
       demand supply
demand  1.000  0.891
supply  0.891  1.000


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.8954     6.9325   14.41  8.9e-16 ***
demand_price        -0.3163     0.0836   -3.78  0.00062 ***
demand_income        0.3346     0.0419    7.99  3.2e-09 ***
supply_(Intercept)  58.2754    10.2527    5.68  2.4e-06 ***
supply_price         0.1604     0.0849    1.89  0.06762 .  
supply_farmPrice     0.2481     0.0413    6.01  9.5e-07 ***
supply_trend         0.2483     0.0872    2.85  0.00754 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitwlsi2, equations = FALSE, residCov = FALSE ),
+    residCov = TRUE )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159    2.34  0.703      0.623

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.98 2.44 0.643  0.576

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.75   0.00
supply   0.00   5.98

The covariance matrix of the residuals
       demand supply
demand   3.75   4.48
supply   4.48   5.98

The correlations of the residuals
       demand supply
demand  1.000  0.946
supply  0.946  1.000


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.6607     7.5378   13.22  5.8e-15 ***
demand_price        -0.2993     0.0884   -3.39   0.0018 ** 
demand_income        0.3196     0.0414    7.72  5.6e-09 ***
supply_(Intercept)  56.1830    11.3487    4.95  2.0e-05 ***
supply_price         0.1643     0.0963    1.71   0.0972 .  
supply_farmPrice     0.2580     0.0453    5.70  2.1e-06 ***
supply_trend         0.3196     0.0414    7.72  5.6e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitwlsi3e ), equations = FALSE, residCov = FALSE )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 159     1.6  0.703      0.589

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.8 3.75 1.94 0.762  0.734
supply 20 16 95.6 5.97 2.44 0.644  0.577


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.6484     6.9516   14.33  4.4e-16 ***
demand_price        -0.2984     0.0814   -3.67  0.00083 ***
demand_income        0.3188     0.0380    8.39  8.4e-10 ***
supply_(Intercept)  56.2061    10.1500    5.54  3.4e-06 ***
supply_price         0.1642     0.0861    1.91  0.06502 .  
supply_farmPrice     0.2579     0.0405    6.37  2.9e-07 ***
supply_trend         0.3188     0.0380    8.39  8.4e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitwlsi4, equations = FALSE ), equations = TRUE )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    2.51  0.702      0.619

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.6 3.74 1.94 0.763  0.735
supply 20 16 96.3 6.02 2.45 0.641  0.574

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.74   0.00
supply   0.00   6.02

The covariance matrix of the residuals
       demand supply
demand   3.74   4.47
supply   4.47   6.02

The correlations of the residuals
       demand supply
demand  1.000  0.943
supply  0.943  1.000


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9031     6.0396   16.71  < 2e-16 ***
price        -0.3159     0.0648   -4.88  2.3e-05 ***
income        0.3239     0.0384    8.43  6.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.63 MSE: 3.743 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9379     7.9718    6.77  7.7e-08 ***
price         0.1841     0.0648    2.84   0.0075 ** 
farmPrice     0.2603     0.0447    5.83  1.3e-06 ***
trend         0.3239     0.0384    8.43  6.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.453 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.277 MSE: 6.017 Root MSE: 2.453 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> print( summary( fitwlsi5e, useDfSys = FALSE, residCov = FALSE ) )

systemfit results 
method: iterated WLS 

convergence achieved after 3 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 160    1.72  0.702      0.586

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 63.7 3.75 1.94 0.763  0.735
supply 20 16 96.2 6.01 2.45 0.641  0.574


WLS estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 100.9662     5.5170   18.30  1.3e-12 ***
price        -0.3160     0.0589   -5.37  5.1e-05 ***
income        0.3234     0.0352    9.20  5.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.935 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.665 MSE: 3.745 Root MSE: 1.935 
Multiple R-Squared: 0.763 Adjusted R-Squared: 0.735 


WLS estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.9595     7.2114    7.48  1.3e-06 ***
price         0.1840     0.0589    3.13   0.0065 ** 
farmPrice     0.2602     0.0400    6.51  7.2e-06 ***
trend         0.3234     0.0352    9.20  8.7e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.452 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 96.223 MSE: 6.014 Root MSE: 2.452 
Multiple R-Squared: 0.641 Adjusted R-Squared: 0.574 

> 
> 
> ## ****************** residuals **************************
> print( residuals( fitwls1 ) )
   demand supply
1   1.074 -0.444
2  -0.390 -0.896
3   2.625  1.965
4   1.802  1.134
5   1.946  1.514
6   1.175  0.680
7   1.530  1.569
8  -2.933 -4.407
9  -1.365 -2.599
10  2.031  2.469
11 -0.149 -0.598
12 -1.954 -1.697
13 -1.121 -1.064
14 -0.220  0.970
15  1.487  3.159
16 -3.701 -3.866
17 -1.273 -0.265
18 -2.002 -2.449
19  1.738  3.110
20 -0.299  1.714
> print( residuals( fitwls1$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
-0.444 -0.896  1.965  1.134  1.514  0.680  1.569 -4.407 -2.599  2.469 -0.598 
    12     13     14     15     16     17     18     19     20 
-1.697 -1.064  0.970  3.159 -3.866 -0.265 -2.449  3.110  1.714 
> 
> print( residuals( fitwls2e ) )
    demand supply
1   0.9069  0.209
2  -0.4660 -0.338
3   2.5495  2.455
4   1.7320  1.560
5   2.0183  1.771
6   1.2321  0.886
7   1.6019  1.724
8  -2.8544 -4.378
9  -1.3158 -2.597
10  2.0517  2.500
11 -0.3823 -0.455
12 -2.2623 -1.525
13 -1.3801 -1.001
14 -0.3081  0.877
15  1.6643  2.806
16 -3.5513 -4.328
17 -1.0466 -0.805
18 -1.9647 -2.952
19  1.8446  2.561
20 -0.0697  1.029
> print( residuals( fitwls2e$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.9069 -0.4660  2.5495  1.7320  2.0183  1.2321  1.6019 -2.8544 -1.3158  2.0517 
     11      12      13      14      15      16      17      18      19      20 
-0.3823 -2.2623 -1.3801 -0.3081  1.6643 -3.5513 -1.0466 -1.9647  1.8446 -0.0697 
> 
> print( residuals( fitwls3 ) )
    demand supply
1   0.9150  0.217
2  -0.4624 -0.332
3   2.5532  2.461
4   1.7354  1.564
5   2.0148  1.773
6   1.2293  0.889
7   1.5984  1.725
8  -2.8582 -4.378
9  -1.3182 -2.597
10  2.0507  2.500
11 -0.3710 -0.453
12 -2.2473 -1.524
13 -1.3675 -1.000
14 -0.3038  0.876
15  1.6557  2.802
16 -3.5586 -4.333
17 -1.0576 -0.811
18 -1.9666 -2.957
19  1.8394  2.555
20 -0.0808  1.022
> print( residuals( fitwls3$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.217 -0.332  2.461  1.564  1.773  0.889  1.725 -4.378 -2.597  2.500 -0.453 
    12     13     14     15     16     17     18     19     20 
-1.524 -1.000  0.876  2.802 -4.333 -0.811 -2.957  2.555  1.022 
> 
> print( residuals( fitwls4e ) )
    demand supply
1   0.9593  0.244
2  -0.3907 -0.388
3   2.6143  2.417
4   1.8088  1.498
5   1.9718  1.803
6   1.2083  0.892
7   1.5943  1.699
8  -2.8174 -4.491
9  -1.3751 -2.548
10  1.9351  2.667
11 -0.4019 -0.284
12 -2.1883 -1.443
13 -1.2686 -1.010
14 -0.2984  0.921
15  1.5512  2.869
16 -3.6143 -4.342
17 -1.2823 -0.600
18 -1.9253 -3.056
19  1.8860  2.425
20  0.0333  0.728
> print( residuals( fitwls4e$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.9593 -0.3907  2.6143  1.8088  1.9718  1.2083  1.5943 -2.8174 -1.3751  1.9351 
     11      12      13      14      15      16      17      18      19      20 
-0.4019 -2.1883 -1.2686 -0.2984  1.5512 -3.6143 -1.2823 -1.9253  1.8860  0.0333 
> 
> print( residuals( fitwls5 ) )
    demand supply
1   0.9649  0.249
2  -0.3911 -0.384
3   2.6145  2.421
4   1.8081  1.501
5   1.9707  1.805
6   1.2067  0.893
7   1.5910  1.700
8  -2.8235 -4.491
9  -1.3743 -2.548
10  1.9406  2.667
11 -0.3887 -0.282
12 -2.1767 -1.442
13 -1.2616 -1.009
14 -0.2944  0.920
15  1.5485  2.866
16 -3.6185 -4.345
17 -1.2806 -0.604
18 -1.9295 -3.060
19  1.8782  2.420
20  0.0157  0.721
> print( residuals( fitwls5$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.249 -0.384  2.421  1.501  1.805  0.893  1.700 -4.491 -2.548  2.667 -0.282 
    12     13     14     15     16     17     18     19     20 
-1.442 -1.009  0.920  2.866 -4.345 -0.604 -3.060  2.420  0.721 
> 
> print( residuals( fitwlsi1e ) )
   demand supply
1   1.074 -0.444
2  -0.390 -0.896
3   2.625  1.965
4   1.802  1.134
5   1.946  1.514
6   1.175  0.680
7   1.530  1.569
8  -2.933 -4.407
9  -1.365 -2.599
10  2.031  2.469
11 -0.149 -0.598
12 -1.954 -1.697
13 -1.121 -1.064
14 -0.220  0.970
15  1.487  3.159
16 -3.701 -3.866
17 -1.273 -0.265
18 -2.002 -2.449
19  1.738  3.110
20 -0.299  1.714
> print( residuals( fitwlsi1e$eq[[ 1 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 1.074 -0.390  2.625  1.802  1.946  1.175  1.530 -2.933 -1.365  2.031 -0.149 
    12     13     14     15     16     17     18     19     20 
-1.954 -1.121 -0.220  1.487 -3.701 -1.273 -2.002  1.738 -0.299 
> 
> print( residuals( fitwlsi2 ) )
    demand supply
1   0.9167  0.218
2  -0.4616 -0.331
3   2.5539  2.462
4   1.7361  1.565
5   2.0140  1.774
6   1.2288  0.889
7   1.5977  1.726
8  -2.8589 -4.378
9  -1.3187 -2.597
10  2.0505  2.500
11 -0.3686 -0.453
12 -2.2443 -1.523
13 -1.3649 -1.000
14 -0.3029  0.876
15  1.6539  2.802
16 -3.5601 -4.334
17 -1.0599 -0.812
18 -1.9669 -2.958
19  1.8383  2.554
20 -0.0831  1.020
> print( residuals( fitwlsi2$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.218 -0.331  2.462  1.565  1.774  0.889  1.726 -4.378 -2.597  2.500 -0.453 
    12     13     14     15     16     17     18     19     20 
-1.523 -1.000  0.876  2.802 -4.334 -0.812 -2.958  2.554  1.020 
> 
> print( residuals( fitwlsi3e ) )
    demand supply
1   0.9084  0.211
2  -0.4653 -0.337
3   2.5502  2.456
4   1.7326  1.561
5   2.0176  1.771
6   1.2316  0.887
7   1.6012  1.724
8  -2.8551 -4.378
9  -1.3162 -2.597
10  2.0515  2.500
11 -0.3801 -0.454
12 -2.2594 -1.525
13 -1.3777 -1.001
14 -0.3073  0.877
15  1.6627  2.806
16 -3.5527 -4.329
17 -1.0487 -0.806
18 -1.9651 -2.953
19  1.8436  2.560
20 -0.0718  1.028
> print( residuals( fitwlsi3e$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.9084 -0.4653  2.5502  1.7326  2.0176  1.2316  1.6012 -2.8551 -1.3162  2.0515 
     11      12      13      14      15      16      17      18      19      20 
-0.3801 -2.2594 -1.3777 -0.3073  1.6627 -3.5527 -1.0487 -1.9651  1.8436 -0.0718 
> 
> print( residuals( fitwlsi4 ) )
    demand supply
1   0.9659  0.250
2  -0.3911 -0.383
3   2.6145  2.421
4   1.8080  1.502
5   1.9705  1.805
6   1.2064  0.893
7   1.5905  1.700
8  -2.8246 -4.491
9  -1.3742 -2.547
10  1.9415  2.667
11 -0.3865 -0.282
12 -2.1747 -1.442
13 -1.2604 -1.009
14 -0.2938  0.920
15  1.5480  2.866
16 -3.6192 -4.346
17 -1.2804 -0.604
18 -1.9302 -3.061
19  1.8768  2.420
20  0.0127  0.720
> print( residuals( fitwlsi4$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.250 -0.383  2.421  1.502  1.805  0.893  1.700 -4.491 -2.547  2.667 -0.282 
    12     13     14     15     16     17     18     19     20 
-1.442 -1.009  0.920  2.866 -4.346 -0.604 -3.061  2.420  0.720 
> 
> print( residuals( fitwlsi5e ) )
    demand supply
1   0.9602  0.245
2  -0.3908 -0.388
3   2.6143  2.418
4   1.8087  1.498
5   1.9716  1.803
6   1.2081  0.892
7   1.5938  1.699
8  -2.8184 -4.491
9  -1.3750 -2.548
10  1.9360  2.667
11 -0.3997 -0.284
12 -2.1865 -1.443
13 -1.2675 -1.010
14 -0.2978  0.921
15  1.5508  2.869
16 -3.6150 -4.342
17 -1.2820 -0.601
18 -1.9260 -3.057
19  1.8848  2.424
20  0.0305  0.727
> print( residuals( fitwlsi5e$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.9602 -0.3908  2.6143  1.8087  1.9716  1.2081  1.5938 -2.8184 -1.3750  1.9360 
     11      12      13      14      15      16      17      18      19      20 
-0.3997 -2.1865 -1.2675 -0.2978  1.5508 -3.6150 -1.2820 -1.9260  1.8848  0.0305 
> 
> 
> ## *************** coefficients *********************
> print( round( coef( fitwls1e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            99.895             -0.316              0.335             58.275 
      supply_price   supply_farmPrice       supply_trend 
             0.160              0.248              0.248 
> print( round( coef( fitwls1e$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
     99.895      -0.316       0.335 
> 
> print( round( coef( fitwlsi2 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            99.661             -0.299              0.320             56.183 
      supply_price   supply_farmPrice       supply_trend 
             0.164              0.258              0.320 
> print( round( coef( fitwlsi2$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
     56.183       0.164       0.258       0.320 
> 
> print( round( coef( fitwls3e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            99.646             -0.298              0.319             56.210 
      supply_price   supply_farmPrice       supply_trend 
             0.164              0.258              0.319 
> print( round( coef( fitwls3e, modified.regMat = TRUE ), digits = 6 ) )
    C1     C2     C3     C4     C5     C6 
99.646 -0.298  0.319 56.210  0.164  0.258 
> print( round( coef( fitwls3e$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
     99.646      -0.298       0.319 
> 
> print( round( coef( fitwls4 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
           100.914             -0.316              0.324             53.942 
      supply_price   supply_farmPrice       supply_trend 
             0.184              0.260              0.324 
> print( round( coef( fitwls4$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
     53.942       0.184       0.260       0.324 
> 
> print( round( coef( fitwlsi5 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
           100.903             -0.316              0.324             53.938 
      supply_price   supply_farmPrice       supply_trend 
             0.184              0.260              0.324 
> print( round( coef( fitwlsi5, modified.regMat = TRUE ), digits = 6 ) )
     C1      C2      C3      C4      C5      C6 
100.903  -0.316   0.324  53.938   0.184   0.260 
> print( round( coef( fitwlsi5$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
    100.903      -0.316       0.324 
> 
> 
> ## *************** coefficients with stats *********************
> print( round( coef( summary( fitwls1e ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   99.895     6.9325   14.41 0.000000
demand_price         -0.316     0.0836   -3.78 0.001483
demand_income         0.335     0.0419    7.99 0.000000
supply_(Intercept)   58.275    10.2527    5.68 0.000034
supply_price          0.160     0.0849    1.89 0.077067
supply_farmPrice      0.248     0.0413    6.01 0.000018
supply_trend          0.248     0.0872    2.85 0.011659
> print( round( coef( summary( fitwls1e$eq[[ 1 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   99.895     6.9325   14.41  0.00000
price         -0.316     0.0836   -3.78  0.00148
income         0.335     0.0419    7.99  0.00000
> 
> print( round( coef( summary( fitwlsi2 ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   99.661     7.5378   13.22 0.000000
demand_price         -0.299     0.0884   -3.39 0.001805
demand_income         0.320     0.0414    7.72 0.000000
supply_(Intercept)   56.183    11.3487    4.95 0.000020
supply_price          0.164     0.0963    1.71 0.097239
supply_farmPrice      0.258     0.0453    5.70 0.000002
supply_trend          0.320     0.0414    7.72 0.000000
> print( round( coef( summary( fitwlsi2$eq[[ 2 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   56.183    11.3487    4.95 0.000020
price          0.164     0.0963    1.71 0.097239
farmPrice      0.258     0.0453    5.70 0.000002
trend          0.320     0.0414    7.72 0.000000
> 
> print( round( coef( summary( fitwls3e ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   99.646     6.9734   14.29 0.000000
demand_price         -0.298     0.0816   -3.65 0.000863
demand_income         0.319     0.0381    8.37 0.000000
supply_(Intercept)   56.210    10.1248    5.55 0.000003
supply_price          0.164     0.0859    1.91 0.064384
supply_farmPrice      0.258     0.0404    6.38 0.000000
supply_trend          0.319     0.0381    8.37 0.000000
> print( round( coef( summary( fitwls3e ), modified.regMat = TRUE ), digits = 6 ) )
   Estimate Std. Error t value Pr(>|t|)
C1   99.646     6.9734   14.29 0.000000
C2   -0.298     0.0816   -3.65 0.000863
C3    0.319     0.0381    8.37 0.000000
C4   56.210    10.1248    5.55 0.000003
C5    0.164     0.0859    1.91 0.064384
C6    0.258     0.0404    6.38 0.000000
> print( round( coef( summary( fitwls3e$eq[[ 1 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   99.646     6.9734   14.29 0.000000
price         -0.298     0.0816   -3.65 0.000863
income         0.319     0.0381    8.37 0.000000
> 
> print( round( coef( summary( fitwls4, useDfSys = FALSE ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)  100.914     6.0474   16.69 0.000000
demand_price         -0.316     0.0648   -4.87 0.000143
demand_income         0.324     0.0385    8.42 0.000000
supply_(Intercept)   53.942     7.9687    6.77 0.000005
supply_price          0.184     0.0648    2.84 0.011833
supply_farmPrice      0.260     0.0446    5.84 0.000025
supply_trend          0.324     0.0385    8.42 0.000000
> print( round( coef( summary( fitwls4$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   53.942     7.9687    6.77 0.000005
price          0.184     0.0648    2.84 0.011833
farmPrice      0.260     0.0446    5.84 0.000025
trend          0.324     0.0385    8.42 0.000000
> 
> print( round( coef( summary( fitwlsi5, useDfSys = FALSE ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)  100.903     6.0396   16.71 0.000000
demand_price         -0.316     0.0648   -4.88 0.000142
demand_income         0.324     0.0384    8.43 0.000000
supply_(Intercept)   53.938     7.9718    6.77 0.000005
supply_price          0.184     0.0648    2.84 0.011806
supply_farmPrice      0.260     0.0447    5.83 0.000026
supply_trend          0.324     0.0384    8.43 0.000000
> print( round( coef( summary( fitwlsi5, useDfSys = FALSE ),
+    modified.regMat = TRUE ), digits = 6 ) )
   Estimate Std. Error t value Pr(>|t|)
C1  100.903     6.0396   16.71       NA
C2   -0.316     0.0648   -4.88       NA
C3    0.324     0.0384    8.43       NA
C4   53.938     7.9718    6.77       NA
C5    0.184     0.0648    2.84       NA
C6    0.260     0.0447    5.83       NA
> print( round( coef( summary( fitwlsi5$eq[[ 1 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)  100.903     6.0396   16.71 0.000000
price         -0.316     0.0648   -4.88 0.000142
income         0.324     0.0384    8.43 0.000000
> 
> 
> ## *********** variance covariance matrix of the coefficients *******
> print( round( vcov( fitwls1e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            48.0597     -0.50558       0.02734
demand_price                  -0.5056      0.00699      -0.00198
demand_income                  0.0273     -0.00198       0.00175
supply_(Intercept)             0.0000      0.00000       0.00000
supply_price                   0.0000      0.00000       0.00000
supply_farmPrice               0.0000      0.00000       0.00000
supply_trend                   0.0000      0.00000       0.00000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)              0.000     0.000000         0.000000
demand_price                    0.000     0.000000         0.000000
demand_income                   0.000     0.000000         0.000000
supply_(Intercept)            105.119    -0.790000        -0.243489
supply_price                   -0.790     0.007202         0.000675
supply_farmPrice               -0.243     0.000675         0.001707
supply_trend                   -0.223     0.000418         0.001052
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.223347
supply_price           0.000418
supply_farmPrice       0.001052
supply_trend           0.007608
> print( round( vcov( fitwls1e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     48.0597 -0.50558  0.02734
price           -0.5056  0.00699 -0.00198
income           0.0273 -0.00198  0.00175
> 
> print( round( vcov( fitwls2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)           57.21413    -0.596328      0.026850
demand_price                 -0.59633     0.007862     -0.001948
demand_income                 0.02685    -0.001948      0.001722
supply_(Intercept)           -0.78825     0.057190     -0.050565
supply_price                  0.00147    -0.000107      0.000095
supply_farmPrice              0.00371    -0.000269      0.000238
supply_trend                  0.02685    -0.001948      0.001722
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            -0.7883     0.001474         0.003714
demand_price                   0.0572    -0.000107        -0.000269
demand_income                 -0.0506     0.000095         0.000238
supply_(Intercept)           128.0635    -1.001596        -0.280017
supply_price                  -1.0016     0.009225         0.000806
supply_farmPrice              -0.2800     0.000806         0.002038
supply_trend                  -0.0506     0.000095         0.000238
                   supply_trend
demand_(Intercept)     0.026850
demand_price          -0.001948
demand_income          0.001722
supply_(Intercept)    -0.050565
supply_price           0.000095
supply_farmPrice       0.000238
supply_trend           0.001722
> print( round( vcov( fitwls2$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)    128.0635 -1.001596 -0.280017 -0.050565
price           -1.0016  0.009225  0.000806  0.000095
farmPrice       -0.2800  0.000806  0.002038  0.000238
trend           -0.0506  0.000095  0.000238  0.001722
> 
> print( round( vcov( fitwls3e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)           48.62814    -0.506597      0.022574
demand_price                 -0.50660     0.006662     -0.001638
demand_income                 0.02257    -0.001638      0.001448
supply_(Intercept)           -0.66271     0.048082     -0.042512
supply_price                  0.00124    -0.000090      0.000079
supply_farmPrice              0.00312    -0.000227      0.000200
supply_trend                  0.02257    -0.001638      0.001448
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            -0.6627     0.001239         0.003123
demand_price                   0.0481    -0.000090        -0.000227
demand_income                 -0.0425     0.000079         0.000200
supply_(Intercept)           102.5112    -0.801390        -0.224299
supply_price                  -0.8014     0.007381         0.000645
supply_farmPrice              -0.2243     0.000645         0.001632
supply_trend                  -0.0425     0.000079         0.000200
                   supply_trend
demand_(Intercept)     0.022574
demand_price          -0.001638
demand_income          0.001448
supply_(Intercept)    -0.042512
supply_price           0.000079
supply_farmPrice       0.000200
supply_trend           0.001448
> print( round( vcov( fitwls3e, modified.regMat = TRUE ), digits = 6 ) )
         C1        C2        C3       C4        C5        C6
C1 48.62814 -0.506597  0.022574  -0.6627  0.001239  0.003123
C2 -0.50660  0.006662 -0.001638   0.0481 -0.000090 -0.000227
C3  0.02257 -0.001638  0.001448  -0.0425  0.000079  0.000200
C4 -0.66271  0.048082 -0.042512 102.5112 -0.801390 -0.224299
C5  0.00124 -0.000090  0.000079  -0.8014  0.007381  0.000645
C6  0.00312 -0.000227  0.000200  -0.2243  0.000645  0.001632
> print( round( vcov( fitwls3e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     48.6281 -0.50660  0.02257
price           -0.5066  0.00666 -0.00164
income           0.0226 -0.00164  0.00145
> 
> print( round( vcov( fitwls4 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            36.5710    -0.321554     -0.043279
demand_price                  -0.3216     0.004201     -0.001011
demand_income                 -0.0433    -0.001011      0.001481
supply_(Intercept)            35.8467    -0.431417      0.074877
supply_price                  -0.3216     0.004201     -0.001011
supply_farmPrice              -0.0334     0.000226      0.000111
supply_trend                  -0.0433    -0.001011      0.001481
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            35.8467    -0.321554        -0.033436
demand_price                  -0.4314     0.004201         0.000226
demand_income                  0.0749    -0.001011         0.000111
supply_(Intercept)            63.5001    -0.431417        -0.215648
supply_price                  -0.4314     0.004201         0.000226
supply_farmPrice              -0.2156     0.000226         0.001986
supply_trend                   0.0749    -0.001011         0.000111
                   supply_trend
demand_(Intercept)    -0.043279
demand_price          -0.001011
demand_income          0.001481
supply_(Intercept)     0.074877
supply_price          -0.001011
supply_farmPrice       0.000111
supply_trend           0.001481
> print( round( vcov( fitwls4$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     63.5001 -0.431417 -0.215648  0.074877
price           -0.4314  0.004201  0.000226 -0.001011
farmPrice       -0.2156  0.000226  0.001986  0.000111
trend            0.0749 -0.001011  0.000111  0.001481
> 
> print( round( vcov( fitwls5 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            36.5710    -0.321554     -0.043279
demand_price                  -0.3216     0.004201     -0.001011
demand_income                 -0.0433    -0.001011      0.001481
supply_(Intercept)            35.8467    -0.431417      0.074877
supply_price                  -0.3216     0.004201     -0.001011
supply_farmPrice              -0.0334     0.000226      0.000111
supply_trend                  -0.0433    -0.001011      0.001481
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            35.8467    -0.321554        -0.033436
demand_price                  -0.4314     0.004201         0.000226
demand_income                  0.0749    -0.001011         0.000111
supply_(Intercept)            63.5001    -0.431417        -0.215648
supply_price                  -0.4314     0.004201         0.000226
supply_farmPrice              -0.2156     0.000226         0.001986
supply_trend                   0.0749    -0.001011         0.000111
                   supply_trend
demand_(Intercept)    -0.043279
demand_price          -0.001011
demand_income          0.001481
supply_(Intercept)     0.074877
supply_price          -0.001011
supply_farmPrice       0.000111
supply_trend           0.001481
> print( round( vcov( fitwls5, modified.regMat = TRUE ), digits = 6 ) )
        C1        C2        C3      C4        C5        C6
C1 36.5710 -0.321554 -0.043279 35.8467 -0.321554 -0.033436
C2 -0.3216  0.004201 -0.001011 -0.4314  0.004201  0.000226
C3 -0.0433 -0.001011  0.001481  0.0749 -0.001011  0.000111
C4 35.8467 -0.431417  0.074877 63.5001 -0.431417 -0.215648
C5 -0.3216  0.004201 -0.001011 -0.4314  0.004201  0.000226
C6 -0.0334  0.000226  0.000111 -0.2156  0.000226  0.001986
> print( round( vcov( fitwls5$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     36.5710 -0.32155 -0.04328
price           -0.3216  0.00420 -0.00101
income          -0.0433 -0.00101  0.00148
> 
> print( round( vcov( fitwlsi1 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            56.5408     -0.59480       0.03216
demand_price                  -0.5948      0.00822      -0.00233
demand_income                  0.0322     -0.00233       0.00206
supply_(Intercept)             0.0000      0.00000       0.00000
supply_price                   0.0000      0.00000       0.00000
supply_farmPrice               0.0000      0.00000       0.00000
supply_trend                   0.0000      0.00000       0.00000
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)              0.000     0.000000         0.000000
demand_price                    0.000     0.000000         0.000000
demand_income                   0.000     0.000000         0.000000
supply_(Intercept)            131.398    -0.987500        -0.304361
supply_price                   -0.988     0.009003         0.000844
supply_farmPrice               -0.304     0.000844         0.002133
supply_trend                   -0.279     0.000522         0.001316
                   supply_trend
demand_(Intercept)     0.000000
demand_price           0.000000
demand_income          0.000000
supply_(Intercept)    -0.279183
supply_price           0.000522
supply_farmPrice       0.001316
supply_trend           0.009510
> print( round( vcov( fitwlsi1$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     131.398 -0.987500 -0.304361 -0.279183
price            -0.988  0.009003  0.000844  0.000522
farmPrice        -0.304  0.000844  0.002133  0.001316
trend            -0.279  0.000522  0.001316  0.009510
> 
> print( round( vcov( fitwlsi2e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)           48.32515    -0.503487      0.022480
demand_price                 -0.50349     0.006624     -0.001631
demand_income                 0.02248    -0.001631      0.001442
supply_(Intercept)           -0.65995     0.047882     -0.042335
supply_price                  0.00123    -0.000090      0.000079
supply_farmPrice              0.00311    -0.000226      0.000199
supply_trend                  0.02248    -0.001631      0.001442
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            -0.6600     0.001234         0.003110
demand_price                   0.0479    -0.000090        -0.000226
demand_income                 -0.0423     0.000079         0.000199
supply_(Intercept)           103.0226    -0.805456        -0.225388
supply_price                  -0.8055     0.007418         0.000649
supply_farmPrice              -0.2254     0.000649         0.001640
supply_trend                  -0.0423     0.000079         0.000199
                   supply_trend
demand_(Intercept)     0.022480
demand_price          -0.001631
demand_income          0.001442
supply_(Intercept)    -0.042335
supply_price           0.000079
supply_farmPrice       0.000199
supply_trend           0.001442
> print( round( vcov( fitwlsi2e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     48.3251 -0.50349  0.02248
price           -0.5035  0.00662 -0.00163
income           0.0225 -0.00163  0.00144
> 
> print( round( vcov( fitwlsi3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)           56.81857    -0.592263      0.026724
demand_price                 -0.59226     0.007812     -0.001939
demand_income                 0.02672    -0.001939      0.001714
supply_(Intercept)           -0.78454     0.056921     -0.050327
supply_price                  0.00147    -0.000106      0.000094
supply_farmPrice              0.00370    -0.000268      0.000237
supply_trend                  0.02672    -0.001939      0.001714
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            -0.7845     0.001467         0.003697
demand_price                   0.0569    -0.000106        -0.000268
demand_income                 -0.0503     0.000094         0.000237
supply_(Intercept)           128.7924    -1.007391        -0.281572
supply_price                  -1.0074     0.009279         0.000811
supply_farmPrice              -0.2816     0.000811         0.002049
supply_trend                  -0.0503     0.000094         0.000237
                   supply_trend
demand_(Intercept)     0.026724
demand_price          -0.001939
demand_income          0.001714
supply_(Intercept)    -0.050327
supply_price           0.000094
supply_farmPrice       0.000237
supply_trend           0.001714
> print( round( vcov( fitwlsi3, modified.regMat = TRUE ), digits = 6 ) )
         C1        C2        C3       C4        C5        C6
C1 56.81857 -0.592263  0.026724  -0.7845  0.001467  0.003697
C2 -0.59226  0.007812 -0.001939   0.0569 -0.000106 -0.000268
C3  0.02672 -0.001939  0.001714  -0.0503  0.000094  0.000237
C4 -0.78454  0.056921 -0.050327 128.7924 -1.007391 -0.281572
C5  0.00147 -0.000106  0.000094  -1.0074  0.009279  0.000811
C6  0.00370 -0.000268  0.000237  -0.2816  0.000811  0.002049
> print( round( vcov( fitwlsi3$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)    128.7924 -1.007391 -0.281572 -0.050327
price           -1.0074  0.009279  0.000811  0.000094
farmPrice       -0.2816  0.000811  0.002049  0.000237
trend           -0.0503  0.000094  0.000237  0.001714
> 
> print( round( vcov( fitwlsi4e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            30.4377    -0.265752     -0.037918
demand_price                  -0.2658     0.003463     -0.000827
demand_income                 -0.0379    -0.000827      0.001237
supply_(Intercept)            29.6762    -0.355820      0.060620
supply_price                  -0.2658     0.003463     -0.000827
supply_farmPrice              -0.0279     0.000187      0.000094
supply_trend                  -0.0379    -0.000827      0.001237
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            29.6762    -0.265752        -0.027921
demand_price                  -0.3558     0.003463         0.000187
demand_income                  0.0606    -0.000827         0.000094
supply_(Intercept)            52.0044    -0.355820        -0.173988
supply_price                  -0.3558     0.003463         0.000187
supply_farmPrice              -0.1740     0.000187         0.001596
supply_trend                   0.0606    -0.000827         0.000094
                   supply_trend
demand_(Intercept)    -0.037918
demand_price          -0.000827
demand_income          0.001237
supply_(Intercept)     0.060620
supply_price          -0.000827
supply_farmPrice       0.000094
supply_trend           0.001237
> print( round( vcov( fitwlsi4e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)     30.4377 -0.265752 -0.037918
price           -0.2658  0.003463 -0.000827
income          -0.0379 -0.000827  0.001237
> 
> print( round( vcov( fitwlsi5e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            30.4377    -0.265752     -0.037918
demand_price                  -0.2658     0.003463     -0.000827
demand_income                 -0.0379    -0.000827      0.001237
supply_(Intercept)            29.6762    -0.355820      0.060620
supply_price                  -0.2658     0.003463     -0.000827
supply_farmPrice              -0.0279     0.000187      0.000094
supply_trend                  -0.0379    -0.000827      0.001237
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            29.6762    -0.265752        -0.027921
demand_price                  -0.3558     0.003463         0.000187
demand_income                  0.0606    -0.000827         0.000094
supply_(Intercept)            52.0044    -0.355820        -0.173988
supply_price                  -0.3558     0.003463         0.000187
supply_farmPrice              -0.1740     0.000187         0.001596
supply_trend                   0.0606    -0.000827         0.000094
                   supply_trend
demand_(Intercept)    -0.037918
demand_price          -0.000827
demand_income          0.001237
supply_(Intercept)     0.060620
supply_price          -0.000827
supply_farmPrice       0.000094
supply_trend           0.001237
> print( round( vcov( fitwlsi5e, modified.regMat = TRUE ), digits = 6 ) )
        C1        C2        C3      C4        C5        C6
C1 30.4377 -0.265752 -0.037918 29.6762 -0.265752 -0.027921
C2 -0.2658  0.003463 -0.000827 -0.3558  0.003463  0.000187
C3 -0.0379 -0.000827  0.001237  0.0606 -0.000827  0.000094
C4 29.6762 -0.355820  0.060620 52.0044 -0.355820 -0.173988
C5 -0.2658  0.003463 -0.000827 -0.3558  0.003463  0.000187
C6 -0.0279  0.000187  0.000094 -0.1740  0.000187  0.001596
> print( round( vcov( fitwlsi5e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     52.0044 -0.355820 -0.173988  0.060620
price           -0.3558  0.003463  0.000187 -0.000827
farmPrice       -0.1740  0.000187  0.001596  0.000094
trend            0.0606 -0.000827  0.000094  0.001237
> 
> 
> ## *********** confidence intervals of coefficients *************
> print( confint( fitwls1 ) )
                    2.5 %  97.5 %
demand_(Intercept) 84.031 115.760
demand_price       -0.508  -0.125
demand_income       0.239   0.430
supply_(Intercept) 33.975  82.576
supply_price       -0.041   0.362
supply_farmPrice    0.150   0.346
supply_trend        0.042   0.455
> print( confint( fitwls1$eq[[ 2 ]], level = 0.9 ) )
               5 %   95 %
(Intercept) 38.263 78.288
price       -0.005  0.326
farmPrice    0.167  0.329
trend        0.078  0.419
> 
> print( confint( fitwls2e, level = 0.9 ) )
                      5 %    95 %
demand_(Intercept) 85.474 113.818
demand_price       -0.464  -0.132
demand_income       0.241   0.396
supply_(Intercept) 35.634  76.786
supply_price       -0.010   0.339
supply_farmPrice    0.176   0.340
supply_trend        0.241   0.396
> print( confint( fitwls2e$eq[[ 1 ]], level = 0.99 ) )
             0.5 %  99.5 %
(Intercept) 80.620 118.672
price       -0.521  -0.076
income       0.215   0.422
> 
> print( confint( fitwls3, level = 0.99 ) )
                    0.5 %  99.5 %
demand_(Intercept) 84.286 115.030
demand_price       -0.479  -0.119
demand_income       0.235   0.404
supply_(Intercept) 33.190  79.186
supply_price       -0.031   0.359
supply_farmPrice    0.166   0.350
supply_trend        0.235   0.404
> print( confint( fitwls3$eq[[ 2 ]], level = 0.5 ) )
              25 %   75 %
(Intercept) 48.472 63.903
price        0.099  0.230
farmPrice    0.227  0.289
trend        0.291  0.348
> 
> print( confint( fitwls4e, level = 0.5 ) )
                     25 %    75 %
demand_(Intercept) 89.763 112.189
demand_price       -0.436  -0.197
demand_income       0.252   0.395
supply_(Intercept) 39.328  68.598
supply_price        0.064   0.303
supply_farmPrice    0.179   0.341
supply_trend        0.252   0.395
> print( confint( fitwls4e$eq[[ 1 ]], level = 0.25 ) )
            37.5 %  62.5 %
(Intercept) 99.202 102.750
price       -0.335  -0.297
income       0.312   0.335
> 
> print( confint( fitwls5, level = 0.25 ) )
                   37.5 %  62.5 %
demand_(Intercept) 88.637 113.191
demand_price       -0.448  -0.184
demand_income       0.246   0.402
supply_(Intercept) 37.764  70.119
supply_price        0.052   0.316
supply_farmPrice    0.170   0.351
supply_trend        0.246   0.402
> print( confint( fitwls5$eq[[ 2 ]], level = 0.975 ) )
             1.3 % 98.8 %
(Intercept) 35.279 72.604
price        0.032  0.336
farmPrice    0.156  0.365
trend        0.234  0.414
> 
> print( confint( fitwlsi1e, level = 0.975, useDfSys = TRUE ) )
                    1.3 %  98.8 %
demand_(Intercept) 85.791 114.000
demand_price       -0.486  -0.146
demand_income       0.249   0.420
supply_(Intercept) 37.416  79.135
supply_price       -0.012   0.333
supply_farmPrice    0.164   0.332
supply_trend        0.071   0.426
> print( confint( fitwlsi1e$eq[[ 1 ]], level = 0.999, useDfSys = TRUE ) )
             0.1 %   100 %
(Intercept) 74.863 124.928
price       -0.618  -0.014
income       0.183   0.486
> 
> print( confint( fitwlsi2, level = 0.999 ) )
                    0.1 %   100 %
demand_(Intercept) 84.342 114.979
demand_price       -0.479  -0.120
demand_income       0.235   0.404
supply_(Intercept) 33.120  79.246
supply_price       -0.031   0.360
supply_farmPrice    0.166   0.350
supply_trend        0.235   0.404
> print( confint( fitwlsi2$eq[[ 2 ]], level = 0.1 ) )
              45 %   55 %
(Intercept) 54.746 57.620
price        0.152  0.176
farmPrice    0.252  0.264
trend        0.314  0.325
> 
> print( confint( fitwlsi3e, level = 0.1 ) )
                     45 %    55 %
demand_(Intercept) 85.521 113.776
demand_price       -0.464  -0.133
demand_income       0.242   0.396
supply_(Intercept) 35.579  76.833
supply_price       -0.011   0.339
supply_farmPrice    0.176   0.340
supply_trend        0.242   0.396
> print( confint( fitwlsi3e$eq[[ 1 ]], level = 0.01 ) )
            49.5 % 50.5 %
(Intercept) 99.561 99.736
price       -0.299 -0.297
income       0.318  0.319
> 
> print( confint( fitwlsi4, level = 0.01 ) )
                   49.5 %  50.5 %
demand_(Intercept) 88.642 113.164
demand_price       -0.447  -0.184
demand_income       0.246   0.402
supply_(Intercept) 37.754  70.122
supply_price        0.053   0.316
supply_farmPrice    0.170   0.351
supply_trend        0.246   0.402
> print( confint( fitwlsi4$eq[[ 2 ]], level = 0.33 ) )
            33.5 % 66.5 %
(Intercept) 50.512 57.364
price        0.156  0.212
farmPrice    0.241  0.279
trend        0.307  0.340
> 
> print( confint( fitwlsi5e, level = 0.33 ) )
                   33.5 %  66.5 %
demand_(Intercept) 89.766 112.166
demand_price       -0.435  -0.197
demand_income       0.252   0.395
supply_(Intercept) 39.320  68.599
supply_price        0.065   0.303
supply_farmPrice    0.179   0.341
supply_trend        0.252   0.395
> print( confint( fitwlsi5e$eq[[ 1 ]] ) )
             2.5 %  97.5 %
(Intercept) 89.766 112.166
price       -0.435  -0.197
income       0.252   0.395
> 
> 
> ## *********** fitted values *************
> print( fitted( fitwls1 ) )
   demand supply
1    97.4   98.9
2    99.6  100.1
3    99.5  100.2
4    99.7  100.4
5   102.3  102.7
6   102.1  102.6
7   102.5  102.4
8   102.8  104.3
9   101.7  102.9
10  100.8  100.4
11   95.6   96.0
12   94.4   94.1
13   95.7   95.6
14   99.0   97.8
15  104.3  102.6
16  103.9  104.1
17  104.8  103.8
18  101.9  102.4
19  103.5  102.1
20  106.5  104.5
> print( fitted( fitwls1$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.9 100.1 100.2 100.4 102.7 102.6 102.4 104.3 102.9 100.4  96.0  94.1  95.6 
   14    15    16    17    18    19    20 
 97.8 102.6 104.1 103.8 102.4 102.1 104.5 
> 
> print( fitted( fitwls2e ) )
   demand supply
1    97.6   98.3
2    99.7   99.5
3    99.6   99.7
4    99.8   99.9
5   102.2  102.5
6   102.0  102.4
7   102.4  102.3
8   102.8  104.3
9   101.7  102.9
10  100.8  100.3
11   95.8   95.9
12   94.7   93.9
13   95.9   95.5
14   99.1   97.9
15  104.1  103.0
16  103.8  104.6
17  104.6  104.3
18  101.9  102.9
19  103.4  102.7
20  106.3  105.2
> print( fitted( fitwls2e$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.6  99.7  99.6  99.8 102.2 102.0 102.4 102.8 101.7 100.8  95.8  94.7  95.9 
   14    15    16    17    18    19    20 
 99.1 104.1 103.8 104.6 101.9 103.4 106.3 
> 
> print( fitted( fitwls3 ) )
   demand supply
1    97.6   98.3
2    99.6   99.5
3    99.6   99.7
4    99.8   99.9
5   102.2  102.5
6   102.0  102.4
7   102.4  102.3
8   102.8  104.3
9   101.7  102.9
10  100.8  100.3
11   95.8   95.9
12   94.7   93.9
13   95.9   95.5
14   99.1   97.9
15  104.1  103.0
16  103.8  104.6
17  104.6  104.3
18  101.9  102.9
19  103.4  102.7
20  106.3  105.2
> print( fitted( fitwls3$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.3  99.5  99.7  99.9 102.5 102.4 102.3 104.3 102.9 100.3  95.9  93.9  95.5 
   14    15    16    17    18    19    20 
 97.9 103.0 104.6 104.3 102.9 102.7 105.2 
> 
> print( fitted( fitwls4e ) )
   demand supply
1    97.5   98.2
2    99.6   99.6
3    99.5   99.7
4    99.7  100.0
5   102.3  102.4
6   102.0  102.4
7   102.4  102.3
8   102.7  104.4
9   101.7  102.9
10  100.9  100.2
11   95.8   95.7
12   94.6   93.9
13   95.8   95.5
14   99.1   97.8
15  104.2  102.9
16  103.8  104.6
17  104.8  104.1
18  101.9  103.0
19  103.3  102.8
20  106.2  105.5
> print( fitted( fitwls4e$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.5  99.6  99.5  99.7 102.3 102.0 102.4 102.7 101.7 100.9  95.8  94.6  95.8 
   14    15    16    17    18    19    20 
 99.1 104.2 103.8 104.8 101.9 103.3 106.2 
> 
> print( fitted( fitwls5 ) )
   demand supply
1    97.5   98.2
2    99.6   99.6
3    99.5   99.7
4    99.7  100.0
5   102.3  102.4
6   102.0  102.3
7   102.4  102.3
8   102.7  104.4
9   101.7  102.9
10  100.9  100.2
11   95.8   95.7
12   94.6   93.9
13   95.8   95.5
14   99.1   97.8
15  104.2  102.9
16  103.8  104.6
17  104.8  104.1
18  101.9  103.0
19  103.3  102.8
20  106.2  105.5
> print( fitted( fitwls5$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.2  99.6  99.7 100.0 102.4 102.3 102.3 104.4 102.9 100.2  95.7  93.9  95.5 
   14    15    16    17    18    19    20 
 97.8 102.9 104.6 104.1 103.0 102.8 105.5 
> 
> print( fitted( fitwlsi1e ) )
   demand supply
1    97.4   98.9
2    99.6  100.1
3    99.5  100.2
4    99.7  100.4
5   102.3  102.7
6   102.1  102.6
7   102.5  102.4
8   102.8  104.3
9   101.7  102.9
10  100.8  100.4
11   95.6   96.0
12   94.4   94.1
13   95.7   95.6
14   99.0   97.8
15  104.3  102.6
16  103.9  104.1
17  104.8  103.8
18  101.9  102.4
19  103.5  102.1
20  106.5  104.5
> print( fitted( fitwlsi1e$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.4  99.6  99.5  99.7 102.3 102.1 102.5 102.8 101.7 100.8  95.6  94.4  95.7 
   14    15    16    17    18    19    20 
 99.0 104.3 103.9 104.8 101.9 103.5 106.5 
> 
> print( fitted( fitwlsi2 ) )
   demand supply
1    97.6   98.3
2    99.6   99.5
3    99.6   99.7
4    99.8   99.9
5   102.2  102.5
6   102.0  102.4
7   102.4  102.3
8   102.8  104.3
9   101.7  102.9
10  100.8  100.3
11   95.8   95.9
12   94.7   93.9
13   95.9   95.5
14   99.1   97.9
15  104.1  103.0
16  103.8  104.6
17  104.6  104.3
18  101.9  102.9
19  103.4  102.7
20  106.3  105.2
> print( fitted( fitwlsi2$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.3  99.5  99.7  99.9 102.5 102.4 102.3 104.3 102.9 100.3  95.9  93.9  95.5 
   14    15    16    17    18    19    20 
 97.9 103.0 104.6 104.3 102.9 102.7 105.2 
> 
> print( fitted( fitwlsi3e ) )
   demand supply
1    97.6   98.3
2    99.7   99.5
3    99.6   99.7
4    99.8   99.9
5   102.2  102.5
6   102.0  102.4
7   102.4  102.3
8   102.8  104.3
9   101.7  102.9
10  100.8  100.3
11   95.8   95.9
12   94.7   93.9
13   95.9   95.5
14   99.1   97.9
15  104.1  103.0
16  103.8  104.6
17  104.6  104.3
18  101.9  102.9
19  103.4  102.7
20  106.3  105.2
> print( fitted( fitwlsi3e$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.6  99.7  99.6  99.8 102.2 102.0 102.4 102.8 101.7 100.8  95.8  94.7  95.9 
   14    15    16    17    18    19    20 
 99.1 104.1 103.8 104.6 101.9 103.4 106.3 
> 
> print( fitted( fitwlsi4 ) )
   demand supply
1    97.5   98.2
2    99.6   99.6
3    99.5   99.7
4    99.7  100.0
5   102.3  102.4
6   102.0  102.3
7   102.4  102.3
8   102.7  104.4
9   101.7  102.9
10  100.9  100.2
11   95.8   95.7
12   94.6   93.9
13   95.8   95.5
14   99.1   97.8
15  104.2  102.9
16  103.8  104.6
17  104.8  104.1
18  101.9  103.0
19  103.3  102.8
20  106.2  105.5
> print( fitted( fitwlsi4$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.2  99.6  99.7 100.0 102.4 102.3 102.3 104.4 102.9 100.2  95.7  93.9  95.5 
   14    15    16    17    18    19    20 
 97.8 102.9 104.6 104.1 103.0 102.8 105.5 
> 
> print( fitted( fitwlsi5e ) )
   demand supply
1    97.5   98.2
2    99.6   99.6
3    99.5   99.7
4    99.7  100.0
5   102.3  102.4
6   102.0  102.4
7   102.4  102.3
8   102.7  104.4
9   101.7  102.9
10  100.9  100.2
11   95.8   95.7
12   94.6   93.9
13   95.8   95.5
14   99.1   97.8
15  104.2  102.9
16  103.8  104.6
17  104.8  104.1
18  101.9  103.0
19  103.3  102.8
20  106.2  105.5
> print( fitted( fitwlsi5e$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.5  99.6  99.5  99.7 102.3 102.0 102.4 102.7 101.7 100.9  95.8  94.6  95.8 
   14    15    16    17    18    19    20 
 99.1 104.2 103.8 104.8 101.9 103.3 106.2 
> 
> 
> ## *********** predicted values *************
> predictData <- Kmenta
> predictData$consump <- NULL
> predictData$price <- Kmenta$price * 0.9
> predictData$income <- Kmenta$income * 1.1
> 
> print( predict( fitwls1, se.fit = TRUE, interval = "prediction" ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         97.4         0.643       93.1      101.7        98.9         1.056
2         99.6         0.577       95.3      103.8       100.1         1.037
3         99.5         0.545       95.3      103.8       100.2         0.939
4         99.7         0.582       95.4      104.0       100.4         0.912
5        102.3         0.502       98.1      106.5       102.7         0.895
6        102.1         0.463       97.9      106.3       102.6         0.791
7        102.5         0.484       98.3      106.7       102.4         0.719
8        102.8         0.601       98.6      107.1       104.3         0.963
9        101.7         0.527       97.5      105.9       102.9         0.788
10       100.8         0.788       96.4      105.2       100.4         0.981
11        95.6         0.946       91.0      100.1        96.0         1.185
12        94.4         0.980       89.8       98.9        94.1         1.394
13        95.7         0.880       91.2      100.1        95.6         1.244
14        99.0         0.508       94.8      103.2        97.8         0.896
15       104.3         0.758       99.9      108.7       102.6         0.874
16       103.9         0.616       99.7      108.2       104.1         0.916
17       104.8         1.273       99.9      109.7       103.8         1.605
18       101.9         0.536       97.7      106.2       102.4         0.962
19       103.5         0.680       99.2      107.8       102.1         1.098
20       106.5         1.274      101.7      111.4       104.5         1.664
   supply.lwr supply.upr
1        93.4        104
2        94.5        106
3        94.7        106
4        94.9        106
5        97.3        108
6        97.2        108
7        97.1        108
8        98.8        110
9        97.6        108
10       94.8        106
11       90.3        102
12       88.2        100
13       89.9        101
14       92.3        103
15       97.2        108
16       98.6        110
17       97.7        110
18       96.9        108
19       96.5        108
20       98.3        111
> print( predict( fitwls1$eq[[ 2 ]], se.fit = TRUE, interval = "prediction" ) )
     fit se.fit  lwr upr
1   98.9  1.056 93.4 104
2  100.1  1.037 94.5 106
3  100.2  0.939 94.7 106
4  100.4  0.912 94.9 106
5  102.7  0.895 97.3 108
6  102.6  0.791 97.2 108
7  102.4  0.719 97.1 108
8  104.3  0.963 98.8 110
9  102.9  0.788 97.6 108
10 100.4  0.981 94.8 106
11  96.0  1.185 90.3 102
12  94.1  1.394 88.2 100
13  95.6  1.244 89.9 101
14  97.8  0.896 92.3 103
15 102.6  0.874 97.2 108
16 104.1  0.916 98.6 110
17 103.8  1.605 97.7 110
18 102.4  0.962 96.9 108
19 102.1  1.098 96.5 108
20 104.5  1.664 98.3 111
> 
> print( predict( fitwls2e, se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1          103           2.12      100.2        106        96.6           2.65
2          106           2.12      102.7        109        97.8           2.57
3          106           2.13      102.6        109        98.0           2.58
4          106           2.12      102.9        109        98.2           2.56
5          108           2.35      103.5        113       100.9           2.72
6          108           2.31      103.6        113       100.7           2.67
7          109           2.30      104.2        113       100.6           2.62
8          109           2.27      105.0        114       102.6           2.58
9          108           2.36      102.8        112       101.4           2.74
10         106           2.46      100.8        112        98.8           2.92
11         101           2.28       96.7        105        94.4           2.98
12         100           2.12       97.0        103        92.3           2.96
13         102           2.05       99.3        104        93.8           2.81
14         105           2.20      101.2        109        96.3           2.78
15         110           2.53      104.4        116       101.4           2.78
16         110           2.44      104.7        115       102.9           2.69
17         110           2.81      102.9        118       102.9           3.14
18         108           2.23      104.3        112       101.2           2.58
19         110           2.30      105.6        115       100.9           2.57
20         114           2.50      108.1        119       103.3           2.52
   supply.lwr supply.upr
1        92.9      100.3
2        95.0      100.6
3        95.1      100.9
4        95.5      100.9
5        96.6      105.1
6        96.9      104.6
7        97.2      104.0
8        99.6      105.5
9        96.9      105.9
10       93.1      104.6
11       88.2      100.5
12       86.3       98.4
13       88.8       98.9
14       91.5      101.0
15       96.7      106.2
16       98.9      106.9
17       95.8      110.0
18       98.2      104.1
19       98.1      103.8
20      101.1      105.6
> print( predict( fitwls2e$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   fit se.pred   lwr upr
1  103    2.12 100.2 106
2  106    2.12 102.7 109
3  106    2.13 102.6 109
4  106    2.12 102.9 109
5  108    2.35 103.5 113
6  108    2.31 103.6 113
7  109    2.30 104.2 113
8  109    2.27 105.0 114
9  108    2.36 102.8 112
10 106    2.46 100.8 112
11 101    2.28  96.7 105
12 100    2.12  97.0 103
13 102    2.05  99.3 104
14 105    2.20 101.2 109
15 110    2.53 104.4 116
16 110    2.44 104.7 115
17 110    2.81 102.9 118
18 108    2.23 104.3 112
19 110    2.30 105.6 115
20 114    2.50 108.1 119
> 
> print( predict( fitwls3, se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1         97.6           2.03       92.8      102.3        98.3           2.54
2         99.6           2.02       94.9      104.4        99.5           2.56
3         99.6           2.01       94.9      104.3        99.7           2.55
4         99.8           2.02       95.0      104.5        99.9           2.56
5        102.2           2.00       97.5      106.9       102.5           2.59
6        102.0           1.99       97.3      106.7       102.4           2.56
7        102.4           1.99       97.7      107.1       102.3           2.54
8        102.8           2.03       98.0      107.5       104.3           2.63
9        101.7           2.01       97.0      106.4       102.9           2.57
10       100.8           2.09       95.9      105.7       100.3           2.64
11        95.8           2.14       90.8      100.8        95.9           2.72
12        94.7           2.14       89.6       99.7        93.9           2.82
13        95.9           2.11       91.0      100.8        95.5           2.75
14        99.1           2.00       94.4      103.8        97.9           2.61
15       104.1           2.07       99.3      109.0       103.0           2.56
16       103.8           2.03       99.0      108.5       104.6           2.55
17       104.6           2.31       99.2      110.0       104.3           2.85
18       101.9           2.01       97.2      106.6       102.9           2.55
19       103.4           2.05       98.6      108.2       102.7           2.59
20       106.3           2.31      100.9      111.7       105.2           2.84
   supply.lwr supply.upr
1        92.3        104
2        93.5        106
3        93.7        106
4        93.9        106
5        96.4        109
6        96.4        108
7        96.3        108
8        98.1        110
9        96.9        109
10       94.1        107
11       89.5        102
12       87.3        101
13       89.1        102
14       91.8        104
15       97.0        109
16       98.6        111
17       97.6        111
18       96.9        109
19       96.6        109
20       98.6        112
> print( predict( fitwls3$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
     fit se.pred  lwr upr
1   98.3    2.54 92.3 104
2   99.5    2.56 93.5 106
3   99.7    2.55 93.7 106
4   99.9    2.56 93.9 106
5  102.5    2.59 96.4 109
6  102.4    2.56 96.4 108
7  102.3    2.54 96.3 108
8  104.3    2.63 98.1 110
9  102.9    2.57 96.9 109
10 100.3    2.64 94.1 107
11  95.9    2.72 89.5 102
12  93.9    2.82 87.3 101
13  95.5    2.75 89.1 102
14  97.9    2.61 91.8 104
15 103.0    2.56 97.0 109
16 104.6    2.55 98.6 111
17 104.3    2.85 97.6 111
18 102.9    2.55 96.9 109
19 102.7    2.59 96.6 109
20 105.2    2.84 98.6 112
> 
> print( predict( fitwls4e, se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         97.5         0.541       97.4       97.7        98.2         0.598
2         99.6         0.471       99.4       99.7        99.6         0.679
3         99.5         0.454       99.4       99.7        99.7         0.634
4         99.7         0.475       99.5       99.8       100.0         0.643
5        102.3         0.434      102.1      102.4       102.4         0.753
6        102.0         0.418      101.9      102.2       102.4         0.680
7        102.4         0.440      102.3      102.5       102.3         0.625
8        102.7         0.537      102.5      102.9       104.4         0.799
9        101.7         0.447      101.6      101.9       102.9         0.700
10       100.9         0.628      100.7      101.1       100.2         0.716
11        95.8         0.833       95.6       96.1        95.7         0.916
12        94.6         0.807       94.4       94.9        93.9         1.226
13        95.8         0.677       95.6       96.0        95.5         1.130
14        99.1         0.459       98.9       99.2        97.8         0.796
15       104.2         0.572      104.1      104.4       102.9         0.656
16       103.8         0.509      103.7      104.0       104.6         0.644
17       104.8         0.877      104.5      105.1       104.1         1.150
18       101.9         0.478      101.7      102.0       103.0         0.575
19       103.3         0.604      103.1      103.5       102.8         0.649
20       106.2         1.102      105.8      106.6       105.5         0.875
   supply.lwr supply.upr
1        98.0       98.4
2        99.4       99.8
3        99.5       99.9
4        99.8      100.2
5       102.2      102.7
6       102.1      102.6
7       102.1      102.5
8       104.1      104.6
9       102.7      103.1
10       99.9      100.4
11       95.4       96.0
12       93.5       94.3
13       95.2       95.9
14       97.6       98.1
15      102.7      103.1
16      104.4      104.8
17      103.8      104.5
18      102.8      103.2
19      102.6      103.0
20      105.2      105.8
> print( predict( fitwls4e$eq[[ 1 ]], se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
     fit se.fit   lwr   upr
1   97.5  0.541  97.4  97.7
2   99.6  0.471  99.4  99.7
3   99.5  0.454  99.4  99.7
4   99.7  0.475  99.5  99.8
5  102.3  0.434 102.1 102.4
6  102.0  0.418 101.9 102.2
7  102.4  0.440 102.3 102.5
8  102.7  0.537 102.5 102.9
9  101.7  0.447 101.6 101.9
10 100.9  0.628 100.7 101.1
11  95.8  0.833  95.6  96.1
12  94.6  0.807  94.4  94.9
13  95.8  0.677  95.6  96.0
14  99.1  0.459  98.9  99.2
15 104.2  0.572 104.1 104.4
16 103.8  0.509 103.7 104.0
17 104.8  0.877 104.5 105.1
18 101.9  0.478 101.7 102.0
19 103.3  0.604 103.1 103.5
20 106.2  1.102 105.8 106.6
> 
> print( predict( fitwls5, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1          104         0.749           2.07      102.1        105        96.4
2          106         0.784           2.09      104.6        107        97.7
3          106         0.793           2.09      104.5        107        97.8
4          106         0.792           2.09      104.8        108        98.1
5          109         1.136           2.24      107.1        110       100.6
6          108         1.086           2.22      106.9        110       100.5
7          109         1.097           2.22      107.4        110       100.4
8          110         1.107           2.23      108.0        111       102.5
9          108         1.126           2.24      106.4        109       101.1
10         107         1.243           2.30      105.1        108        98.5
11         101         1.066           2.21       99.7        103        94.0
12         100         0.814           2.10       98.8        102        92.0
13         102         0.617           2.03      100.4        103        93.7
14         105         0.874           2.12      103.7        107        96.0
15         111         1.377           2.37      109.0        112       101.2
16         110         1.279           2.32      108.8        112       102.8
17         111         1.656           2.55      108.9        112       102.5
18         109         1.014           2.18      107.0        110       101.1
19         110         1.180           2.27      108.7        112       100.9
20         114         1.635           2.53      112.2        116       103.4
   supply.se.fit supply.se.pred supply.lwr supply.upr
1          0.799           2.58       94.6       98.1
2          0.679           2.55       95.9       99.4
3          0.692           2.55       96.1       99.6
4          0.657           2.54       96.3       99.8
5          1.051           2.67       98.8      102.5
6          0.947           2.63       98.7      102.3
7          0.845           2.59       98.7      102.2
8          0.849           2.60      100.7      104.2
9          1.100           2.69       99.3      103.0
10         1.276           2.77       96.6      100.4
11         1.422           2.84       92.1       95.9
12         1.595           2.93       90.1       94.0
13         1.401           2.82       91.7       95.6
14         1.201           2.73       94.2       97.9
15         1.169           2.72       99.3      103.0
16         1.060           2.67      100.9      104.6
17         1.727           3.00      100.5      104.6
18         0.831           2.59       99.3      102.8
19         0.834           2.59       99.1      102.6
20         0.653           2.54      101.7      105.2
> print( predict( fitwls5$eq[[ 2 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
     fit se.fit se.pred   lwr   upr
1   96.4  0.799    2.58  94.6  98.1
2   97.7  0.679    2.55  95.9  99.4
3   97.8  0.692    2.55  96.1  99.6
4   98.1  0.657    2.54  96.3  99.8
5  100.6  1.051    2.67  98.8 102.5
6  100.5  0.947    2.63  98.7 102.3
7  100.4  0.845    2.59  98.7 102.2
8  102.5  0.849    2.60 100.7 104.2
9  101.1  1.100    2.69  99.3 103.0
10  98.5  1.276    2.77  96.6 100.4
11  94.0  1.422    2.84  92.1  95.9
12  92.0  1.595    2.93  90.1  94.0
13  93.7  1.401    2.82  91.7  95.6
14  96.0  1.201    2.73  94.2  97.9
15 101.2  1.169    2.72  99.3 103.0
16 102.8  1.060    2.67 100.9 104.6
17 102.5  1.727    3.00 100.5 104.6
18 101.1  0.831    2.59  99.3 102.8
19 100.9  0.834    2.59  99.1 102.6
20 103.4  0.653    2.54 101.7 105.2
> 
> print( predict( fitwlsi1e, se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99, useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         97.4         0.593           2.02       95.8       99.0        98.9
2         99.6         0.532           2.00       98.1      101.0       100.1
3         99.5         0.502           1.99       98.2      100.9       100.2
4         99.7         0.537           2.00       98.2      101.2       100.4
5        102.3         0.463           1.98      101.0      103.6       102.7
6        102.1         0.427           1.98      100.9      103.2       102.6
7        102.5         0.446           1.98      101.2      103.7       102.4
8        102.8         0.554           2.01      101.3      104.3       104.3
9        101.7         0.486           1.99      100.4      103.0       102.9
10       100.8         0.727           2.06       98.8      102.8       100.4
11        95.6         0.872           2.12       93.2       98.0        96.0
12        94.4         0.903           2.13       91.9       96.8        94.1
13        95.7         0.811           2.09       93.4       97.9        95.6
14        99.0         0.468           1.99       97.7      100.3        97.8
15       104.3         0.699           2.05      102.4      106.2       102.6
16       103.9         0.568           2.01      102.4      105.5       104.1
17       104.8         1.174           2.26      101.6      108.0       103.8
18       101.9         0.494           1.99      100.6      103.3       102.4
19       103.5         0.627           2.03      101.8      105.2       102.1
20       106.5         1.175           2.26      103.3      109.7       104.5
   supply.se.fit supply.se.pred supply.lwr supply.upr
1          0.945           2.58       96.3      101.5
2          0.928           2.58       97.5      102.6
3          0.839           2.55       97.9      102.5
4          0.816           2.54       98.1      102.6
5          0.800           2.53      100.5      104.9
6          0.707           2.51      100.6      104.5
7          0.643           2.49      100.7      104.2
8          0.862           2.55      102.0      106.7
9          0.705           2.51      101.0      104.9
10         0.877           2.56       98.0      102.7
11         1.060           2.63       93.1       98.9
12         1.247           2.71       90.7       97.5
13         1.113           2.65       92.6       98.6
14         0.801           2.53       95.6      100.0
15         0.782           2.53      100.5      104.8
16         0.819           2.54      101.9      106.3
17         1.436           2.80       99.9      107.7
18         0.861           2.55      100.0      104.7
19         0.982           2.60       99.4      104.8
20         1.489           2.83      100.4      108.6
> print( predict( fitwlsi1e$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99, useDfSys = TRUE ) )
     fit se.fit se.pred   lwr   upr
1   97.4  0.593    2.02  95.8  99.0
2   99.6  0.532    2.00  98.1 101.0
3   99.5  0.502    1.99  98.2 100.9
4   99.7  0.537    2.00  98.2 101.2
5  102.3  0.463    1.98 101.0 103.6
6  102.1  0.427    1.98 100.9 103.2
7  102.5  0.446    1.98 101.2 103.7
8  102.8  0.554    2.01 101.3 104.3
9  101.7  0.486    1.99 100.4 103.0
10 100.8  0.727    2.06  98.8 102.8
11  95.6  0.872    2.12  93.2  98.0
12  94.4  0.903    2.13  91.9  96.8
13  95.7  0.811    2.09  93.4  97.9
14  99.0  0.468    1.99  97.7 100.3
15 104.3  0.699    2.05 102.4 106.2
16 103.9  0.568    2.01 102.4 105.5
17 104.8  1.174    2.26 101.6 108.0
18 101.9  0.494    1.99 100.6 103.3
19 103.5  0.627    2.03 101.8 105.2
20 106.5  1.175    2.26 103.3 109.7
> 
> print( predict( fitwlsi2, se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1          103         0.937       99.7        107        96.6         1.151
2          106         0.942      102.2        110        97.8         0.875
3          106         0.966      102.1        109        98.0         0.909
4          106         0.947      102.4        110        98.2         0.833
5          108         1.448      104.3        112       100.9         1.327
6          108         1.368      104.2        112       100.7         1.192
7          109         1.352      104.7        113       100.6         1.052
8          109         1.293      105.4        113       102.6         0.914
9          108         1.459      103.5        112       101.4         1.400
10         106         1.647      102.0        111        98.8         1.787
11         101         1.300       97.0        105        94.4         1.911
12         100         0.938       96.4        104        92.3         1.880
13         102         0.722       98.2        105        93.8         1.565
14         105         1.121      101.1        109        96.3         1.479
15         110         1.769      105.8        115       101.4         1.481
16         110         1.602      105.8        114       102.9         1.248
17         110         2.210      105.3        115       102.9         2.201
18         108         1.205      104.5        112       101.2         0.911
19         110         1.353      106.1        114       100.9         0.877
20         114         1.714      109.4        118       103.3         0.705
   supply.lwr supply.upr
1        92.0      101.2
2        93.4      102.2
3        93.6      102.4
4        93.9      102.6
5        96.2      105.6
6        96.1      105.3
7        96.1      105.1
8        98.1      107.0
9        96.6      106.1
10       93.7      103.9
11       89.1       99.6
12       87.1       97.5
13       88.9       98.8
14       91.4      101.1
15       96.6      106.3
16       98.3      107.6
17       97.4      108.5
18       96.8      105.6
19       96.5      105.3
20       99.0      107.7
> print( predict( fitwlsi2$eq[[ 2 ]], se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
     fit se.fit  lwr   upr
1   96.6  1.151 92.0 101.2
2   97.8  0.875 93.4 102.2
3   98.0  0.909 93.6 102.4
4   98.2  0.833 93.9 102.6
5  100.9  1.327 96.2 105.6
6  100.7  1.192 96.1 105.3
7  100.6  1.052 96.1 105.1
8  102.6  0.914 98.1 107.0
9  101.4  1.400 96.6 106.1
10  98.8  1.787 93.7 103.9
11  94.4  1.911 89.1  99.6
12  92.3  1.880 87.1  97.5
13  93.8  1.565 88.9  98.8
14  96.3  1.479 91.4 101.1
15 101.4  1.481 96.6 106.3
16 102.9  1.248 98.3 107.6
17 102.9  2.201 97.4 108.5
18 101.2  0.911 96.8 105.6
19 100.9  0.877 96.5 105.3
20 103.3  0.705 99.0 107.7
> 
> print( predict( fitwlsi3e, interval = "prediction", level = 0.925 ) )
   demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1         97.6       93.9      101.3        98.3       93.6        103
2         99.7       96.0      103.3        99.5       94.9        104
3         99.6       95.9      103.3        99.7       95.1        104
4         99.8       96.1      103.5        99.9       95.3        105
5        102.2       98.6      105.9       102.5       97.8        107
6        102.0       98.4      105.7       102.4       97.7        107
7        102.4       98.7      106.0       102.3       97.6        107
8        102.8       99.1      106.5       104.3       99.5        109
9        101.7       98.0      105.3       102.9       98.3        108
10       100.8       97.0      104.6       100.3       95.5        105
11        95.8       91.9       99.7        95.9       91.0        101
12        94.7       90.8       98.6        93.9       88.9         99
13        95.9       92.1       99.7        95.5       90.6        100
14        99.1       95.4      102.7        97.9       93.2        103
15       104.1      100.4      107.9       103.0       98.3        108
16       103.8      100.1      107.5       104.6       99.9        109
17       104.6      100.4      108.7       104.3       99.2        109
18       101.9       98.2      105.6       102.9       98.2        108
19       103.4       99.6      107.1       102.7       98.0        107
20       106.3      102.2      110.4       105.2      100.1        110
> print( predict( fitwlsi3e$eq[[ 1 ]], interval = "prediction", level = 0.925 ) )
     fit   lwr   upr
1   97.6  93.9 101.3
2   99.7  96.0 103.3
3   99.6  95.9 103.3
4   99.8  96.1 103.5
5  102.2  98.6 105.9
6  102.0  98.4 105.7
7  102.4  98.7 106.0
8  102.8  99.1 106.5
9  101.7  98.0 105.3
10 100.8  97.0 104.6
11  95.8  91.9  99.7
12  94.7  90.8  98.6
13  95.9  92.1  99.7
14  99.1  95.4 102.7
15 104.1 100.4 107.9
16 103.8 100.1 107.5
17 104.6 100.4 108.7
18 101.9  98.2 105.6
19 103.4  99.6 107.1
20 106.3 102.2 110.4
> 
> print( predict( fitwlsi4, interval = "confidence", newdata = predictData ) )
   demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1          104      102.0        105        96.4       94.8       98.0
2          106      104.4        108        97.7       96.3       99.0
3          106      104.3        108        97.8       96.4       99.2
4          106      104.6        108        98.1       96.7       99.4
5          109      106.3        111       100.6       98.5      102.8
6          108      106.2        111       100.5       98.6      102.4
7          109      106.7        111       100.4       98.7      102.2
8          110      107.3        112       102.5      100.7      104.2
9          108      105.6        110       101.1       98.9      103.4
10         107      104.1        109        98.5       95.9      101.1
11         101       99.0        103        94.0       91.1       96.9
12         100       98.6        102        92.0       88.8       95.3
13         102      100.5        103        93.7       90.8       96.5
14         105      103.3        107        96.0       93.6       98.5
15         111      107.8        113       101.2       98.8      103.6
16         110      107.8        113       102.8      100.6      104.9
17         111      107.3        114       102.5       99.0      106.0
18         109      106.5        111       101.1       99.4      102.8
19         110      107.9        113       100.9       99.2      102.6
20         114      110.6        117       103.4      102.1      104.7
> print( predict( fitwlsi4$eq[[ 2 ]], interval = "confidence",
+    newdata = predictData ) )
     fit   lwr   upr
1   96.4  94.8  98.0
2   97.7  96.3  99.0
3   97.8  96.4  99.2
4   98.1  96.7  99.4
5  100.6  98.5 102.8
6  100.5  98.6 102.4
7  100.4  98.7 102.2
8  102.5 100.7 104.2
9  101.1  98.9 103.4
10  98.5  95.9 101.1
11  94.0  91.1  96.9
12  92.0  88.8  95.3
13  93.7  90.8  96.5
14  96.0  93.6  98.5
15 101.2  98.8 103.6
16 102.8 100.6 104.9
17 102.5  99.0 106.0
18 101.1  99.4 102.8
19 100.9  99.2 102.6
20 103.4 102.1 104.7
> 
> print( predict( fitwlsi5e, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.01 ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         97.5         0.540           2.01       97.5       97.6        98.2
2         99.6         0.470           1.99       99.6       99.6        99.6
3         99.5         0.453           1.99       99.5       99.6        99.7
4         99.7         0.474           1.99       99.7       99.7       100.0
5        102.3         0.433           1.98      102.2      102.3       102.4
6        102.0         0.417           1.98      102.0      102.1       102.4
7        102.4         0.439           1.98      102.4      102.4       102.3
8        102.7         0.536           2.01      102.7      102.7       104.4
9        101.7         0.446           1.99      101.7      101.8       102.9
10       100.9         0.627           2.03      100.9      100.9       100.2
11        95.8         0.831           2.11       95.8       95.9        95.7
12        94.6         0.806           2.10       94.6       94.6        93.9
13        95.8         0.676           2.05       95.8       95.8        95.5
14        99.1         0.458           1.99       99.0       99.1        97.8
15       104.2         0.571           2.02      104.2      104.3       102.9
16       103.8         0.508           2.00      103.8      103.9       104.6
17       104.8         0.877           2.12      104.8      104.8       104.1
18       101.9         0.477           1.99      101.8      101.9       103.0
19       103.3         0.602           2.03      103.3      103.4       102.8
20       106.2         1.100           2.23      106.2      106.2       105.5
   supply.se.fit supply.se.pred supply.lwr supply.upr
1          0.598           2.52       98.2       98.3
2          0.680           2.54       99.5       99.6
3          0.634           2.53       99.7       99.8
4          0.644           2.54      100.0      100.0
5          0.754           2.57      102.4      102.5
6          0.681           2.55      102.3      102.4
7          0.626           2.53      102.3      102.3
8          0.800           2.58      104.4      104.4
9          0.701           2.55      102.9      102.9
10         0.716           2.55      100.1      100.2
11         0.918           2.62       95.7       95.8
12         1.229           2.74       93.8       93.9
13         1.132           2.70       95.5       95.6
14         0.797           2.58       97.8       97.9
15         0.657           2.54      102.9      103.0
16         0.645           2.54      104.5      104.6
17         1.151           2.71      104.1      104.2
18         0.575           2.52      103.0      103.0
19         0.649           2.54      102.8      102.8
20         0.875           2.60      105.5      105.5
> print( predict( fitwlsi5e$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.01 ) )
     fit se.fit se.pred   lwr   upr
1   97.5  0.540    2.01  97.5  97.6
2   99.6  0.470    1.99  99.6  99.6
3   99.5  0.453    1.99  99.5  99.6
4   99.7  0.474    1.99  99.7  99.7
5  102.3  0.433    1.98 102.2 102.3
6  102.0  0.417    1.98 102.0 102.1
7  102.4  0.439    1.98 102.4 102.4
8  102.7  0.536    2.01 102.7 102.7
9  101.7  0.446    1.99 101.7 101.8
10 100.9  0.627    2.03 100.9 100.9
11  95.8  0.831    2.11  95.8  95.9
12  94.6  0.806    2.10  94.6  94.6
13  95.8  0.676    2.05  95.8  95.8
14  99.1  0.458    1.99  99.0  99.1
15 104.2  0.571    2.02 104.2 104.3
16 103.8  0.508    2.00 103.8 103.9
17 104.8  0.877    2.12 104.8 104.8
18 101.9  0.477    1.99 101.8 101.9
19 103.3  0.602    2.03 103.3 103.4
20 106.2  1.100    2.23 106.2 106.2
> 
> # predict just one observation
> smallData <- data.frame( price = 130, income = 150, farmPrice = 120,
+    trend = 25 )
> 
> print( predict( fitwls1, newdata = smallData ) )
  demand.pred supply.pred
1         109         115
> print( predict( fitwls1$eq[[ 1 ]], newdata = smallData ) )
  fit
1 109
> 
> print( predict( fitwls2e, se.fit = TRUE, level = 0.9,
+    newdata = smallData ) )
  demand.pred demand.se.fit supply.pred supply.se.fit
1         109          2.23         116          3.03
> print( predict( fitwls2e$eq[[ 1 ]], se.pred = TRUE, level = 0.99,
+    newdata = smallData ) )
  fit se.pred
1 109    2.96
> 
> print( predict( fitwls3, interval = "prediction", level = 0.975,
+    newdata = smallData ) )
  demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1         109        101        116         116        107        126
> print( predict( fitwls3$eq[[ 1 ]], interval = "confidence", level = 0.8,
+    newdata = smallData ) )
  fit lwr upr
1 109 106 112
> 
> print( predict( fitwls4e, se.fit = TRUE, interval = "confidence",
+    level = 0.999, newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         108          2.02        101        116         117          2.02
  supply.lwr supply.upr
1        110        124
> print( predict( fitwls4e$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.75, newdata = smallData ) )
  fit se.pred lwr upr
1 117    3.18 113 121
> 
> print( predict( fitwls5, se.fit = TRUE, interval = "prediction",
+    newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         108           2.2        102        114         117          2.23
  supply.lwr supply.upr
1        110        124
> print( predict( fitwls5$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    newdata = smallData ) )
  fit se.pred lwr upr
1 108    2.93 104 113
> 
> print( predict( fitwlsi3e, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         109          2.23           2.95        107        111         116
  supply.se.fit supply.se.pred supply.lwr supply.upr
1          3.04            3.9        114        119
> print( predict( fitwlsi3e$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
  fit se.fit se.pred lwr upr
1 109   2.23    2.95 108 109
> 
> 
> ## ************ correlation of predicted values ***************
> print( correlation.systemfit( fitwls1, 2, 1 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fitwls2e, 1, 2 ) )
           [,1]
 [1,]  0.411525
 [2,]  0.147624
 [3,]  0.147711
 [4,]  0.107654
 [5,] -0.069284
 [6,] -0.053039
 [7,] -0.051551
 [8,] -0.006153
 [9,] -0.000333
[10,] -0.001262
[11,]  0.048574
[12,]  0.064996
[13,]  0.024618
[14,] -0.028485
[15,]  0.174980
[16,]  0.252722
[17,]  0.103392
[18,]  0.074219
[19,]  0.156545
[20,]  0.135438
> 
> print( correlation.systemfit( fitwls3, 2, 1 ) )
           [,1]
 [1,]  0.405901
 [2,]  0.145364
 [3,]  0.145375
 [4,]  0.105835
 [5,] -0.067958
 [6,] -0.052026
 [7,] -0.050543
 [8,] -0.006031
 [9,] -0.000326
[10,] -0.001237
[11,]  0.047534
[12,]  0.063493
[13,]  0.024060
[14,] -0.027910
[15,]  0.171580
[16,]  0.248212
[17,]  0.101409
[18,]  0.073084
[19,]  0.153950
[20,]  0.132944
> 
> print( correlation.systemfit( fitwls4e, 1, 2 ) )
          [,1]
 [1,]  0.38162
 [2,]  0.29173
 [3,]  0.25421
 [4,]  0.28598
 [5,] -0.02775
 [6,] -0.04974
 [7,] -0.05850
 [8,]  0.09388
 [9,]  0.09469
[10,]  0.43814
[11,]  0.10559
[12,]  0.00876
[13,]  0.04090
[14,] -0.03984
[15,]  0.40767
[16,]  0.24571
[17,]  0.64160
[18,]  0.24037
[19,]  0.34075
[20,]  0.54270
> 
> print( correlation.systemfit( fitwls5, 2, 1 ) )
         [,1]
 [1,]  0.3775
 [2,]  0.2936
 [3,]  0.2553
 [4,]  0.2875
 [5,] -0.0274
 [6,] -0.0492
 [7,] -0.0578
 [8,]  0.0932
 [9,]  0.0944
[10,]  0.4375
[11,]  0.1027
[12,]  0.0072
[13,]  0.0404
[14,] -0.0396
[15,]  0.4062
[16,]  0.2430
[17,]  0.6406
[18,]  0.2362
[19,]  0.3347
[20,]  0.5378
> 
> print( correlation.systemfit( fitwlsi1e, 1, 2 ) )
      [,1]
 [1,]    0
 [2,]    0
 [3,]    0
 [4,]    0
 [5,]    0
 [6,]    0
 [7,]    0
 [8,]    0
 [9,]    0
[10,]    0
[11,]    0
[12,]    0
[13,]    0
[14,]    0
[15,]    0
[16,]    0
[17,]    0
[18,]    0
[19,]    0
[20,]    0
> 
> print( correlation.systemfit( fitwlsi2, 2, 1 ) )
           [,1]
 [1,]  0.404696
 [2,]  0.144881
 [3,]  0.144877
 [4,]  0.105448
 [5,] -0.067678
 [6,] -0.051812
 [7,] -0.050330
 [8,] -0.006005
 [9,] -0.000325
[10,] -0.001232
[11,]  0.047315
[12,]  0.063179
[13,]  0.023943
[14,] -0.027789
[15,]  0.170862
[16,]  0.247256
[17,]  0.100990
[18,]  0.072842
[19,]  0.153398
[20,]  0.132415
> 
> print( correlation.systemfit( fitwlsi3e, 1, 2 ) )
           [,1]
 [1,]  0.410485
 [2,]  0.147206
 [3,]  0.147278
 [4,]  0.107316
 [5,] -0.069036
 [6,] -0.052850
 [7,] -0.051363
 [8,] -0.006130
 [9,] -0.000331
[10,] -0.001257
[11,]  0.048379
[12,]  0.064714
[13,]  0.024513
[14,] -0.028377
[15,]  0.174345
[16,]  0.251882
[17,]  0.103022
[18,]  0.074009
[19,]  0.156063
[20,]  0.134974
> 
> print( correlation.systemfit( fitwlsi4, 2, 1 ) )
          [,1]
 [1,]  0.37672
 [2,]  0.29387
 [3,]  0.25544
 [4,]  0.28775
 [5,] -0.02729
 [6,] -0.04911
 [7,] -0.05771
 [8,]  0.09311
 [9,]  0.09437
[10,]  0.43736
[11,]  0.10223
[12,]  0.00693
[13,]  0.04035
[14,] -0.03961
[15,]  0.40591
[16,]  0.24248
[17,]  0.64034
[18,]  0.23551
[19,]  0.33360
[20,]  0.53687
> 
> print( correlation.systemfit( fitwlsi5e, 1, 2 ) )
          [,1]
 [1,]  0.38098
 [2,]  0.29204
 [3,]  0.25439
 [4,]  0.28624
 [5,] -0.02769
 [6,] -0.04966
 [7,] -0.05840
 [8,]  0.09378
 [9,]  0.09465
[10,]  0.43805
[11,]  0.10513
[12,]  0.00851
[13,]  0.04083
[14,] -0.03981
[15,]  0.40746
[16,]  0.24528
[17,]  0.64146
[18,]  0.23972
[19,]  0.33979
[20,]  0.54192
> 
> 
> ## ************ Log-Likelihood values ***************
> print( logLik( fitwls1 ) )
'log Lik.' -67.8 (df=9)
> 
> print( logLik( fitwls2e ) )
'log Lik.' -61.5 (df=8)
> 
> print( logLik( fitwls3 ) )
'log Lik.' -61.4 (df=8)
> 
> print( logLik( fitwls4e ) )
'log Lik.' -62.2 (df=7)
> 
> print( logLik( fitwls5 ) )
'log Lik.' -62.1 (df=7)
> 
> print( logLik( fitwlsi1e ) )
'log Lik.' -67.8 (df=9)
> 
> print( logLik( fitwlsi2 ) )
'log Lik.' -61.4 (df=8)
> 
> print( logLik( fitwlsi3e ) )
'log Lik.' -61.5 (df=8)
> 
> print( logLik( fitwlsi4 ) )
'log Lik.' -62.1 (df=7)
> 
> print( logLik( fitwlsi5e ) )
'log Lik.' -62.2 (df=7)
> 
> 
> ## ************** F tests ****************
> # testing first restriction
> print( linearHypothesis( fitwls1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwls1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.64   0.43
> linearHypothesis( fitwls1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwls1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.64   0.43
> 
> print( linearHypothesis( fitwlsi1e, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwlsi1e

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.66   0.42
> linearHypothesis( fitwlsi1e, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwlsi1e

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.66   0.42
> 
> # testing second restriction
> restrOnly2m <- matrix(0,1,7)
> restrOnly2q <- 0.5
> restrOnly2m[1,2] <- -1
> restrOnly2m[1,5] <-  1
> restrictOnly2 <- "- demand_price + supply_price = 0.5"
> # first restriction not imposed 
> print( linearHypothesis( fitwls1e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.03   0.86
> linearHypothesis( fitwls1e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.03   0.86
> 
> print( linearHypothesis( fitwlsi1, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.03   0.86
> linearHypothesis( fitwlsi1, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 0.03   0.86
> 
> # first restriction imposed
> print( linearHypothesis( fitwls2, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls2

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.78
> linearHypothesis( fitwls2, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls2

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.78
> 
> print( linearHypothesis( fitwls3, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls3

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.78
> linearHypothesis( fitwls3, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls3

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.78
> 
> print( linearHypothesis( fitwlsi2e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi2e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.77
> linearHypothesis( fitwlsi2e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi2e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.77
> 
> print( linearHypothesis( fitwlsi3e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi3e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.77
> linearHypothesis( fitwlsi3e, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi3e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 0.08   0.77
> 
> # testing both of the restrictions
> print( linearHypothesis( fitwls1e, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df    F Pr(>F)
1     35               
2     33  2 0.37   0.69
> linearHypothesis( fitwls1e, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df    F Pr(>F)
1     35               
2     33  2 0.37   0.69
> 
> print( linearHypothesis( fitwlsi1, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df    F Pr(>F)
1     35               
2     33  2 0.36    0.7
> linearHypothesis( fitwlsi1, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df    F Pr(>F)
1     35               
2     33  2 0.36    0.7
> 
> 
> ## ************** Wald tests ****************
> # testing first restriction
> print( linearHypothesis( fitwls1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwls1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> linearHypothesis( fitwls1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwls1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.64       0.42
> 
> print( linearHypothesis( fitwlsi1e, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwlsi1e

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1   0.8       0.37
> linearHypothesis( fitwlsi1e, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitwlsi1e

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1   0.8       0.37
> 
> # testing second restriction
> # first restriction not imposed
> print( linearHypothesis( fitwls1e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.04       0.84
> linearHypothesis( fitwls1e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.04       0.84
> 
> print( linearHypothesis( fitwlsi1, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.03       0.86
> linearHypothesis( fitwlsi1, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.03       0.86
> 
> # first restriction imposed
> print( linearHypothesis( fitwls2, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls2

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.08       0.78
> linearHypothesis( fitwls2, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls2

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.08       0.78
> 
> print( linearHypothesis( fitwls3, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls3

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.08       0.78
> linearHypothesis( fitwls3, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls3

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1  0.08       0.78
> 
> print( linearHypothesis( fitwlsi2e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi2e

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1   0.1       0.75
> linearHypothesis( fitwlsi2e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi2e

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1   0.1       0.75
> 
> print( linearHypothesis( fitwlsi3e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi3e

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1   0.1       0.75
> linearHypothesis( fitwlsi3e, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi3e

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1   0.1       0.75
> 
> # testing both of the restrictions
> print( linearHypothesis( fitwls1e, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2   0.9       0.64
> linearHypothesis( fitwls1e, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwls1e

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2   0.9       0.64
> 
> print( linearHypothesis( fitwlsi1, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  0.72        0.7
> linearHypothesis( fitwlsi1, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitwlsi1

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  0.72        0.7
> 
> 
> ## ****************** model frame **************************
> print( mf <- model.frame( fitwls1 ) )
   consump price income farmPrice trend
1     98.5 100.3   87.4      98.0     1
2     99.2 104.3   97.6      99.1     2
3    102.2 103.4   96.7      99.1     3
4    101.5 104.5   98.2      98.1     4
5    104.2  98.0   99.8     110.8     5
6    103.2  99.5  100.5     108.2     6
7    104.0 101.1  103.2     105.6     7
8     99.9 104.8  107.8     109.8     8
9    100.3  96.4   96.6     108.7     9
10   102.8  91.2   88.9     100.6    10
11    95.4  93.1   75.1      81.0    11
12    92.4  98.8   76.9      68.6    12
13    94.5 102.9   84.6      70.9    13
14    98.8  98.8   90.6      81.4    14
15   105.8  95.1  103.1     102.3    15
16   100.2  98.5  105.1     105.0    16
17   103.5  86.5   96.4     110.5    17
18    99.9 104.0  104.4      92.5    18
19   105.2 105.8  110.7      89.3    19
20   106.2 113.5  127.1      93.0    20
> print( mf1 <- model.frame( fitwls1$eq[[ 1 ]] ) )
   consump price income
1     98.5 100.3   87.4
2     99.2 104.3   97.6
3    102.2 103.4   96.7
4    101.5 104.5   98.2
5    104.2  98.0   99.8
6    103.2  99.5  100.5
7    104.0 101.1  103.2
8     99.9 104.8  107.8
9    100.3  96.4   96.6
10   102.8  91.2   88.9
11    95.4  93.1   75.1
12    92.4  98.8   76.9
13    94.5 102.9   84.6
14    98.8  98.8   90.6
15   105.8  95.1  103.1
16   100.2  98.5  105.1
17   103.5  86.5   96.4
18    99.9 104.0  104.4
19   105.2 105.8  110.7
20   106.2 113.5  127.1
> print( attributes( mf1 )$terms )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> print( mf2 <- model.frame( fitwls1$eq[[ 2 ]] ) )
   consump price farmPrice trend
1     98.5 100.3      98.0     1
2     99.2 104.3      99.1     2
3    102.2 103.4      99.1     3
4    101.5 104.5      98.1     4
5    104.2  98.0     110.8     5
6    103.2  99.5     108.2     6
7    104.0 101.1     105.6     7
8     99.9 104.8     109.8     8
9    100.3  96.4     108.7     9
10   102.8  91.2     100.6    10
11    95.4  93.1      81.0    11
12    92.4  98.8      68.6    12
13    94.5 102.9      70.9    13
14    98.8  98.8      81.4    14
15   105.8  95.1     102.3    15
16   100.2  98.5     105.0    16
17   103.5  86.5     110.5    17
18    99.9 104.0      92.5    18
19   105.2 105.8      89.3    19
20   106.2 113.5      93.0    20
> print( attributes( mf2 )$terms )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> print( all.equal( mf, model.frame( fitwls2e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwls2e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwls3 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwls3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwls4e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwls4e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwls5 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwls5$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi1e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwlsi1e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi2 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwlsi2$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi3e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwlsi3e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi4 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitwlsi4$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitwlsi5e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitwlsi5e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> 
> ## **************** model matrix ************************
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls1e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( mm <- model.matrix( fitwlsi1e ) )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1                   1        100.3          87.4                  0
demand_2                   1        104.3          97.6                  0
demand_3                   1        103.4          96.7                  0
demand_4                   1        104.5          98.2                  0
demand_5                   1         98.0          99.8                  0
demand_6                   1         99.5         100.5                  0
demand_7                   1        101.1         103.2                  0
demand_8                   1        104.8         107.8                  0
demand_9                   1         96.4          96.6                  0
demand_10                  1         91.2          88.9                  0
demand_11                  1         93.1          75.1                  0
demand_12                  1         98.8          76.9                  0
demand_13                  1        102.9          84.6                  0
demand_14                  1         98.8          90.6                  0
demand_15                  1         95.1         103.1                  0
demand_16                  1         98.5         105.1                  0
demand_17                  1         86.5          96.4                  0
demand_18                  1        104.0         104.4                  0
demand_19                  1        105.8         110.7                  0
demand_20                  1        113.5         127.1                  0
supply_1                   0          0.0           0.0                  1
supply_2                   0          0.0           0.0                  1
supply_3                   0          0.0           0.0                  1
supply_4                   0          0.0           0.0                  1
supply_5                   0          0.0           0.0                  1
supply_6                   0          0.0           0.0                  1
supply_7                   0          0.0           0.0                  1
supply_8                   0          0.0           0.0                  1
supply_9                   0          0.0           0.0                  1
supply_10                  0          0.0           0.0                  1
supply_11                  0          0.0           0.0                  1
supply_12                  0          0.0           0.0                  1
supply_13                  0          0.0           0.0                  1
supply_14                  0          0.0           0.0                  1
supply_15                  0          0.0           0.0                  1
supply_16                  0          0.0           0.0                  1
supply_17                  0          0.0           0.0                  1
supply_18                  0          0.0           0.0                  1
supply_19                  0          0.0           0.0                  1
supply_20                  0          0.0           0.0                  1
          supply_price supply_farmPrice supply_trend
demand_1           0.0              0.0            0
demand_2           0.0              0.0            0
demand_3           0.0              0.0            0
demand_4           0.0              0.0            0
demand_5           0.0              0.0            0
demand_6           0.0              0.0            0
demand_7           0.0              0.0            0
demand_8           0.0              0.0            0
demand_9           0.0              0.0            0
demand_10          0.0              0.0            0
demand_11          0.0              0.0            0
demand_12          0.0              0.0            0
demand_13          0.0              0.0            0
demand_14          0.0              0.0            0
demand_15          0.0              0.0            0
demand_16          0.0              0.0            0
demand_17          0.0              0.0            0
demand_18          0.0              0.0            0
demand_19          0.0              0.0            0
demand_20          0.0              0.0            0
supply_1         100.3             98.0            1
supply_2         104.3             99.1            2
supply_3         103.4             99.1            3
supply_4         104.5             98.1            4
supply_5          98.0            110.8            5
supply_6          99.5            108.2            6
supply_7         101.1            105.6            7
supply_8         104.8            109.8            8
supply_9          96.4            108.7            9
supply_10         91.2            100.6           10
supply_11         93.1             81.0           11
supply_12         98.8             68.6           12
supply_13        102.9             70.9           13
supply_14         98.8             81.4           14
supply_15         95.1            102.3           15
supply_16         98.5            105.0           16
supply_17         86.5            110.5           17
supply_18        104.0             92.5           18
supply_19        105.8             89.3           19
supply_20        113.5             93.0           20
> print( mm1 <- model.matrix( fitwlsi1e$eq[[ 1 ]] ) )
   (Intercept) price income
1            1 100.3   87.4
2            1 104.3   97.6
3            1 103.4   96.7
4            1 104.5   98.2
5            1  98.0   99.8
6            1  99.5  100.5
7            1 101.1  103.2
8            1 104.8  107.8
9            1  96.4   96.6
10           1  91.2   88.9
11           1  93.1   75.1
12           1  98.8   76.9
13           1 102.9   84.6
14           1  98.8   90.6
15           1  95.1  103.1
16           1  98.5  105.1
17           1  86.5   96.4
18           1 104.0  104.4
19           1 105.8  110.7
20           1 113.5  127.1
attr(,"assign")
[1] 0 1 2
> print( mm2 <- model.matrix( fitwlsi1e$eq[[ 2 ]] ) )
   (Intercept) price farmPrice trend
1            1 100.3      98.0     1
2            1 104.3      99.1     2
3            1 103.4      99.1     3
4            1 104.5      98.1     4
5            1  98.0     110.8     5
6            1  99.5     108.2     6
7            1 101.1     105.6     7
8            1 104.8     109.8     8
9            1  96.4     108.7     9
10           1  91.2     100.6    10
11           1  93.1      81.0    11
12           1  98.8      68.6    12
13           1 102.9      70.9    13
14           1  98.8      81.4    14
15           1  95.1     102.3    15
16           1  98.5     105.0    16
17           1  86.5     110.5    17
18           1 104.0      92.5    18
19           1 105.8      89.3    19
20           1 113.5      93.0    20
attr(,"assign")
[1] 0 1 2 3
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwlsi1 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwlsi1$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwlsi1$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls1$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls2$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwls2 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls2$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwls2e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls2e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls2e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls2e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwlsi3$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwlsi3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwlsi3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwlsi3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwlsi3e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwlsi3e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwlsi3e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwlsi3e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls4e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwls4e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls4e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls4e$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwls4Sym ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls4Sym$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls4Sym$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls4Sym$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitwls5$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitwls5 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls5$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls5$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitwls5e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitwls5e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitwls5e$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitwls5e$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> 
> ## **************** formulas ************************
> formula( fitwls1 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwls2e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls2e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwls3 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls3$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwls4e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls4e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwls5 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwls5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwlsi1e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi1e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwlsi2 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwlsi3e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi3e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitwlsi4 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi4$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitwlsi5e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitwlsi5e$eq[[ 1 ]] )
consump ~ price + income
> 
> 
> ## **************** model terms *******************
> terms( fitwls1 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls1$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwls2e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls2e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwls3 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls3$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwls4e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls4e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwls5 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwls5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwlsi1e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi1e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwlsi2 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwlsi3e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi3e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitwlsi4 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi4$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitwlsi5e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitwlsi5e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> 
> ## **************** estfun ************************
> library( "sandwich" )
> 
> estfun( fitwls1 )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1              0.2884        28.93         25.21             0.0000
demand_2             -0.1048       -10.92        -10.22             0.0000
demand_3              0.7045        72.87         68.13             0.0000
demand_4              0.4838        50.56         47.51             0.0000
demand_5              0.5222        51.18         52.12             0.0000
demand_6              0.3153        31.36         31.68             0.0000
demand_7              0.4108        41.51         42.39             0.0000
demand_8             -0.7872       -82.47        -84.86             0.0000
demand_9             -0.3665       -35.35        -35.41             0.0000
demand_10             0.5451        49.73         48.46             0.0000
demand_11            -0.0400        -3.72         -3.00             0.0000
demand_12            -0.5246       -51.83        -40.34             0.0000
demand_13            -0.3009       -30.96        -25.45             0.0000
demand_14            -0.0591        -5.83         -5.35             0.0000
demand_15             0.3991        37.96         41.14             0.0000
demand_16            -0.9934       -97.80       -104.40             0.0000
demand_17            -0.3417       -29.56        -32.94             0.0000
demand_18            -0.5375       -55.90        -56.11             0.0000
demand_19             0.4665        49.34         51.65             0.0000
demand_20            -0.0802        -9.10        -10.20             0.0000
supply_1              0.0000         0.00          0.00            -0.0768
supply_2              0.0000         0.00          0.00            -0.1548
supply_3              0.0000         0.00          0.00             0.3397
supply_4              0.0000         0.00          0.00             0.1961
supply_5              0.0000         0.00          0.00             0.2617
supply_6              0.0000         0.00          0.00             0.1176
supply_7              0.0000         0.00          0.00             0.2712
supply_8              0.0000         0.00          0.00            -0.7619
supply_9              0.0000         0.00          0.00            -0.4493
supply_10             0.0000         0.00          0.00             0.4269
supply_11             0.0000         0.00          0.00            -0.1034
supply_12             0.0000         0.00          0.00            -0.2934
supply_13             0.0000         0.00          0.00            -0.1839
supply_14             0.0000         0.00          0.00             0.1677
supply_15             0.0000         0.00          0.00             0.5461
supply_16             0.0000         0.00          0.00            -0.6683
supply_17             0.0000         0.00          0.00            -0.0458
supply_18             0.0000         0.00          0.00            -0.4234
supply_19             0.0000         0.00          0.00             0.5376
supply_20             0.0000         0.00          0.00             0.2963
          supply_price supply_farmPrice supply_trend
demand_1          0.00             0.00       0.0000
demand_2          0.00             0.00       0.0000
demand_3          0.00             0.00       0.0000
demand_4          0.00             0.00       0.0000
demand_5          0.00             0.00       0.0000
demand_6          0.00             0.00       0.0000
demand_7          0.00             0.00       0.0000
demand_8          0.00             0.00       0.0000
demand_9          0.00             0.00       0.0000
demand_10         0.00             0.00       0.0000
demand_11         0.00             0.00       0.0000
demand_12         0.00             0.00       0.0000
demand_13         0.00             0.00       0.0000
demand_14         0.00             0.00       0.0000
demand_15         0.00             0.00       0.0000
demand_16         0.00             0.00       0.0000
demand_17         0.00             0.00       0.0000
demand_18         0.00             0.00       0.0000
demand_19         0.00             0.00       0.0000
demand_20         0.00             0.00       0.0000
supply_1         -7.70            -7.53      -0.0768
supply_2        -16.14           -15.34      -0.3096
supply_3         35.14            33.67       1.0192
supply_4         20.49            19.24       0.7843
supply_5         25.65            29.00       1.3085
supply_6         11.70            12.73       0.7057
supply_7         27.41            28.64       1.8987
supply_8        -79.82           -83.66      -6.0955
supply_9        -43.33           -48.84      -4.0437
supply_10        38.95            42.95       4.2691
supply_11        -9.63            -8.38      -1.1377
supply_12       -28.99           -20.13      -3.5213
supply_13       -18.93           -13.04      -2.3913
supply_14        16.56            13.65       2.3480
supply_15        51.95            55.87       8.1920
supply_16       -65.79           -70.17     -10.6922
supply_17        -3.96            -5.06      -0.7779
supply_18       -44.04           -39.16      -7.6205
supply_19        56.86            48.01      10.2144
supply_20        33.63            27.56       5.9267
> round( colSums( estfun( fitwls1 ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitwlsi1e )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1              0.3393        34.04         29.66             0.0000
demand_2             -0.1232       -12.85        -12.03             0.0000
demand_3              0.8289        85.73         80.15             0.0000
demand_4              0.5692        59.49         55.90             0.0000
demand_5              0.6144        60.21         61.32             0.0000
demand_6              0.3709        36.89         37.28             0.0000
demand_7              0.4832        48.84         49.87             0.0000
demand_8             -0.9261       -97.03        -99.84             0.0000
demand_9             -0.4312       -41.59        -41.66             0.0000
demand_10             0.6413        58.51         57.01             0.0000
demand_11            -0.0470        -4.38         -3.53             0.0000
demand_12            -0.6172       -60.98        -47.46             0.0000
demand_13            -0.3540       -36.43        -29.95             0.0000
demand_14            -0.0695        -6.86         -6.29             0.0000
demand_15             0.4695        44.66         48.40             0.0000
demand_16            -1.1687      -115.06       -122.83             0.0000
demand_17            -0.4020       -34.78        -38.76             0.0000
demand_18            -0.6323       -65.77        -66.01             0.0000
demand_19             0.5489        58.05         60.76             0.0000
demand_20            -0.0944       -10.71        -12.00             0.0000
supply_1              0.0000         0.00          0.00            -0.0960
supply_2              0.0000         0.00          0.00            -0.1935
supply_3              0.0000         0.00          0.00             0.4247
supply_4              0.0000         0.00          0.00             0.2451
supply_5              0.0000         0.00          0.00             0.3271
supply_6              0.0000         0.00          0.00             0.1470
supply_7              0.0000         0.00          0.00             0.3390
supply_8              0.0000         0.00          0.00            -0.9524
supply_9              0.0000         0.00          0.00            -0.5616
supply_10             0.0000         0.00          0.00             0.5336
supply_11             0.0000         0.00          0.00            -0.1293
supply_12             0.0000         0.00          0.00            -0.3668
supply_13             0.0000         0.00          0.00            -0.2299
supply_14             0.0000         0.00          0.00             0.2096
supply_15             0.0000         0.00          0.00             0.6827
supply_16             0.0000         0.00          0.00            -0.8353
supply_17             0.0000         0.00          0.00            -0.0572
supply_18             0.0000         0.00          0.00            -0.5292
supply_19             0.0000         0.00          0.00             0.6720
supply_20             0.0000         0.00          0.00             0.3704
          supply_price supply_farmPrice supply_trend
demand_1          0.00             0.00        0.000
demand_2          0.00             0.00        0.000
demand_3          0.00             0.00        0.000
demand_4          0.00             0.00        0.000
demand_5          0.00             0.00        0.000
demand_6          0.00             0.00        0.000
demand_7          0.00             0.00        0.000
demand_8          0.00             0.00        0.000
demand_9          0.00             0.00        0.000
demand_10         0.00             0.00        0.000
demand_11         0.00             0.00        0.000
demand_12         0.00             0.00        0.000
demand_13         0.00             0.00        0.000
demand_14         0.00             0.00        0.000
demand_15         0.00             0.00        0.000
demand_16         0.00             0.00        0.000
demand_17         0.00             0.00        0.000
demand_18         0.00             0.00        0.000
demand_19         0.00             0.00        0.000
demand_20         0.00             0.00        0.000
supply_1         -9.63            -9.41       -0.096
supply_2        -20.18           -19.18       -0.387
supply_3         43.92            42.08        1.274
supply_4         25.61            24.04        0.980
supply_5         32.06            36.25        1.636
supply_6         14.62            15.91        0.882
supply_7         34.27            35.80        2.373
supply_8        -99.78          -104.58       -7.619
supply_9        -54.17           -61.05       -5.055
supply_10        48.68            53.68        5.336
supply_11       -12.03           -10.47       -1.422
supply_12       -36.24           -25.16       -4.402
supply_13       -23.66           -16.30       -2.989
supply_14        20.70            17.06        2.935
supply_15        64.93            69.84       10.240
supply_16       -82.24           -87.71      -13.365
supply_17        -4.95            -6.32       -0.972
supply_18       -55.05           -48.95       -9.526
supply_19        71.08            60.01       12.768
supply_20        42.04            34.45        7.408
> round( colSums( estfun( fitwlsi1e ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> 
> ## **************** bread ************************
> bread( fitwls1 )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]            2261.63     -23.7921        1.2865                0.0
[2,]             -23.79       0.3289       -0.0933                0.0
[3,]               1.29      -0.0933        0.0825                0.0
[4,]               0.00       0.0000        0.0000             5255.9
[5,]               0.00       0.0000        0.0000              -39.5
[6,]               0.00       0.0000        0.0000              -12.2
[7,]               0.00       0.0000        0.0000              -11.2
     supply_price supply_farmPrice supply_trend
[1,]       0.0000           0.0000       0.0000
[2,]       0.0000           0.0000       0.0000
[3,]       0.0000           0.0000       0.0000
[4,]     -39.5000         -12.1744     -11.1673
[5,]       0.3601           0.0338       0.0209
[6,]       0.0338           0.0853       0.0526
[7,]       0.0209           0.0526       0.3804
> 
> bread( fitwlsi1e )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]            1922.39     -20.2232        1.0935               0.00
[2,]             -20.22       0.2796       -0.0793               0.00
[3,]               1.09      -0.0793        0.0701               0.00
[4,]               0.00       0.0000        0.0000            4204.75
[5,]               0.00       0.0000        0.0000             -31.60
[6,]               0.00       0.0000        0.0000              -9.74
[7,]               0.00       0.0000        0.0000              -8.93
     supply_price supply_farmPrice supply_trend
[1,]       0.0000           0.0000       0.0000
[2,]       0.0000           0.0000       0.0000
[3,]       0.0000           0.0000       0.0000
[4,]     -31.6000          -9.7395      -8.9339
[5,]       0.2881           0.0270       0.0167
[6,]       0.0270           0.0683       0.0421
[7,]       0.0167           0.0421       0.3043
> 
> proc.time()
   user  system elapsed 
  4.176   0.164   4.334 
