
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( systemfit )
Loading required package: Matrix
Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

> options( digits = 3 )
> 
> data( "Kmenta" )
> useMatrix <- FALSE
> 
> demand <- consump ~ price + income
> supply <- consump ~ price + farmPrice + trend
> system <- list( demand = demand, supply = supply )
> restrm <- matrix(0,1,7)  # restriction matrix "R"
> restrm[1,3] <-  1
> restrm[1,7] <- -1
> restrict <- "demand_income - supply_trend = 0"
> restr2m <- matrix(0,2,7)  # restriction matrix "R" 2
> restr2m[1,3] <-  1
> restr2m[1,7] <- -1
> restr2m[2,2] <- -1
> restr2m[2,5] <-  1
> restr2q <- c( 0, 0.5 )  # restriction vector "q" 2
> restrict2 <- c( "demand_income - supply_trend = 0",
+    "- demand_price + supply_price = 0.5" )
> restrict2i <- c( "demand_income - supply_trend = 0",
+    "- demand_price + supply_income = 0.5" )
> tc <- matrix(0,7,6)
> tc[1,1] <- 1
> tc[2,2] <- 1
> tc[3,3] <- 1
> tc[4,4] <- 1
> tc[5,5] <- 1
> tc[6,6] <- 1
> tc[7,3] <- 1
> restr3m <- matrix(0,1,6)  # restriction matrix "R" 2
> restr3m[1,2] <- -1
> restr3m[1,5] <-  1
> restr3q <- c( 0.5 )  # restriction vector "q" 2
> restrict3 <- "- C2 + C5 = 0.5"
> 
> # the standard equations do not converge and lead to a singular weighting matrix
> # both in R and in EViews, since both equations have the same endogenous variable
> supply2 <- price ~ income + farmPrice + trend
> system2 <- list( demand = demand, supply = supply2 )
> 
> 
> ## *************** SUR estimation ************************
> fitsur1 <- systemfit( system, "SUR", data = Kmenta, useMatrix = useMatrix )
> print( summary( fitsur1 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 170   0.879  0.683      0.789

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  65.7 3.86 1.97 0.755  0.726
supply 20 16 104.1 6.50 2.55 0.612  0.539

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The covariance matrix of the residuals
       demand supply
demand   3.86   4.92
supply   4.92   6.50

The correlations of the residuals
       demand supply
demand  1.000  0.982
supply  0.982  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.3329     7.5145   13.22  2.3e-10 ***
price        -0.2755     0.0885   -3.11   0.0063 ** 
income        0.2986     0.0419    7.12  1.7e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.966 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.683 MSE: 3.864 Root MSE: 1.966 
Multiple R-Squared: 0.755 Adjusted R-Squared: 0.726 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  61.9662    11.0808    5.59  4.0e-05 ***
price         0.1469     0.0944    1.56  0.13941    
farmPrice     0.2140     0.0399    5.37  6.3e-05 ***
trend         0.3393     0.0679    5.00  0.00013 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.55 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 104.058 MSE: 6.504 Root MSE: 2.55 
Multiple R-Squared: 0.612 Adjusted R-Squared: 0.539 

> nobs( fitsur1 )
[1] 40
> 
> ## ********************* SUR (EViews-like) *****************
> fitsur1e <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    useMatrix = useMatrix )
> print( summary( fitsur1e, useDfSys = TRUE ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 170   0.598  0.683      0.748

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.2 3.89 1.97 0.753  0.724
supply 20 16 103.5 6.47 2.54 0.614  0.541

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.17   3.41
supply   3.41   4.63

The covariance matrix of the residuals
       demand supply
demand   3.31   4.07
supply   4.07   5.18

The correlations of the residuals
       demand supply
demand  1.000  0.982
supply  0.982  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.2757     6.9280   14.33  8.9e-16 ***
price        -0.2713     0.0816   -3.33   0.0022 ** 
income        0.2949     0.0387    7.63  8.9e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.973 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.186 MSE: 3.893 Root MSE: 1.973 
Multiple R-Squared: 0.753 Adjusted R-Squared: 0.724 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  62.2942     9.9110    6.29  4.2e-07 ***
price         0.1461     0.0845    1.73    0.093 .  
farmPrice     0.2121     0.0357    5.95  1.1e-06 ***
trend         0.3322     0.0607    5.47  4.6e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.544 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 103.55 MSE: 6.472 Root MSE: 2.544 
Multiple R-Squared: 0.614 Adjusted R-Squared: 0.541 

> nobs( fitsur1e )
[1] 40
> 
> ## ********************* SUR (methodResidCov="Theil") *****************
> fitsur1r2 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "Theil",
+    useMatrix = useMatrix )
> print( summary( fitsur1r2 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 172  -0.896  0.679       1.01

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.8 3.93 1.98 0.751  0.722
supply 20 16 105.3 6.58 2.57 0.607  0.534

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   4.28
supply   4.28   5.78

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   3.93   5.17
supply   5.17   6.58

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.2120     7.5127   13.21  2.3e-10 ***
price        -0.2667     0.0877   -3.04   0.0074 ** 
income        0.2908     0.0406    7.16  1.6e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.982 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.802 MSE: 3.93 Root MSE: 1.982 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.722 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  63.0768    10.9735    5.75  3.0e-05 ***
price         0.1439     0.0943    1.52     0.15    
farmPrice     0.2064     0.0384    5.37  6.2e-05 ***
trend         0.3325     0.0640    5.19  8.9e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.566 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 105.322 MSE: 6.583 Root MSE: 2.566 
Multiple R-Squared: 0.607 Adjusted R-Squared: 0.534 

> 
> ## *************** SUR (methodResidCov="Theil", useDfSys = TRUE ) ***************
> fitsur1e2 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "Theil",
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitsur1e2, useDfSys = TRUE ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 172  -0.896  0.679       1.01

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.8 3.93 1.98 0.751  0.722
supply 20 16 105.3 6.58 2.57 0.607  0.534

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   4.28
supply   4.28   5.78

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   3.93   5.17
supply   5.17   6.58

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.2120     7.5127   13.21  1.0e-14 ***
price        -0.2667     0.0877   -3.04   0.0046 ** 
income        0.2908     0.0406    7.16  3.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.982 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.802 MSE: 3.93 Root MSE: 1.982 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.722 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  63.0768    10.9735    5.75  2.0e-06 ***
price         0.1439     0.0943    1.52     0.14    
farmPrice     0.2064     0.0384    5.37  6.1e-06 ***
trend         0.3325     0.0640    5.19  1.0e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.566 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 105.322 MSE: 6.583 Root MSE: 2.566 
Multiple R-Squared: 0.607 Adjusted R-Squared: 0.534 

> 
> ## ********************* SUR (methodResidCov="max") *****************
> fitsur1r3 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "max",
+    useMatrix = useMatrix )
> print( summary( fitsur1r3 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 172  -0.735   0.68      0.957

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.7 3.92 1.98 0.751  0.722
supply 20 16 105.2 6.57 2.56 0.608  0.534

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   4.26
supply   4.26   5.78

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   3.92   5.15
supply   5.15   6.57

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.2250     7.5129   13.21  2.3e-10 ***
price        -0.2677     0.0878   -3.05   0.0073 ** 
income        0.2916     0.0408    7.15  1.6e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.98 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.671 MSE: 3.922 Root MSE: 1.98 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.722 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  62.9575    10.9850    5.73  3.1e-05 ***
price         0.1442     0.0944    1.53     0.15    
farmPrice     0.2072     0.0386    5.37  6.2e-05 ***
trend         0.3333     0.0644    5.18  9.2e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.564 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 105.187 MSE: 6.574 Root MSE: 2.564 
Multiple R-Squared: 0.608 Adjusted R-Squared: 0.534 

> 
> ## *************** WSUR estimation ************************
> fitsur1w <- systemfit( system, "SUR", data = Kmenta, residCovWeighted = TRUE,
+    useMatrix = useMatrix )
> summary( fitsur1w )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 170   0.879  0.683      0.789

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  65.7 3.86 1.97 0.755  0.726
supply 20 16 104.1 6.50 2.55 0.612  0.539

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   4.14
supply   4.14   5.78

The covariance matrix of the residuals
       demand supply
demand   3.86   4.92
supply   4.92   6.50

The correlations of the residuals
       demand supply
demand  1.000  0.982
supply  0.982  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.3329     7.5145   13.22  2.3e-10 ***
price        -0.2755     0.0885   -3.11   0.0063 ** 
income        0.2986     0.0419    7.12  1.7e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.966 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.683 MSE: 3.864 Root MSE: 1.966 
Multiple R-Squared: 0.755 Adjusted R-Squared: 0.726 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  61.9662    11.0808    5.59  4.0e-05 ***
price         0.1469     0.0944    1.56  0.13941    
farmPrice     0.2140     0.0399    5.37  6.3e-05 ***
trend         0.3393     0.0679    5.00  0.00013 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.55 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 104.058 MSE: 6.504 Root MSE: 2.55 
Multiple R-Squared: 0.612 Adjusted R-Squared: 0.539 

> nobs( fitsur1w )
[1] 40
> 
> ## *************** WSUR (methodResidCov="Theil", useDfSys = TRUE ) ***************
> fitsur1we2 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "Theil",
+    residCovWeighted = TRUE, useMatrix = useMatrix )
> summary( fitsur1we2, useDfSys = TRUE )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 172  -0.896  0.679       1.01

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.8 3.93 1.98 0.751  0.722
supply 20 16 105.3 6.58 2.57 0.607  0.534

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   4.28
supply   4.28   5.78

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   3.93   5.17
supply   5.17   6.58

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  99.2120     7.5127   13.21  1.0e-14 ***
price        -0.2667     0.0877   -3.04   0.0046 ** 
income        0.2908     0.0406    7.16  3.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.982 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.802 MSE: 3.93 Root MSE: 1.982 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.722 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  63.0768    10.9735    5.75  2.0e-06 ***
price         0.1439     0.0943    1.52     0.14    
farmPrice     0.2064     0.0384    5.37  6.1e-06 ***
trend         0.3325     0.0640    5.19  1.0e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.566 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 105.322 MSE: 6.583 Root MSE: 2.566 
Multiple R-Squared: 0.607 Adjusted R-Squared: 0.534 

> 
> 
> ## *************** SUR with cross-equation restriction **************
> fitsur2 <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restrm,
+    useMatrix = useMatrix )
> print( summary( fitsur2 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 179   0.933  0.665      0.753

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  71.6 4.21 2.05 0.733  0.702
supply 20 16 107.8 6.74 2.60 0.598  0.523

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The covariance matrix of the residuals
       demand supply
demand   4.21   5.24
supply   5.24   6.74

The correlations of the residuals
       demand supply
demand  1.000  0.983
supply  0.983  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.8408     7.5581   13.08  8.0e-15 ***
price        -0.2398     0.0860   -2.79   0.0086 ** 
income        0.2670     0.0368    7.25  2.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.052 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 71.597 MSE: 4.212 Root MSE: 2.052 
Multiple R-Squared: 0.733 Adjusted R-Squared: 0.702 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  67.4283    10.6647    6.32  3.3e-07 ***
price         0.1332     0.0953    1.40     0.17    
farmPrice     0.1795     0.0337    5.33  6.3e-06 ***
trend         0.2670     0.0368    7.25  2.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.596 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 107.806 MSE: 6.738 Root MSE: 2.596 
Multiple R-Squared: 0.598 Adjusted R-Squared: 0.523 

> nobs( fitsur2 )
[1] 40
> # the same with symbolically specified restrictions
> fitsur2Sym <- systemfit( system, "SUR", data = Kmenta,
+    restrict.matrix = restrict, useMatrix = useMatrix )
> all.equal( fitsur2, fitsur2Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> nobs( fitsur2Sym )
[1] 40
> 
> ## *************** SUR with cross-equation restriction (EViews-like) **
> fitsur2e <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restrm,
+    methodResidCov = "noDfCor", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitsur2e ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 180    0.62  0.663      0.707

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  72.6 4.27 2.07 0.729  0.697
supply 20 16 107.9 6.75 2.60 0.597  0.522

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.21   3.68
supply   3.68   4.75

The covariance matrix of the residuals
       demand supply
demand   3.63   4.35
supply   4.35   5.40

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.7799     6.9687   14.17  8.9e-16 ***
price        -0.2354     0.0795   -2.96   0.0056 ** 
income        0.2631     0.0344    7.66  6.7e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.066 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 72.577 MSE: 4.269 Root MSE: 2.066 
Multiple R-Squared: 0.729 Adjusted R-Squared: 0.697 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  67.6039     9.5712    7.06  3.7e-08 ***
price         0.1328     0.0853    1.56     0.13    
farmPrice     0.1785     0.0305    5.85  1.3e-06 ***
trend         0.2631     0.0344    7.66  6.7e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.597 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 107.917 MSE: 6.745 Root MSE: 2.597 
Multiple R-Squared: 0.597 Adjusted R-Squared: 0.522 

> 
> ## *************** WSUR with cross-equation restriction (EViews-like) **
> fitsur2we <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restrm,
+    methodResidCov = "noDfCor", residCovWeighted = TRUE,
+    x = TRUE, useMatrix = useMatrix )
> summary( fitsur2we )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 182   0.609  0.661      0.711

        N DF SSR  MSE RMSE    R2 Adj R2
demand 20 17  73 4.29 2.07 0.728  0.696
supply 20 16 109 6.79 2.61 0.595  0.519

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.19   3.69
supply   3.69   4.78

The covariance matrix of the residuals
       demand supply
demand   3.65   4.38
supply   4.38   5.43

The correlations of the residuals
       demand supply
demand  1.000  0.985
supply  0.985  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.7542     6.9468   14.22  6.7e-16 ***
price        -0.2335     0.0790   -2.96   0.0056 ** 
income        0.2614     0.0338    7.74  5.3e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.072 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 73.009 MSE: 4.295 Root MSE: 2.072 
Multiple R-Squared: 0.728 Adjusted R-Squared: 0.696 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  67.8882     9.5640    7.10  3.4e-08 ***
price         0.1320     0.0855    1.55     0.13    
farmPrice     0.1765     0.0301    5.86  1.3e-06 ***
trend         0.2614     0.0338    7.74  5.3e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.606 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 108.634 MSE: 6.79 Root MSE: 2.606 
Multiple R-Squared: 0.595 Adjusted R-Squared: 0.519 

> 
> 
> ## *************** SUR with restriction via restrict.regMat *******************
> fitsur3 <- systemfit( system, "SUR", data = Kmenta, restrict.regMat = tc,
+    useMatrix = useMatrix )
> print( summary( fitsur3 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 179   0.933  0.665      0.753

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  71.6 4.21 2.05 0.733  0.702
supply 20 16 107.8 6.74 2.60 0.598  0.523

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The covariance matrix of the residuals
       demand supply
demand   4.21   5.24
supply   5.24   6.74

The correlations of the residuals
       demand supply
demand  1.000  0.983
supply  0.983  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.8408     7.5581   13.08  8.0e-15 ***
price        -0.2398     0.0860   -2.79   0.0086 ** 
income        0.2670     0.0368    7.25  2.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.052 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 71.597 MSE: 4.212 Root MSE: 2.052 
Multiple R-Squared: 0.733 Adjusted R-Squared: 0.702 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  67.4283    10.6647    6.32  3.3e-07 ***
price         0.1332     0.0953    1.40     0.17    
farmPrice     0.1795     0.0337    5.33  6.3e-06 ***
trend         0.2670     0.0368    7.25  2.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.596 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 107.806 MSE: 6.738 Root MSE: 2.596 
Multiple R-Squared: 0.598 Adjusted R-Squared: 0.523 

> nobs( fitsur3 )
[1] 40
> 
> ## *************** SUR with restriction via restrict.regMat (EViews-like) **************
> fitsur3e <- systemfit( system, "SUR", data = Kmenta, restrict.regMat = tc,
+    methodResidCov = "noDfCor", x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitsur3e ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 180    0.62  0.663      0.707

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  72.6 4.27 2.07 0.729  0.697
supply 20 16 107.9 6.75 2.60 0.597  0.522

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.21   3.68
supply   3.68   4.75

The covariance matrix of the residuals
       demand supply
demand   3.63   4.35
supply   4.35   5.40

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.7799     6.9687   14.17  8.9e-16 ***
price        -0.2354     0.0795   -2.96   0.0056 ** 
income        0.2631     0.0344    7.66  6.7e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.066 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 72.577 MSE: 4.269 Root MSE: 2.066 
Multiple R-Squared: 0.729 Adjusted R-Squared: 0.697 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  67.6039     9.5712    7.06  3.7e-08 ***
price         0.1328     0.0853    1.56     0.13    
farmPrice     0.1785     0.0305    5.85  1.3e-06 ***
trend         0.2631     0.0344    7.66  6.7e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.597 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 107.917 MSE: 6.745 Root MSE: 2.597 
Multiple R-Squared: 0.597 Adjusted R-Squared: 0.522 

> 
> ## *************** WSUR with restriction via restrict.regMat *******************
> fitsur3w <- systemfit( system, "SUR", data = Kmenta, restrict.regMat = tc,
+    residCovWeighted = TRUE, x = TRUE, useMatrix = useMatrix )
> summary( fitsur3w )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 181   0.919  0.663      0.757

        N DF SSR  MSE RMSE    R2 Adj R2
demand 20 17  72 4.24 2.06 0.731  0.700
supply 20 16 109 6.79 2.60 0.595  0.519

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.75   4.48
supply   4.48   5.98

The covariance matrix of the residuals
       demand supply
demand   4.24   5.28
supply   5.28   6.79

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.8139     7.5317   13.12  7.3e-15 ***
price        -0.2378     0.0854   -2.79   0.0087 ** 
income        0.2653     0.0361    7.34  1.7e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.058 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 72.023 MSE: 4.237 Root MSE: 2.058 
Multiple R-Squared: 0.731 Adjusted R-Squared: 0.7 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  67.7366    10.6556    6.36  3.0e-07 ***
price         0.1324     0.0955    1.39     0.17    
farmPrice     0.1774     0.0332    5.35  6.1e-06 ***
trend         0.2653     0.0361    7.34  1.7e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.605 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 108.579 MSE: 6.786 Root MSE: 2.605 
Multiple R-Squared: 0.595 Adjusted R-Squared: 0.519 

> 
> 
> ## *************** SUR with 2 restrictions ***************************
> fitsur4 <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, useMatrix = useMatrix )
> print( summary( fitsur4 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 165    1.76  0.691       0.69

        N DF SSR  MSE RMSE    R2 Adj R2
demand 20 17  64 3.76 1.94 0.761  0.733
supply 20 16 101 6.34 2.52 0.622  0.551

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.76   4.46
supply   4.46   5.99

The covariance matrix of the residuals
       demand supply
demand   3.76   4.70
supply   4.70   6.34

The correlations of the residuals
       demand supply
demand  1.000  0.962
supply  0.962  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  96.8275     7.4665   12.97  6.2e-15 ***
price        -0.2798     0.0840   -3.33    0.002 ** 
income        0.3286     0.0206   15.93  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.987 MSE: 3.764 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  52.9386     7.6655    6.91  5.1e-08 ***
price         0.2202     0.0840    2.62    0.013 *  
farmPrice     0.2327     0.0212   10.97  7.2e-13 ***
trend         0.3286     0.0206   15.93  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.518 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.473 MSE: 6.342 Root MSE: 2.518 
Multiple R-Squared: 0.622 Adjusted R-Squared: 0.551 

> nobs( fitsur4 )
[1] 40
> # the same with symbolically specified restrictions
> fitsur4Sym <- systemfit( system, "SUR", data = Kmenta,
+    restrict.matrix = restrict2, useMatrix = useMatrix )
> all.equal( fitsur4, fitsur4Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## *************** SUR with 2 restrictions (EViews-like) **************
> fitsur4e <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q, useMatrix = useMatrix )
> print( summary( fitsur4e ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 165     1.2  0.693      0.653

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  63.8 3.75 1.94 0.762  0.734
supply 20 16 100.8 6.30 2.51 0.624  0.553

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.20   3.67
supply   3.67   4.79

The covariance matrix of the residuals
       demand supply
demand   3.19   3.86
supply   3.86   5.04

The correlations of the residuals
       demand supply
demand  1.000  0.962
supply  0.962  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  97.2678     6.9200   14.06  4.4e-16 ***
price        -0.2851     0.0767   -3.72    7e-04 ***
income        0.3296     0.0184   17.86  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.937 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.811 MSE: 3.754 Root MSE: 1.937 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.3040     7.1045     7.5  8.7e-09 ***
price         0.2149     0.0767     2.8   0.0082 ** 
farmPrice     0.2343     0.0187    12.6  1.6e-14 ***
trend         0.3296     0.0184    17.9  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.51 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.835 MSE: 6.302 Root MSE: 2.51 
Multiple R-Squared: 0.624 Adjusted R-Squared: 0.553 

> 
> ## *************** SUR with 2 restrictions (methodResidCov = "Theil") **************
> fitsur4r2 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "Theil",
+    restrict.matrix = restr2m, restrict.rhs = restr2q, useMatrix = useMatrix )
> print( summary( fitsur4r2 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 175   0.034  0.673      0.708

        N DF SSR  MSE RMSE    R2 Adj R2
demand 20 17  67 3.94 1.99 0.750  0.721
supply 20 16 108 6.76 2.60 0.596  0.521

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.76   4.61
supply   4.61   5.99

The covariance matrix of the residuals
       demand supply
demand   3.94   5.16
supply   5.16   6.76

The correlations of the residuals
       demand supply
demand  1.000  0.967
supply  0.967  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  92.5266     7.2896   12.69  1.2e-14 ***
price        -0.2304     0.0827   -2.79   0.0086 ** 
income        0.3221     0.0166   19.37  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.986 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.048 MSE: 3.944 Root MSE: 1.986 
Multiple R-Squared: 0.75 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  48.7011     7.4034    6.58  1.3e-07 ***
price         0.2696     0.0827    3.26   0.0025 ** 
farmPrice     0.2261     0.0166   13.62  1.6e-15 ***
trend         0.3221     0.0166   19.37  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.601 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 108.217 MSE: 6.764 Root MSE: 2.601 
Multiple R-Squared: 0.596 Adjusted R-Squared: 0.521 

> 
> ## *************** SUR with 2 restrictions (methodResidCov = "max") **************
> fitsur4r3 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "max",
+    restrict.matrix = restr2m, restrict.rhs = restr2q,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitsur4r3 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 173   0.217  0.677      0.702

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.4 3.91 1.98 0.752  0.723
supply 20 16 106.9 6.68 2.58 0.601  0.526

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.76   4.59
supply   4.59   5.99

The covariance matrix of the residuals
       demand supply
demand   3.91   5.09
supply   5.09   6.68

The correlations of the residuals
       demand supply
demand  1.000  0.966
supply  0.966  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.1978     7.3168   12.74  1.1e-14 ***
price        -0.2381     0.0829   -2.87   0.0069 ** 
income        0.3231     0.0170   18.96  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.976 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.405 MSE: 3.906 Root MSE: 1.976 
Multiple R-Squared: 0.752 Adjusted R-Squared: 0.723 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  49.3676     7.4381    6.64  1.1e-07 ***
price         0.2619     0.0829    3.16   0.0033 ** 
farmPrice     0.2271     0.0171   13.29  3.1e-15 ***
trend         0.3231     0.0170   18.96  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.585 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 106.924 MSE: 6.683 Root MSE: 2.585 
Multiple R-Squared: 0.601 Adjusted R-Squared: 0.526 

> 
> ## *************** WSUR with 2 restrictions (EViews-like) **************
> fitsur4we <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q, residCovWeighted = TRUE,
+    useMatrix = useMatrix )
> summary( fitsur4we )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 165     1.2  0.692      0.654

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  63.9 3.76 1.94 0.762  0.733
supply 20 16 101.2 6.33 2.52 0.623  0.552

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.18   3.69
supply   3.69   4.81

The covariance matrix of the residuals
       demand supply
demand   3.20   3.87
supply   3.87   5.06

The correlations of the residuals
       demand supply
demand  1.000  0.962
supply  0.962  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  96.9414     6.8894   14.07  4.4e-16 ***
price        -0.2814     0.0766   -3.67    8e-04 ***
income        0.3291     0.0181   18.18  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.939 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.936 MSE: 3.761 Root MSE: 1.939 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.733 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  52.9963     7.0652    7.50  8.7e-09 ***
price         0.2186     0.0766    2.85   0.0072 ** 
farmPrice     0.2337     0.0183   12.76  1.0e-14 ***
trend         0.3291     0.0181   18.18  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.515 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.201 MSE: 6.325 Root MSE: 2.515 
Multiple R-Squared: 0.623 Adjusted R-Squared: 0.552 

> 
> 
> ## *************** SUR with 2 restrictions via R and restrict.regMat ****************
> fitsur5 <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> print( summary( fitsur5 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 165    1.76  0.691       0.69

        N DF SSR  MSE RMSE    R2 Adj R2
demand 20 17  64 3.76 1.94 0.761  0.733
supply 20 16 101 6.34 2.52 0.622  0.551

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.76   4.46
supply   4.46   5.99

The covariance matrix of the residuals
       demand supply
demand   3.76   4.70
supply   4.70   6.34

The correlations of the residuals
       demand supply
demand  1.000  0.962
supply  0.962  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  96.8275     7.4665   12.97  6.2e-15 ***
price        -0.2798     0.0840   -3.33    0.002 ** 
income        0.3286     0.0206   15.93  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.94 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.987 MSE: 3.764 Root MSE: 1.94 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  52.9386     7.6655    6.91  5.1e-08 ***
price         0.2202     0.0840    2.62    0.013 *  
farmPrice     0.2327     0.0212   10.97  7.2e-13 ***
trend         0.3286     0.0206   15.93  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.518 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.473 MSE: 6.342 Root MSE: 2.518 
Multiple R-Squared: 0.622 Adjusted R-Squared: 0.551 

> nobs( fitsur5 )
[1] 40
> # the same with symbolically specified restrictions
> fitsur5Sym <- systemfit( system, "SUR", data = Kmenta,
+    restrict.matrix = restrict3, restrict.regMat = tc,
+    x = TRUE, useMatrix = useMatrix )
> all.equal( fitsur5, fitsur5Sym )
[1] "Component \"call\": target, current do not match when deparsed"
> 
> ## *************** SUR with 2 restrictions via R and restrict.regMat (EViews-like) **************
> fitsur5e <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    useMatrix = useMatrix )
> print( summary( fitsur5e ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 165     1.2  0.693      0.653

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  63.8 3.75 1.94 0.762  0.734
supply 20 16 100.8 6.30 2.51 0.624  0.553

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.20   3.67
supply   3.67   4.79

The covariance matrix of the residuals
       demand supply
demand   3.19   3.86
supply   3.86   5.04

The correlations of the residuals
       demand supply
demand  1.000  0.962
supply  0.962  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  97.2678     6.9200   14.06  4.4e-16 ***
price        -0.2851     0.0767   -3.72    7e-04 ***
income        0.3296     0.0184   17.86  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.937 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 63.811 MSE: 3.754 Root MSE: 1.937 
Multiple R-Squared: 0.762 Adjusted R-Squared: 0.734 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  53.3040     7.1045     7.5  8.7e-09 ***
price         0.2149     0.0767     2.8   0.0082 ** 
farmPrice     0.2343     0.0187    12.6  1.6e-14 ***
trend         0.3296     0.0184    17.9  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.51 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 100.835 MSE: 6.302 Root MSE: 2.51 
Multiple R-Squared: 0.624 Adjusted R-Squared: 0.553 

> 
> ## ************ WSUR with 2 restrictions via R and restrict.regMat ************
> fitsur5w <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, residCovWeighted = TRUE,
+    useMatrix = useMatrix )
> summary( fitsur5w )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 166    1.75   0.69      0.691

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  64.2 3.77 1.94 0.761  0.733
supply 20 16 102.0 6.37 2.52 0.620  0.548

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.74   4.47
supply   4.47   6.02

The covariance matrix of the residuals
       demand supply
demand   3.77   4.72
supply   4.72   6.37

The correlations of the residuals
       demand supply
demand  1.000  0.963
supply  0.963  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  96.4421     7.4234   12.99    6e-15 ***
price        -0.2753     0.0838   -3.29   0.0023 ** 
income        0.3280     0.0202   16.21   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.16 MSE: 3.774 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  52.5761     7.6099    6.91  5.0e-08 ***
price         0.2247     0.0838    2.68    0.011 *  
farmPrice     0.2318     0.0208   11.14  4.7e-13 ***
trend         0.3280     0.0202   16.21  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.524 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.967 MSE: 6.373 Root MSE: 2.524 
Multiple R-Squared: 0.62 Adjusted R-Squared: 0.548 

> 
> 
> ## ************** iterated SUR ****************************
> fitsuri1 <- systemfit( system2, "SUR", data = Kmenta, maxit = 100,
+    useMatrix = useMatrix )
> print( summary( fitsuri1 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 6 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 108    4.42  0.885      0.958

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 66.3 3.90 1.98 0.753  0.724
supply 20 16 41.4 2.59 1.61 0.938  0.926

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.90  -2.38
supply  -2.38   2.59

The covariance matrix of the residuals
       demand supply
demand   3.90  -2.38
supply  -2.38   2.59

The correlations of the residuals
       demand supply
demand  1.000 -0.749
supply -0.749  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  94.0537     7.4051   12.70  4.2e-10 ***
price        -0.2355     0.0882   -2.67    0.016 *  
income        0.3117     0.0457    6.81  3.0e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.975 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.286 MSE: 3.899 Root MSE: 1.975 
Multiple R-Squared: 0.753 Adjusted R-Squared: 0.724 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.2982     3.3822    26.4  1.3e-14 ***
income        0.6655     0.0423    15.7  3.7e-11 ***
farmPrice    -0.4742     0.0372   -12.7  8.7e-10 ***
trend        -0.7966     0.0656   -12.2  1.7e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.609 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 41.411 MSE: 2.588 Root MSE: 1.609 
Multiple R-Squared: 0.938 Adjusted R-Squared: 0.926 

> nobs( fitsuri1 )
[1] 40
> 
> ## ************** iterated SUR (EViews-like) *****************
> fitsuri1e <- systemfit( system2, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitsuri1e, useDfSys = TRUE ) )

systemfit results 
method: iterated SUR 

convergence achieved after 7 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 108    3.01  0.885      0.959

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 66.7 3.93 1.98 0.751  0.722
supply 20 16 41.2 2.57 1.60 0.938  0.927

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.34  -1.97
supply  -1.97   2.06

The covariance matrix of the residuals
       demand supply
demand   3.34  -1.97
supply  -1.97   2.06

The correlations of the residuals
       demand supply
demand   1.00  -0.75
supply  -0.75   1.00


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.6193     6.8499   13.67  4.0e-15 ***
price        -0.2295     0.0816   -2.81   0.0082 ** 
income        0.3100     0.0423    7.33  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.981 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.742 MSE: 3.926 Root MSE: 1.981 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.722 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.2690     3.0165    29.6  < 2e-16 ***
income        0.6641     0.0377    17.6  < 2e-16 ***
farmPrice    -0.4730     0.0332   -14.2  1.3e-15 ***
trend        -0.7919     0.0585   -13.6  4.9e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.604 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 41.176 MSE: 2.573 Root MSE: 1.604 
Multiple R-Squared: 0.938 Adjusted R-Squared: 0.927 

> 
> ## ************** iterated SUR (methodResidCov = "Theil") ****************************
> fitsuri1r2 <- systemfit( system2, "SUR", data = Kmenta, maxit = 100,
+    methodResidCov = "Theil", useMatrix = useMatrix )
> print( summary( fitsuri1r2 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 7 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 109       4  0.884      0.961

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 66.9 3.94 1.98 0.750  0.721
supply 20 16 41.8 2.61 1.62 0.937  0.926

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.94  -2.51
supply  -2.51   2.61

The covariance matrix of the residuals
       demand supply
demand   3.94  -2.51
supply  -2.51   2.61

The correlations of the residuals
       demand supply
demand  1.000 -0.754
supply -0.754  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.4405     7.3821   12.66  4.4e-10 ***
price        -0.2271     0.0877   -2.59    0.019 *  
income        0.3093     0.0458    6.75  3.4e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.984 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.939 MSE: 3.938 Root MSE: 1.984 
Multiple R-Squared: 0.75 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.1602     3.3868    26.3  1.3e-14 ***
income        0.6635     0.0423    15.7  3.9e-11 ***
farmPrice    -0.4710     0.0369   -12.8  8.5e-10 ***
trend        -0.7952     0.0643   -12.4  1.3e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.616 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 41.764 MSE: 2.61 Root MSE: 1.616 
Multiple R-Squared: 0.937 Adjusted R-Squared: 0.926 

> 
> ## ************** iterated SUR (methodResidCov="Theil", useDfSys=TRUE) *****************
> fitsuri1e2 <- systemfit( system2, "SUR", data = Kmenta, methodResidCov = "Theil",
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitsuri1e2, useDfSys = TRUE ) )

systemfit results 
method: iterated SUR 

convergence achieved after 7 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 109       4  0.884      0.961

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 66.9 3.94 1.98 0.750  0.721
supply 20 16 41.8 2.61 1.62 0.937  0.926

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.94  -2.51
supply  -2.51   2.61

The covariance matrix of the residuals
       demand supply
demand   3.94  -2.51
supply  -2.51   2.61

The correlations of the residuals
       demand supply
demand  1.000 -0.754
supply -0.754  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.4405     7.3821   12.66  3.3e-14 ***
price        -0.2271     0.0877   -2.59    0.014 *  
income        0.3093     0.0458    6.75  1.1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.984 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.939 MSE: 3.938 Root MSE: 1.984 
Multiple R-Squared: 0.75 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.1602     3.3868    26.3  < 2e-16 ***
income        0.6635     0.0423    15.7  < 2e-16 ***
farmPrice    -0.4710     0.0369   -12.8  2.7e-14 ***
trend        -0.7952     0.0643   -12.4  6.0e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.616 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 41.764 MSE: 2.61 Root MSE: 1.616 
Multiple R-Squared: 0.937 Adjusted R-Squared: 0.926 

> 
> ## ************** iterated SUR (methodResidCov = "max") ****************************
> fitsuri1r3 <- systemfit( system2, "SUR", data = Kmenta, maxit = 100,
+    methodResidCov = "max", useMatrix = useMatrix )
> print( summary( fitsuri1r3 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 7 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 109    4.06  0.884       0.96

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 66.8 3.93 1.98 0.751  0.721
supply 20 16 41.7 2.61 1.61 0.937  0.926

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.93  -2.49
supply  -2.49   2.61

The covariance matrix of the residuals
       demand supply
demand   3.93  -2.49
supply  -2.49   2.61

The correlations of the residuals
       demand supply
demand  1.000 -0.754
supply -0.754  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.5427     7.3858   12.67  4.4e-10 ***
price        -0.2285     0.0877   -2.60    0.019 *  
income        0.3097     0.0458    6.76  3.3e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.983 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.826 MSE: 3.931 Root MSE: 1.983 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.1830     3.3861    26.3  1.3e-14 ***
income        0.6639     0.0423    15.7  3.8e-11 ***
farmPrice    -0.4715     0.0370   -12.8  8.5e-10 ***
trend        -0.7955     0.0645   -12.3  1.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.615 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 41.708 MSE: 2.607 Root MSE: 1.615 
Multiple R-Squared: 0.937 Adjusted R-Squared: 0.926 

> 
> ## ************** iterated WSUR (methodResidCov = "max") ****************************
> fitsuri1wr3 <- systemfit( system2, "SUR", data = Kmenta, maxit = 100,
+    methodResidCov = "max", residCovWeighted = TRUE, useMatrix = useMatrix )
> summary( fitsuri1wr3 )

systemfit results 
method: iterated SUR 

convergence achieved after 7 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 109    4.06  0.884       0.96

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 66.8 3.93 1.98 0.751  0.721
supply 20 16 41.7 2.61 1.61 0.937  0.926

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.93  -2.49
supply  -2.49   2.61

The covariance matrix of the residuals
       demand supply
demand   3.93  -2.49
supply  -2.49   2.61

The correlations of the residuals
       demand supply
demand  1.000 -0.754
supply -0.754  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.5427     7.3858   12.67  4.4e-10 ***
price        -0.2285     0.0877   -2.60    0.019 *  
income        0.3097     0.0458    6.76  3.3e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.983 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.826 MSE: 3.931 Root MSE: 1.983 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.1830     3.3861    26.3  1.3e-14 ***
income        0.6639     0.0423    15.7  3.8e-11 ***
farmPrice    -0.4715     0.0370   -12.8  8.5e-10 ***
trend        -0.7955     0.0645   -12.3  1.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.615 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 41.708 MSE: 2.607 Root MSE: 1.615 
Multiple R-Squared: 0.937 Adjusted R-Squared: 0.926 

> 
> 
> ## *********** iterated SUR with restriction *******************
> fitsuri2 <- systemfit( system2, "SUR", data = Kmenta, restrict.matrix = restrm,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitsuri2 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 21 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 587     110  0.372      0.669

        N DF SSR   MSE RMSE   R2 Adj R2
demand 20 17  67  3.94 1.99 0.75  0.721
supply 20 16 520 32.52 5.70 0.22  0.074

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.94   4.24
supply   4.24  32.52

The covariance matrix of the residuals
       demand supply
demand   3.94   4.24
supply   4.24  32.52

The correlations of the residuals
       demand supply
demand  1.000  0.375
supply  0.375  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 107.3678     7.4986   14.32  4.4e-16 ***
price        -0.3945     0.0912   -4.33  0.00013 ***
income        0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.986 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.024 MSE: 3.943 Root MSE: 1.986 
Multiple R-Squared: 0.75 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  85.0448    12.1069    7.02  4.2e-08 ***
income        0.3125     0.1233    2.53    0.016 *  
farmPrice    -0.1972     0.1157   -1.70    0.097 .  
trend         0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.703 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 520.329 MSE: 32.521 Root MSE: 5.703 
Multiple R-Squared: 0.22 Adjusted R-Squared: 0.074 

> 
> ## *********** iterated SUR with restriction (EViews-like) ***************
> fitsuri2e <- systemfit( system2, "SUR", data = Kmenta, restrict.matrix = restrm,
+    methodResidCov = "noDfCor", maxit = 100, x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitsuri2e ) )

systemfit results 
method: iterated SUR 

convergence achieved after 22 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 588    74.9  0.372      0.664

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  67.5  3.97 1.99 0.748  0.719
supply 20 16 520.2 32.51 5.70 0.220  0.074

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.37   3.58
supply   3.58  26.01

The covariance matrix of the residuals
       demand supply
demand   3.37   3.58
supply   3.58  26.01

The correlations of the residuals
       demand supply
demand  1.000  0.382
supply  0.382  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 107.8051     6.9270   15.56  < 2e-16 ***
price        -0.3986     0.0843   -4.73  3.8e-05 ***
income        0.3379     0.0431    7.84  4.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.992 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.47 MSE: 3.969 Root MSE: 1.992 
Multiple R-Squared: 0.748 Adjusted R-Squared: 0.719 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  85.1071    10.8287    7.86  3.8e-09 ***
income        0.3106     0.1101    2.82   0.0079 ** 
farmPrice    -0.1960     0.1034   -1.89   0.0667 .  
trend         0.3379     0.0431    7.84  4.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.702 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 520.205 MSE: 32.513 Root MSE: 5.702 
Multiple R-Squared: 0.22 Adjusted R-Squared: 0.074 

> 
> ## *********** iterated WSUR with restriction *******************
> fitsuri2w <- systemfit( system2, "SUR", data = Kmenta, restrict.matrix = restrm,
+    maxit = 100, residCovWeighted = TRUE, useMatrix = useMatrix )
> summary( fitsuri2w )

systemfit results 
method: iterated SUR 

convergence achieved after 18 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 587     110  0.372      0.669

        N DF SSR   MSE RMSE   R2 Adj R2
demand 20 17  67  3.94 1.99 0.75  0.721
supply 20 16 520 32.52 5.70 0.22  0.074

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.94   4.24
supply   4.24  32.52

The covariance matrix of the residuals
       demand supply
demand   3.94   4.24
supply   4.24  32.52

The correlations of the residuals
       demand supply
demand  1.000  0.375
supply  0.375  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 107.3672     7.4986   14.32  4.4e-16 ***
price        -0.3945     0.0912   -4.33  0.00013 ***
income        0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.986 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.023 MSE: 3.943 Root MSE: 1.986 
Multiple R-Squared: 0.75 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  85.0448    12.1069    7.02  4.2e-08 ***
income        0.3125     0.1233    2.53    0.016 *  
farmPrice    -0.1972     0.1157   -1.70    0.097 .  
trend         0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.703 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 520.327 MSE: 32.52 Root MSE: 5.703 
Multiple R-Squared: 0.22 Adjusted R-Squared: 0.074 

> 
> 
> ## *********** iterated SUR with restriction via restrict.regMat ********************
> fitsuri3 <- systemfit( system2, "SUR", data = Kmenta, restrict.regMat = tc,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitsuri3 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 21 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 587     110  0.372      0.669

        N DF SSR   MSE RMSE   R2 Adj R2
demand 20 17  67  3.94 1.99 0.75  0.721
supply 20 16 520 32.52 5.70 0.22  0.074

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.94   4.24
supply   4.24  32.52

The covariance matrix of the residuals
       demand supply
demand   3.94   4.24
supply   4.24  32.52

The correlations of the residuals
       demand supply
demand  1.000  0.375
supply  0.375  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 107.3678     7.4986   14.32  4.4e-16 ***
price        -0.3945     0.0912   -4.33  0.00013 ***
income        0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.986 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.024 MSE: 3.943 Root MSE: 1.986 
Multiple R-Squared: 0.75 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  85.0448    12.1069    7.02  4.2e-08 ***
income        0.3125     0.1233    2.53    0.016 *  
farmPrice    -0.1972     0.1157   -1.70    0.097 .  
trend         0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.703 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 520.329 MSE: 32.521 Root MSE: 5.703 
Multiple R-Squared: 0.22 Adjusted R-Squared: 0.074 

> 
> ## *********** iterated SUR with restriction via restrict.regMat (EViews-like) ***************
> fitsuri3e <- systemfit( system2, "SUR", data = Kmenta, restrict.regMat = tc,
+    methodResidCov = "noDfCor", maxit = 100, x = TRUE,
+    useMatrix = useMatrix )
> print( summary( fitsuri3e ) )

systemfit results 
method: iterated SUR 

convergence achieved after 22 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 588    74.9  0.372      0.664

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  67.5  3.97 1.99 0.748  0.719
supply 20 16 520.2 32.51 5.70 0.220  0.074

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.37   3.58
supply   3.58  26.01

The covariance matrix of the residuals
       demand supply
demand   3.37   3.58
supply   3.58  26.01

The correlations of the residuals
       demand supply
demand  1.000  0.382
supply  0.382  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 107.8051     6.9270   15.56  < 2e-16 ***
price        -0.3986     0.0843   -4.73  3.8e-05 ***
income        0.3379     0.0431    7.84  4.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.992 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.47 MSE: 3.969 Root MSE: 1.992 
Multiple R-Squared: 0.748 Adjusted R-Squared: 0.719 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  85.1071    10.8287    7.86  3.8e-09 ***
income        0.3106     0.1101    2.82   0.0079 ** 
farmPrice    -0.1960     0.1034   -1.89   0.0667 .  
trend         0.3379     0.0431    7.84  4.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.702 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 520.205 MSE: 32.513 Root MSE: 5.702 
Multiple R-Squared: 0.22 Adjusted R-Squared: 0.074 

> 
> ## *********** iterated WSUR with restriction via restrict.regMat (EViews-like) ***************
> fitsuri3we <- systemfit( system2, "SUR", data = Kmenta, restrict.regMat = tc,
+    methodResidCov = "noDfCor", maxit = 100, residCovWeighted = TRUE,
+    useMatrix = useMatrix )
> summary( fitsuri3we )

systemfit results 
method: iterated SUR 

convergence achieved after 20 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 588    74.9  0.372      0.664

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  67.5  3.97 1.99 0.748  0.719
supply 20 16 520.2 32.51 5.70 0.220  0.074

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.37   3.58
supply   3.58  26.01

The covariance matrix of the residuals
       demand supply
demand   3.37   3.58
supply   3.58  26.01

The correlations of the residuals
       demand supply
demand  1.000  0.382
supply  0.382  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 107.8055     6.9270   15.56  < 2e-16 ***
price        -0.3986     0.0843   -4.73  3.8e-05 ***
income        0.3379     0.0431    7.84  4.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.992 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.471 MSE: 3.969 Root MSE: 1.992 
Multiple R-Squared: 0.748 Adjusted R-Squared: 0.719 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  85.1071    10.8288    7.86  3.8e-09 ***
income        0.3106     0.1101    2.82    0.008 ** 
farmPrice    -0.1960     0.1034   -1.89    0.067 .  
trend         0.3379     0.0431    7.84  4.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.702 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 520.206 MSE: 32.513 Root MSE: 5.702 
Multiple R-Squared: 0.22 Adjusted R-Squared: 0.074 

> 
> 
> ## *************** iterated SUR with 2 restrictions ***************************
> fitsurio4 <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, maxit = 100, useMatrix = useMatrix )
> print( summary( fitsurio4 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 10 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 176    1.74  0.671      0.705

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  67.2 3.95 1.99 0.749  0.720
supply 20 16 109.2 6.83 2.61 0.593  0.516

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.95   5.02
supply   5.02   6.83

The covariance matrix of the residuals
       demand supply
demand   3.95   5.02
supply   5.02   6.83

The correlations of the residuals
       demand supply
demand  1.000  0.967
supply  0.967  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  92.4262     7.3543   12.57  1.6e-14 ***
price        -0.2276     0.0850   -2.68    0.011 *  
income        0.3203     0.0185   17.32  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.988 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.206 MSE: 3.953 Root MSE: 1.988 
Multiple R-Squared: 0.749 Adjusted R-Squared: 0.72 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  48.7295     7.4587    6.53  1.5e-07 ***
price         0.2724     0.0850    3.20   0.0029 ** 
farmPrice     0.2232     0.0190   11.76  1.0e-13 ***
trend         0.3203     0.0185   17.32  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.613 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 109.234 MSE: 6.827 Root MSE: 2.613 
Multiple R-Squared: 0.593 Adjusted R-Squared: 0.516 

> fitsuri4 <- systemfit( system2, "SUR", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, maxit = 100, useMatrix = useMatrix )
> print( summary( fitsuri4 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 19 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 575     121  0.385      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.5  3.85 1.96 0.756  0.727
supply 20 16 509.3 31.83 5.64 0.237  0.094

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The covariance matrix of the residuals
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The correlations of the residuals
       demand supply
demand  1.000  0.111
supply  0.111  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.0356     6.7437   14.54  2.2e-16 ***
price        -0.2646     0.0777   -3.40   0.0017 ** 
income        0.3007     0.0436    6.89  5.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.963 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.532 MSE: 3.855 Root MSE: 1.963 
Multiple R-Squared: 0.756 Adjusted R-Squared: 0.727 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  90.0046    10.4367    8.62  3.5e-10 ***
income        0.2354     0.0777    3.03   0.0046 ** 
farmPrice    -0.1667     0.1108   -1.50   0.1416    
trend         0.3007     0.0436    6.89  5.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.642 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 509.345 MSE: 31.834 Root MSE: 5.642 
Multiple R-Squared: 0.237 Adjusted R-Squared: 0.094 

> 
> ## *************** iterated SUR with 2 restrictions (EViews-like) **************
> fitsurio4e <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q, maxit = 100,
+    useMatrix = useMatrix )
> print( summary( fitsurio4e ) )

systemfit results 
method: iterated SUR 

convergence achieved after 9 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 173    1.18  0.677      0.665

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.3 3.90 1.97 0.753  0.724
supply 20 16 106.7 6.67 2.58 0.602  0.527

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.31   4.06
supply   4.06   5.34

The covariance matrix of the residuals
       demand supply
demand   3.31   4.06
supply   4.06   5.34

The correlations of the residuals
       demand supply
demand  1.000  0.966
supply  0.966  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.3596     6.8576   13.61  1.6e-15 ***
price        -0.2398     0.0779   -3.08   0.0041 ** 
income        0.3232     0.0163   19.81  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.974 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.265 MSE: 3.898 Root MSE: 1.974 
Multiple R-Squared: 0.753 Adjusted R-Squared: 0.724 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  49.5456     6.9727    7.11  2.8e-08 ***
price         0.2602     0.0779    3.34    0.002 ** 
farmPrice     0.2270     0.0164   13.81  8.9e-16 ***
trend         0.3232     0.0163   19.81  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.583 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 106.722 MSE: 6.67 Root MSE: 2.583 
Multiple R-Squared: 0.602 Adjusted R-Squared: 0.527 

> fitsuri4e <- systemfit( system2, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr2m, restrict.rhs = restr2q, maxit = 100,
+    useMatrix = useMatrix )
> print( summary( fitsuri4e ) )

systemfit results 
method: iterated SUR 

convergence achieved after 20 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 570    82.4  0.391      0.629

        N DF SSR   MSE RMSE    R2 Adj R2
demand 20 17  66  3.88 1.97 0.754  0.725
supply 20 16 504 31.50 5.61 0.245  0.103

The covariance matrix of the residuals used for estimation
       demand supply
demand  3.300  0.876
supply  0.876 25.203

The covariance matrix of the residuals
       demand supply
demand  3.300  0.876
supply  0.876 25.203

The correlations of the residuals
       demand supply
demand 1.0000 0.0961
supply 0.0961 1.0000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  97.6297     6.1560   15.86  < 2e-16 ***
price        -0.2576     0.0709   -3.63  0.00089 ***
income        0.2976     0.0403    7.38  1.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.97 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.995 MSE: 3.882 Root MSE: 1.97 
Multiple R-Squared: 0.754 Adjusted R-Squared: 0.725 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.5437     9.3372    9.59  2.5e-11 ***
income        0.2424     0.0709    3.42   0.0016 ** 
farmPrice    -0.1687     0.0988   -1.71   0.0967 .  
trend         0.2976     0.0403    7.38  1.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.613 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 504.066 MSE: 31.504 Root MSE: 5.613 
Multiple R-Squared: 0.245 Adjusted R-Squared: 0.103 

> 
> ## *************** iterated WSUR with 2 restrictions ***************************
> fitsurio4w <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, maxit = 100, residCovWeighted = TRUE,
+    useMatrix = useMatrix )
> summary( fitsurio4w )

systemfit results 
method: iterated SUR 

convergence achieved after 10 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 176    1.74  0.671      0.705

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  67.2 3.95 1.99 0.749  0.720
supply 20 16 109.2 6.83 2.61 0.593  0.516

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.95   5.02
supply   5.02   6.83

The covariance matrix of the residuals
       demand supply
demand   3.95   5.02
supply   5.02   6.83

The correlations of the residuals
       demand supply
demand  1.000  0.967
supply  0.967  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  92.4262     7.3543   12.57  1.6e-14 ***
price        -0.2276     0.0850   -2.68    0.011 *  
income        0.3203     0.0185   17.32  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.988 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.206 MSE: 3.953 Root MSE: 1.988 
Multiple R-Squared: 0.749 Adjusted R-Squared: 0.72 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  48.7294     7.4587    6.53  1.5e-07 ***
price         0.2724     0.0850    3.20   0.0029 ** 
farmPrice     0.2232     0.0190   11.76  1.0e-13 ***
trend         0.3203     0.0185   17.32  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.613 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 109.234 MSE: 6.827 Root MSE: 2.613 
Multiple R-Squared: 0.593 Adjusted R-Squared: 0.516 

> fitsuri4w <- systemfit( system2, "SUR", data = Kmenta, restrict.matrix = restr2m,
+    restrict.rhs = restr2q, maxit = 100, residCovWeighted = TRUE,
+    useMatrix = useMatrix )
> summary( fitsuri4w )

systemfit results 
method: iterated SUR 

convergence achieved after 18 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 575     121  0.385      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.5  3.85 1.96 0.756  0.727
supply 20 16 509.3 31.83 5.64 0.237  0.094

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The covariance matrix of the residuals
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The correlations of the residuals
       demand supply
demand  1.000  0.111
supply  0.111  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.0361     6.7437   14.54  2.2e-16 ***
price        -0.2646     0.0777   -3.40   0.0017 ** 
income        0.3007     0.0436    6.89  5.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.963 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.531 MSE: 3.855 Root MSE: 1.963 
Multiple R-Squared: 0.756 Adjusted R-Squared: 0.727 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  90.0052    10.4368    8.62  3.5e-10 ***
income        0.2354     0.0777    3.03   0.0046 ** 
farmPrice    -0.1667     0.1108   -1.50   0.1416    
trend         0.3007     0.0436    6.89  5.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.642 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 509.349 MSE: 31.834 Root MSE: 5.642 
Multiple R-Squared: 0.237 Adjusted R-Squared: 0.094 

> 
> 
> ## *************** iterated SUR with 2 restrictions via R and restrict.regMat ****************
> fitsurio5 <- systemfit( system, "SUR", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, maxit = 100,
+    useMatrix = useMatrix )
> print( summary( fitsurio5 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 10 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 176    1.74  0.671      0.705

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  67.2 3.95 1.99 0.749  0.720
supply 20 16 109.2 6.83 2.61 0.593  0.516

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.95   5.02
supply   5.02   6.83

The covariance matrix of the residuals
       demand supply
demand   3.95   5.02
supply   5.02   6.83

The correlations of the residuals
       demand supply
demand  1.000  0.967
supply  0.967  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  92.4262     7.3543   12.57  1.6e-14 ***
price        -0.2276     0.0850   -2.68    0.011 *  
income        0.3203     0.0185   17.32  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.988 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.206 MSE: 3.953 Root MSE: 1.988 
Multiple R-Squared: 0.749 Adjusted R-Squared: 0.72 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  48.7295     7.4587    6.53  1.5e-07 ***
price         0.2724     0.0850    3.20   0.0029 ** 
farmPrice     0.2232     0.0190   11.76  1.0e-13 ***
trend         0.3203     0.0185   17.32  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.613 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 109.234 MSE: 6.827 Root MSE: 2.613 
Multiple R-Squared: 0.593 Adjusted R-Squared: 0.516 

> fitsuri5 <- systemfit( system2, "SUR", data = Kmenta, restrict.matrix = restr3m,
+    restrict.rhs = restr3q, restrict.regMat = tc, maxit = 100,
+    useMatrix = useMatrix )
> print( summary( fitsuri5 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 19 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 575     121  0.385      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.5  3.85 1.96 0.756  0.727
supply 20 16 509.3 31.83 5.64 0.237  0.094

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The covariance matrix of the residuals
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The correlations of the residuals
       demand supply
demand  1.000  0.111
supply  0.111  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.0356     6.7437   14.54  2.2e-16 ***
price        -0.2646     0.0777   -3.40   0.0017 ** 
income        0.3007     0.0436    6.89  5.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.963 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.532 MSE: 3.855 Root MSE: 1.963 
Multiple R-Squared: 0.756 Adjusted R-Squared: 0.727 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  90.0046    10.4367    8.62  3.5e-10 ***
income        0.2354     0.0777    3.03   0.0046 ** 
farmPrice    -0.1667     0.1108   -1.50   0.1416    
trend         0.3007     0.0436    6.89  5.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.642 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 509.345 MSE: 31.834 Root MSE: 5.642 
Multiple R-Squared: 0.237 Adjusted R-Squared: 0.094 

> 
> ## ********* iterated SUR with 2 restrictions via R and restrict.regMat (EViews-like) **********
> fitsurio5e <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitsurio5e ) )

systemfit results 
method: iterated SUR 

convergence achieved after 9 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 173    1.18  0.677      0.665

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.3 3.90 1.97 0.753  0.724
supply 20 16 106.7 6.67 2.58 0.602  0.527

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.31   4.06
supply   4.06   5.34

The covariance matrix of the residuals
       demand supply
demand   3.31   4.06
supply   4.06   5.34

The correlations of the residuals
       demand supply
demand  1.000  0.966
supply  0.966  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.3596     6.8576   13.61  1.6e-15 ***
price        -0.2398     0.0779   -3.08   0.0041 ** 
income        0.3232     0.0163   19.81  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.974 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.265 MSE: 3.898 Root MSE: 1.974 
Multiple R-Squared: 0.753 Adjusted R-Squared: 0.724 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  49.5456     6.9727    7.11  2.8e-08 ***
price         0.2602     0.0779    3.34    0.002 ** 
farmPrice     0.2270     0.0164   13.81  8.9e-16 ***
trend         0.3232     0.0163   19.81  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.583 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 106.722 MSE: 6.67 Root MSE: 2.583 
Multiple R-Squared: 0.602 Adjusted R-Squared: 0.527 

> fitsuri5e <- systemfit( system2, "SUR", data = Kmenta, methodResidCov = "noDfCor",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, useMatrix = useMatrix )
> print( summary( fitsuri5e ) )

systemfit results 
method: iterated SUR 

convergence achieved after 20 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 570    82.4  0.391      0.629

        N DF SSR   MSE RMSE    R2 Adj R2
demand 20 17  66  3.88 1.97 0.754  0.725
supply 20 16 504 31.50 5.61 0.245  0.103

The covariance matrix of the residuals used for estimation
       demand supply
demand  3.300  0.876
supply  0.876 25.203

The covariance matrix of the residuals
       demand supply
demand  3.300  0.876
supply  0.876 25.203

The correlations of the residuals
       demand supply
demand 1.0000 0.0961
supply 0.0961 1.0000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  97.6297     6.1560   15.86  < 2e-16 ***
price        -0.2576     0.0709   -3.63  0.00089 ***
income        0.2976     0.0403    7.38  1.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.97 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.995 MSE: 3.882 Root MSE: 1.97 
Multiple R-Squared: 0.754 Adjusted R-Squared: 0.725 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.5437     9.3372    9.59  2.5e-11 ***
income        0.2424     0.0709    3.42   0.0016 ** 
farmPrice    -0.1687     0.0988   -1.71   0.0967 .  
trend         0.2976     0.0403    7.38  1.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.613 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 504.066 MSE: 31.504 Root MSE: 5.613 
Multiple R-Squared: 0.245 Adjusted R-Squared: 0.103 

> nobs( fitsuri5e )
[1] 40
> 
> ## ********* iterated SUR with 2 restrictions via R and restrict.regMat (methodResidCov="Theil") **********
> fitsurio5r2 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "Theil",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitsurio5r2 ) )

systemfit results 
method: iterated SUR 

warning: convergence not achieved after 100 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 253   -1.67  0.527      0.927

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  95.8 5.63 2.37 0.643  0.601
supply 20 16 157.7 9.86 3.14 0.412  0.301

The covariance matrix of the residuals used for estimation
       demand supply
demand   4.26   5.29
supply   5.29   6.69

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   5.63   7.56
supply   7.56   9.86

The correlations of the residuals
       demand supply
demand  1.000  0.982
supply  0.982  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  78.0342     7.1638   10.89  8.6e-13 ***
price        -0.0647     0.0815   -0.79     0.43    
income        0.3007     0.0131   23.01  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.373 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 95.76 MSE: 5.633 Root MSE: 2.373 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.601 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  34.1958     7.2257    4.73  3.6e-05 ***
price         0.4353     0.0815    5.34  5.7e-06 ***
farmPrice     0.2070     0.0124   16.68  < 2e-16 ***
trend         0.3007     0.0131   23.01  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.14 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 157.737 MSE: 9.859 Root MSE: 3.14 
Multiple R-Squared: 0.412 Adjusted R-Squared: 0.301 

> fitsuri5r2 <- systemfit( system2, "SUR", data = Kmenta, methodResidCov = "Theil",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, x = TRUE, useMatrix = useMatrix )
> print( summary( fitsuri5r2 ) )

systemfit results 
method: iterated SUR 

convergence achieved after 21 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 576     121  0.384      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.4  3.85 1.96 0.756  0.727
supply 20 16 510.8 31.92 5.65 0.235  0.091

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.85   1.34
supply   1.34  31.92

The covariance matrix of the residuals
       demand supply
demand   3.85   1.34
supply   1.34  31.92

The correlations of the residuals
       demand supply
demand  1.000  0.117
supply  0.117  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.2200     6.7593   14.53  2.2e-16 ***
price        -0.2669     0.0778   -3.43   0.0016 ** 
income        0.3011     0.0435    6.92  4.9e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.962 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.447 MSE: 3.85 Root MSE: 1.962 
Multiple R-Squared: 0.756 Adjusted R-Squared: 0.727 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  90.2167    10.4342    8.65  3.3e-10 ***
income        0.2331     0.0778    3.00    0.005 ** 
farmPrice    -0.1666     0.1111   -1.50    0.143    
trend         0.3011     0.0435    6.92  4.9e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.65 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 510.75 MSE: 31.922 Root MSE: 5.65 
Multiple R-Squared: 0.235 Adjusted R-Squared: 0.091 

> 
> ## ********* iterated SUR with 2 restrictions via R and restrict.regMat (methodResidCov="max") **********
> # fitsuri5e <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "max",
> #    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
> #    maxit = 100, useMatrix = useMatrix )
> # print( summary( fitsuri5e ) )
> # print( round( vcov( fitsuri5e ), digits = 6 ) )
> # disabled, because the estimation does not converge
> 
> ## ********* iterated WSUR with 2 restrictions via R and restrict.regMat (methodResidCov="Theil") **********
> fitsurio5wr2 <- systemfit( system, "SUR", data = Kmenta, methodResidCov = "Theil",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, residCovWeighted = TRUE, useMatrix = useMatrix )
> summary( fitsurio5wr2 )

systemfit results 
method: iterated SUR 

warning: convergence not achieved after 100 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 253   -1.67  0.527      0.927

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  95.8 5.63 2.37 0.643  0.601
supply 20 16 157.7 9.86 3.14 0.412  0.301

The covariance matrix of the residuals used for estimation
       demand supply
demand   4.26   5.29
supply   5.29   6.69

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   5.63   7.56
supply   7.56   9.86

The correlations of the residuals
       demand supply
demand  1.000  0.982
supply  0.982  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  78.0342     7.1638   10.89  8.6e-13 ***
price        -0.0647     0.0815   -0.79     0.43    
income        0.3007     0.0131   23.01  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.373 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 95.76 MSE: 5.633 Root MSE: 2.373 
Multiple R-Squared: 0.643 Adjusted R-Squared: 0.601 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  34.1958     7.2257    4.73  3.6e-05 ***
price         0.4353     0.0815    5.34  5.7e-06 ***
farmPrice     0.2070     0.0124   16.68  < 2e-16 ***
trend         0.3007     0.0131   23.01  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.14 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 157.737 MSE: 9.859 Root MSE: 3.14 
Multiple R-Squared: 0.412 Adjusted R-Squared: 0.301 

> fitsuri5wr2 <- systemfit( system2, "SUR", data = Kmenta, methodResidCov = "Theil",
+    restrict.matrix = restr3m, restrict.rhs = restr3q, restrict.regMat = tc,
+    maxit = 100, residCovWeighted = TRUE, useMatrix = useMatrix )
> summary( fitsuri5wr2 )

systemfit results 
method: iterated SUR 

convergence achieved after 19 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 576     121  0.384      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.4  3.85 1.96 0.756  0.727
supply 20 16 510.8 31.92 5.65 0.235  0.091

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.85   1.34
supply   1.34  31.92

The covariance matrix of the residuals
       demand supply
demand   3.85   1.34
supply   1.34  31.92

The correlations of the residuals
       demand supply
demand  1.000  0.117
supply  0.117  1.000


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.2200     6.7593   14.53  2.2e-16 ***
price        -0.2669     0.0778   -3.43   0.0016 ** 
income        0.3011     0.0435    6.92  4.9e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.962 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.447 MSE: 3.85 Root MSE: 1.962 
Multiple R-Squared: 0.756 Adjusted R-Squared: 0.727 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  90.2168    10.4342    8.65  3.3e-10 ***
income        0.2331     0.0778    3.00    0.005 ** 
farmPrice    -0.1666     0.1111   -1.50    0.143    
trend         0.3011     0.0435    6.92  4.9e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.65 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 510.75 MSE: 31.922 Root MSE: 5.65 
Multiple R-Squared: 0.235 Adjusted R-Squared: 0.091 

> 
> 
> ## *********** estimations with a single regressor ************
> fitsurS1 <- systemfit(
+    list( price ~ consump - 1, farmPrice ~ consump + trend ), "SUR",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitsurS1 ) )

systemfit results 
method: SUR 

        N DF  SSR detRCov OLS-R2 McElroy-R2
system 40 36 2060    2543  0.449      0.465

     N DF  SSR  MSE RMSE     R2 Adj R2
eq1 20 19  848 44.6 6.68 -0.271 -0.271
eq2 20 17 1211 71.3 8.44  0.605  0.559

The covariance matrix of the residuals used for estimation
      eq1   eq2
eq1  44.6 -20.5
eq2 -20.5  68.9

The covariance matrix of the residuals
      eq1   eq2
eq1  44.6 -25.3
eq2 -25.3  71.3

The correlations of the residuals
       eq1    eq2
eq1  1.000 -0.448
eq2 -0.448  1.000


SUR estimates for 'eq1' (equation 1)
Model Formula: price ~ consump - 1

        Estimate Std. Error t value Pr(>|t|)    
consump   0.9902     0.0148    66.9   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 6.682 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 848.208 MSE: 44.643 Root MSE: 6.682 
Multiple R-Squared: -0.271 Adjusted R-Squared: -0.271 


SUR estimates for 'eq2' (equation 2)
Model Formula: farmPrice ~ consump + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) -108.487     47.754   -2.27  0.03638 *  
consump        2.123      0.477    4.45  0.00035 ***
trend         -0.862      0.303   -2.85  0.01111 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 8.441 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 1211.393 MSE: 71.258 Root MSE: 8.441 
Multiple R-Squared: 0.605 Adjusted R-Squared: 0.559 

> nobs( fitsurS1 )
[1] 40
> fitsurS2 <- systemfit(
+    list( consump ~ price - 1, consump ~ trend - 1 ), "SUR",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitsurS2 ) )

systemfit results 
method: SUR 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 38 47370  110949  -87.3      -5.28

     N DF   SSR    MSE  RMSE      R2  Adj R2
eq1 20 19   861   45.3  6.73   -2.21   -2.21
eq2 20 19 46509 2447.8 49.48 -172.47 -172.47

The covariance matrix of the residuals used for estimation
      eq1     eq2
eq1 45.34   -5.15
eq2 -5.15 2447.84

The covariance matrix of the residuals
      eq1     eq2
eq1 45.34   -6.37
eq2 -6.37 2447.84

The correlations of the residuals
        eq1     eq2
eq1  1.0000 -0.0439
eq2 -0.0439  1.0000


SUR estimates for 'eq1' (equation 1)
Model Formula: consump ~ price - 1

      Estimate Std. Error t value Pr(>|t|)    
price    1.006      0.015      67   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 6.734 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 861.496 MSE: 45.342 Root MSE: 6.734 
Multiple R-Squared: -2.213 Adjusted R-Squared: -2.213 


SUR estimates for 'eq2' (equation 2)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.410      0.924    8.02  1.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.476 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.986 MSE: 2447.841 Root MSE: 49.476 
Multiple R-Squared: -172.467 Adjusted R-Squared: -172.467 

> nobs( fitsurS2 )
[1] 40
> fitsurS3 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "SUR",
+    data = Kmenta, useMatrix = useMatrix )
> nobs( fitsurS3 )
[1] 40
> print( summary( fitsurS3 ) )

systemfit results 
method: SUR 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 38 93537  108970    -99     -0.977

     N DF   SSR  MSE RMSE     R2 Adj R2
eq1 20 19 46509 2448 49.5 -172.5 -172.5
eq2 20 19 47028 2475 49.8  -69.5  -69.5

The covariance matrix of the residuals used for estimation
     eq1  eq2
eq1 2448 2439
eq2 2439 2475

The covariance matrix of the residuals
     eq1  eq2
eq1 2448 2439
eq2 2439 2475

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.988
eq2 0.988 1.000


SUR estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.405      0.924    8.02  1.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.476 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46508.922 MSE: 2447.838 Root MSE: 49.476 
Multiple R-Squared: -172.467 Adjusted R-Squared: -172.467 


SUR estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.318      0.929    7.88  2.1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.751 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47028.107 MSE: 2475.164 Root MSE: 49.751 
Multiple R-Squared: -69.48 Adjusted R-Squared: -69.48 

> fitsurS4 <- systemfit(
+    list( consump ~ trend - 1, price ~ trend - 1 ), "SUR",
+    data = Kmenta, restrict.matrix = matrix( c( 1, -1 ), nrow = 1 ),
+    useMatrix = useMatrix )
> print( summary( fitsurS4 ) )

systemfit results 
method: SUR 

        N DF   SSR detRCov OLS-R2 McElroy-R2
system 40 39 93552  111731    -99      -1.03

     N DF   SSR  MSE RMSE     R2 Adj R2
eq1 20 19 46510 2448 49.5 -172.5 -172.5
eq2 20 19 47042 2476 49.8  -69.5  -69.5

The covariance matrix of the residuals used for estimation
     eq1  eq2
eq1 2448 2439
eq2 2439 2475

The covariance matrix of the residuals
     eq1  eq2
eq1 2448 2439
eq2 2439 2476

The correlations of the residuals
      eq1   eq2
eq1 1.000 0.988
eq2 0.988 1.000


SUR estimates for 'eq1' (equation 1)
Model Formula: consump ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.388      0.923       8  9.4e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.476 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 46509.787 MSE: 2447.884 Root MSE: 49.476 
Multiple R-Squared: -172.47 Adjusted R-Squared: -172.47 


SUR estimates for 'eq2' (equation 2)
Model Formula: price ~ trend - 1

      Estimate Std. Error t value Pr(>|t|)    
trend    7.388      0.923       8  9.4e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.758 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 47041.803 MSE: 2475.884 Root MSE: 49.758 
Multiple R-Squared: -69.501 Adjusted R-Squared: -69.501 

> nobs( fitsurS4 )
[1] 40
> fitsurS5 <- systemfit(
+    list( consump ~ 1, price ~ 1 ), "SUR",
+    data = Kmenta, useMatrix = useMatrix )
> print( summary( fitsurS5 ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 38 935     491      0          0

     N DF SSR  MSE RMSE R2 Adj R2
eq1 20 19 268 14.1 3.76  0      0
eq2 20 19 667 35.1 5.93  0      0

The covariance matrix of the residuals used for estimation
      eq1   eq2
eq1 14.11  2.18
eq2  2.18 35.12

The covariance matrix of the residuals
      eq1   eq2
eq1 14.11  2.18
eq2  2.18 35.12

The correlations of the residuals
       eq1    eq2
eq1 1.0000 0.0981
eq2 0.0981 1.0000


SUR estimates for 'eq1' (equation 1)
Model Formula: consump ~ 1

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   100.90       0.84     120   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.756 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 268.114 MSE: 14.111 Root MSE: 3.756 
Multiple R-Squared: 0 Adjusted R-Squared: 0 


SUR estimates for 'eq2' (equation 2)
Model Formula: price ~ 1

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   100.02       1.33    75.5   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.926 on 19 degrees of freedom
Number of observations: 20 Degrees of Freedom: 19 
SSR: 667.251 MSE: 35.118 Root MSE: 5.926 
Multiple R-Squared: 0 Adjusted R-Squared: 0 

> nobs( fitsurS5 )
[1] 40
> 
> 
> ## **************** shorter summaries **********************
> print( summary( fitsur1e2, useDfSys = TRUE, equations = FALSE ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 172  -0.896  0.679       1.01

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.8 3.93 1.98 0.751  0.722
supply 20 16 105.3 6.58 2.57 0.607  0.534

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.73   4.28
supply   4.28   5.78

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   3.93   5.17
supply   5.17   6.58

The correlations of the residuals
       demand supply
demand  1.000  0.984
supply  0.984  1.000


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  99.2120     7.5127   13.21  1.0e-14 ***
demand_price        -0.2667     0.0877   -3.04   0.0046 ** 
demand_income        0.2908     0.0406    7.16  3.3e-08 ***
supply_(Intercept)  63.0768    10.9735    5.75  2.0e-06 ***
supply_price         0.1439     0.0943    1.52   0.1368    
supply_farmPrice     0.2064     0.0384    5.37  6.1e-06 ***
supply_trend         0.3325     0.0640    5.19  1.0e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitsur2e, useDfSys = FALSE, residCov = FALSE ) )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 180    0.62  0.663      0.707

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  72.6 4.27 2.07 0.729  0.697
supply 20 16 107.9 6.75 2.60 0.597  0.522


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.7799     6.9687   14.17  7.6e-11 ***
price        -0.2354     0.0795   -2.96   0.0088 ** 
income        0.2631     0.0344    7.66  6.6e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.066 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 72.577 MSE: 4.269 Root MSE: 2.066 
Multiple R-Squared: 0.729 Adjusted R-Squared: 0.697 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  67.6039     9.5712    7.06  2.7e-06 ***
price         0.1328     0.0853    1.56     0.14    
farmPrice     0.1785     0.0305    5.85  2.5e-05 ***
trend         0.2631     0.0344    7.66  9.7e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.597 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 107.917 MSE: 6.745 Root MSE: 2.597 
Multiple R-Squared: 0.597 Adjusted R-Squared: 0.522 

> 
> print( summary( fitsur3 ), equations = FALSE )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 179   0.933  0.665      0.753

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  71.6 4.21 2.05 0.733  0.702
supply 20 16 107.8 6.74 2.60 0.598  0.523

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.78   4.47
supply   4.47   5.94

The covariance matrix of the residuals
       demand supply
demand   4.21   5.24
supply   5.24   6.74

The correlations of the residuals
       demand supply
demand  1.000  0.983
supply  0.983  1.000


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  98.8408     7.5581   13.08  8.0e-15 ***
demand_price        -0.2398     0.0860   -2.79   0.0086 ** 
demand_income        0.2670     0.0368    7.25  2.2e-08 ***
supply_(Intercept)  67.4283    10.6647    6.32  3.3e-07 ***
supply_price         0.1332     0.0953    1.40   0.1713    
supply_farmPrice     0.1795     0.0337    5.33  6.3e-06 ***
supply_trend         0.2670     0.0368    7.25  2.2e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitsur4r3 ), residCov = FALSE, equations = FALSE )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 173   0.217  0.677      0.702

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  66.4 3.91 1.98 0.752  0.723
supply 20 16 106.9 6.68 2.58 0.601  0.526


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  93.1978     7.3168   12.74  1.1e-14 ***
demand_price        -0.2381     0.0829   -2.87   0.0069 ** 
demand_income        0.3231     0.0170   18.96  < 2e-16 ***
supply_(Intercept)  49.3676     7.4381    6.64  1.1e-07 ***
supply_price         0.2619     0.0829    3.16   0.0033 ** 
supply_farmPrice     0.2271     0.0171   13.29  3.1e-15 ***
supply_trend         0.3231     0.0170   18.96  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitsur5, residCov = FALSE ), equations = FALSE )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 165    1.76  0.691       0.69

        N DF SSR  MSE RMSE    R2 Adj R2
demand 20 17  64 3.76 1.94 0.761  0.733
supply 20 16 101 6.34 2.52 0.622  0.551


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  96.8275     7.4665   12.97  6.2e-15 ***
demand_price        -0.2798     0.0840   -3.33    0.002 ** 
demand_income        0.3286     0.0206   15.93  < 2e-16 ***
supply_(Intercept)  52.9386     7.6655    6.91  5.1e-08 ***
supply_price         0.2202     0.0840    2.62    0.013 *  
supply_farmPrice     0.2327     0.0212   10.97  7.2e-13 ***
supply_trend         0.3286     0.0206   15.93  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitsur5w, equations = FALSE, residCov = FALSE ),
+    equations = TRUE )

systemfit results 
method: SUR 

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 166    1.75   0.69      0.691

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  64.2 3.77 1.94 0.761  0.733
supply 20 16 102.0 6.37 2.52 0.620  0.548


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  96.4421     7.4234   12.99    6e-15 ***
price        -0.2753     0.0838   -3.29   0.0023 ** 
income        0.3280     0.0202   16.21   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.943 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 64.16 MSE: 3.774 Root MSE: 1.943 
Multiple R-Squared: 0.761 Adjusted R-Squared: 0.733 


SUR estimates for 'supply' (equation 2)
Model Formula: consump ~ price + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  52.5761     7.6099    6.91  5.0e-08 ***
price         0.2247     0.0838    2.68    0.011 *  
farmPrice     0.2318     0.0208   11.14  4.7e-13 ***
trend         0.3280     0.0202   16.21  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 2.524 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 101.967 MSE: 6.373 Root MSE: 2.524 
Multiple R-Squared: 0.62 Adjusted R-Squared: 0.548 

> 
> print( summary( fitsuri1r3, useDfSys = FALSE ), residCov = FALSE )

systemfit results 
method: iterated SUR 

convergence achieved after 7 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 33 109    4.06  0.884       0.96

        N DF  SSR  MSE RMSE    R2 Adj R2
demand 20 17 66.8 3.93 1.98 0.751  0.721
supply 20 16 41.7 2.61 1.61 0.937  0.926


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  93.5427     7.3858   12.67  4.4e-10 ***
price        -0.2285     0.0877   -2.60    0.019 *  
income        0.3097     0.0458    6.76  3.3e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.983 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 66.826 MSE: 3.931 Root MSE: 1.983 
Multiple R-Squared: 0.751 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  89.1830     3.3861    26.3  1.3e-14 ***
income        0.6639     0.0423    15.7  3.8e-11 ***
farmPrice    -0.4715     0.0370   -12.8  8.5e-10 ***
trend        -0.7955     0.0645   -12.3  1.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.615 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 41.708 MSE: 2.607 Root MSE: 1.615 
Multiple R-Squared: 0.937 Adjusted R-Squared: 0.926 

> 
> print( summary( fitsuri2 ), residCov = FALSE )

systemfit results 
method: iterated SUR 

convergence achieved after 21 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 587     110  0.372      0.669

        N DF SSR   MSE RMSE   R2 Adj R2
demand 20 17  67  3.94 1.99 0.75  0.721
supply 20 16 520 32.52 5.70 0.22  0.074


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 107.3678     7.4986   14.32  4.4e-16 ***
price        -0.3945     0.0912   -4.33  0.00013 ***
income        0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.986 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 67.024 MSE: 3.943 Root MSE: 1.986 
Multiple R-Squared: 0.75 Adjusted R-Squared: 0.721 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  85.0448    12.1069    7.02  4.2e-08 ***
income        0.3125     0.1233    2.53    0.016 *  
farmPrice    -0.1972     0.1157   -1.70    0.097 .  
trend         0.3382     0.0466    7.25  2.1e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.703 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 520.329 MSE: 32.521 Root MSE: 5.703 
Multiple R-Squared: 0.22 Adjusted R-Squared: 0.074 

> 
> print( summary( fitsuri3e, residCov = FALSE, equations = FALSE ) )

systemfit results 
method: iterated SUR 

convergence achieved after 22 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 34 588    74.9  0.372      0.664

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  67.5  3.97 1.99 0.748  0.719
supply 20 16 520.2 32.51 5.70 0.220  0.074


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept) 107.8051     6.9270   15.56  < 2e-16 ***
demand_price        -0.3986     0.0843   -4.73  3.8e-05 ***
demand_income        0.3379     0.0431    7.84  4.0e-09 ***
supply_(Intercept)  85.1071    10.8287    7.86  3.8e-09 ***
supply_income        0.3106     0.1101    2.82   0.0079 ** 
supply_farmPrice    -0.1960     0.1034   -1.89   0.0667 .  
supply_trend         0.3379     0.0431    7.84  4.0e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitsurio4, residCov = FALSE ), equations = FALSE )

systemfit results 
method: iterated SUR 

convergence achieved after 10 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 176    1.74  0.671      0.705

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  67.2 3.95 1.99 0.749  0.720
supply 20 16 109.2 6.83 2.61 0.593  0.516


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  92.4262     7.3543   12.57  1.6e-14 ***
demand_price        -0.2276     0.0850   -2.68   0.0112 *  
demand_income        0.3203     0.0185   17.32  < 2e-16 ***
supply_(Intercept)  48.7295     7.4587    6.53  1.5e-07 ***
supply_price         0.2724     0.0850    3.20   0.0029 ** 
supply_farmPrice     0.2232     0.0190   11.76  1.0e-13 ***
supply_trend         0.3203     0.0185   17.32  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( summary( fitsuri4, equations = FALSE ), residCov = FALSE )

systemfit results 
method: iterated SUR 

convergence achieved after 19 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 575     121  0.385      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.5  3.85 1.96 0.756  0.727
supply 20 16 509.3 31.83 5.64 0.237  0.094


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  98.0356     6.7437   14.54  2.2e-16 ***
demand_price        -0.2646     0.0777   -3.40   0.0017 ** 
demand_income        0.3007     0.0436    6.89  5.3e-08 ***
supply_(Intercept)  90.0046    10.4367    8.62  3.5e-10 ***
supply_income        0.2354     0.0777    3.03   0.0046 ** 
supply_farmPrice    -0.1667     0.1108   -1.50   0.1416    
supply_trend         0.3007     0.0436    6.89  5.3e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitsuri4w, useDfSys = FALSE, equations = FALSE ) )

systemfit results 
method: iterated SUR 

convergence achieved after 18 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 575     121  0.385      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.5  3.85 1.96 0.756  0.727
supply 20 16 509.3 31.83 5.64 0.237  0.094

The covariance matrix of the residuals used for estimation
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The covariance matrix of the residuals
       demand supply
demand   3.85   1.23
supply   1.23  31.83

The correlations of the residuals
       demand supply
demand  1.000  0.111
supply  0.111  1.000


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  98.0361     6.7437   14.54  5.1e-11 ***
demand_price        -0.2646     0.0777   -3.40   0.0034 ** 
demand_income        0.3007     0.0436    6.89  2.6e-06 ***
supply_(Intercept)  90.0052    10.4368    8.62  2.1e-07 ***
supply_income        0.2354     0.0777    3.03   0.0080 ** 
supply_farmPrice    -0.1667     0.1108   -1.50   0.1521    
supply_trend         0.3007     0.0436    6.89  3.6e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( summary( fitsurio5r2, equations = FALSE ) )

systemfit results 
method: iterated SUR 

warning: convergence not achieved after 100 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 253   -1.67  0.527      0.927

        N DF   SSR  MSE RMSE    R2 Adj R2
demand 20 17  95.8 5.63 2.37 0.643  0.601
supply 20 16 157.7 9.86 3.14 0.412  0.301

The covariance matrix of the residuals used for estimation
       demand supply
demand   4.26   5.29
supply   5.29   6.69

warning: this covariance matrix is NOT positive semidefinit!

The covariance matrix of the residuals
       demand supply
demand   5.63   7.56
supply   7.56   9.86

The correlations of the residuals
       demand supply
demand  1.000  0.982
supply  0.982  1.000


Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
demand_(Intercept)  78.0342     7.1638   10.89  8.6e-13 ***
demand_price        -0.0647     0.0815   -0.79     0.43    
demand_income        0.3007     0.0131   23.01  < 2e-16 ***
supply_(Intercept)  34.1958     7.2257    4.73  3.6e-05 ***
supply_price         0.4353     0.0815    5.34  5.7e-06 ***
supply_farmPrice     0.2070     0.0124   16.68  < 2e-16 ***
supply_trend         0.3007     0.0131   23.01  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( summary( fitsuri5r2 ), residCov = FALSE )

systemfit results 
method: iterated SUR 

convergence achieved after 21 iterations

        N DF SSR detRCov OLS-R2 McElroy-R2
system 40 35 576     121  0.384      0.637

        N DF   SSR   MSE RMSE    R2 Adj R2
demand 20 17  65.4  3.85 1.96 0.756  0.727
supply 20 16 510.8 31.92 5.65 0.235  0.091


SUR estimates for 'demand' (equation 1)
Model Formula: consump ~ price + income

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  98.2200     6.7593   14.53  2.2e-16 ***
price        -0.2669     0.0778   -3.43   0.0016 ** 
income        0.3011     0.0435    6.92  4.9e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1.962 on 17 degrees of freedom
Number of observations: 20 Degrees of Freedom: 17 
SSR: 65.447 MSE: 3.85 Root MSE: 1.962 
Multiple R-Squared: 0.756 Adjusted R-Squared: 0.727 


SUR estimates for 'supply' (equation 2)
Model Formula: price ~ income + farmPrice + trend

            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  90.2167    10.4342    8.65  3.3e-10 ***
income        0.2331     0.0778    3.00    0.005 ** 
farmPrice    -0.1666     0.1111   -1.50    0.143    
trend         0.3011     0.0435    6.92  4.9e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 5.65 on 16 degrees of freedom
Number of observations: 20 Degrees of Freedom: 16 
SSR: 510.75 MSE: 31.922 Root MSE: 5.65 
Multiple R-Squared: 0.235 Adjusted R-Squared: 0.091 

> 
> 
> ## ****************** residuals **************************
> print( residuals( fitsur1e2 ) )
   demand   supply
1   0.615  0.41825
2  -0.598 -0.00625
3   2.419  2.75649
4   1.609  1.81727
5   2.145  2.53566
6   1.332  1.53338
7   1.727  2.25581
8  -2.718 -3.56834
9  -1.229 -2.02733
10  2.088  2.53245
11 -0.789 -1.40733
12 -2.799 -3.01416
13 -1.831 -2.30119
14 -0.461  0.01871
15  1.974  2.93624
16 -3.291 -4.00484
17 -0.652 -0.45580
18 -1.899 -3.18683
19  2.030  2.18284
20  0.329  0.98497
> print( residuals( fitsur1e2$eq[[ 2 ]] ) )
       1        2        3        4        5        6        7        8 
 0.41825 -0.00625  2.75649  1.81727  2.53566  1.53338  2.25581 -3.56834 
       9       10       11       12       13       14       15       16 
-2.02733  2.53245 -1.40733 -3.01416 -2.30119  0.01871  2.93624 -4.00484 
      17       18       19       20 
-0.45580 -3.18683  2.18284  0.98497 
> 
> print( residuals( fitsur1w ) )
   demand  supply
1   0.696  0.4713
2  -0.561  0.0197
3   2.455  2.7782
4   1.643  1.8366
5   2.110  2.4709
6   1.304  1.4773
7   1.692  2.2079
8  -2.756 -3.6663
9  -1.253 -2.0985
10  2.078  2.5321
11 -0.675 -1.2705
12 -2.649 -2.8068
13 -1.706 -2.1305
14 -0.419  0.1150
15  1.887  2.8772
16 -3.364 -4.1013
17 -0.762 -0.5650
18 -1.918 -3.2183
19  1.978  2.1637
20  0.218  0.9075
> print( residuals( fitsur1w$eq[[ 2 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.4713  0.0197  2.7782  1.8366  2.4709  1.4773  2.2079 -3.6663 -2.0985  2.5321 
     11      12      13      14      15      16      17      18      19      20 
-1.2705 -2.8068 -2.1305  0.1150  2.8772 -4.1013 -0.5650 -3.2183  2.1637  0.9075 
> 
> print( residuals( fitsur2e ) )
   demand supply
1   0.325 -0.200
2  -0.729 -0.481
3   2.288  2.342
4   1.487  1.457
5   2.271  2.527
6   1.432  1.537
7   1.851  2.275
8  -2.582 -3.322
9  -1.143 -1.834
10  2.124  2.512
11 -1.193 -1.885
12 -3.332 -3.705
13 -2.280 -2.813
14 -0.614 -0.177
15  2.281  3.353
16 -3.032 -3.407
17 -0.260  0.233
18 -1.834 -2.737
19  2.215  2.632
20  0.726  1.692
> print( residuals( fitsur2e$eq[[ 1 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.325 -0.729  2.288  1.487  2.271  1.432  1.851 -2.582 -1.143  2.124 -1.193 
    12     13     14     15     16     17     18     19     20 
-3.332 -2.280 -0.614  2.281 -3.032 -0.260 -1.834  2.215  0.726 
> 
> print( residuals( fitsur3 ) )
   demand supply
1   0.366 -0.164
2  -0.711 -0.452
3   2.307  2.368
4   1.504  1.479
5   2.253  2.535
6   1.418  1.544
7   1.833  2.279
8  -2.601 -3.327
9  -1.155 -1.839
10  2.119  2.513
11 -1.136 -1.869
12 -3.257 -3.682
13 -2.217 -2.798
14 -0.593 -0.175
15  2.238  3.332
16 -3.069 -3.436
17 -0.315  0.199
18 -1.844 -2.764
19  2.189  2.604
20  0.671  1.654
> print( residuals( fitsur3$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
-0.164 -0.452  2.368  1.479  2.535  1.544  2.279 -3.327 -1.839  2.513 -1.869 
    12     13     14     15     16     17     18     19     20 
-3.682 -2.798 -0.175  3.332 -3.436  0.199 -2.764  2.604  1.654 
> 
> print( residuals( fitsur4r3 ) )
   demand supply
1   0.934  0.265
2  -0.721 -0.638
3   2.348  2.232
4   1.459  1.196
5   2.129  2.428
6   1.253  1.318
7   1.514  1.913
8  -3.185 -4.425
9  -1.097 -1.870
10  2.619  3.483
11  0.135 -0.260
12 -2.097 -2.275
13 -1.496 -2.085
14 -0.201  0.516
15  1.934  3.439
16 -3.491 -3.942
17 -0.229  0.913
18 -2.236 -3.503
19  1.440  1.736
20 -1.012 -0.441
> print( residuals( fitsur4r3$eq[[ 1 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.934 -0.721  2.348  1.459  2.129  1.253  1.514 -3.185 -1.097  2.619  0.135 
    12     13     14     15     16     17     18     19     20 
-2.097 -1.496 -0.201  1.934 -3.491 -0.229 -2.236  1.440 -1.012 
> 
> print( residuals( fitsur5 ) )
    demand  supply
1   1.0025  0.3219
2  -0.5449 -0.4286
3   2.4949  2.4014
4   1.6426  1.4106
5   2.0329  2.2956
6   1.2129  1.2545
7   1.5260  1.9262
8  -3.0444 -4.2868
9  -1.2406 -2.0779
10  2.3001  3.0973
11 -0.0303 -0.4650
12 -2.0337 -2.1783
13 -1.3041 -1.8356
14 -0.2155  0.5292
15  1.6991  3.1787
16 -3.5980 -4.0840
17 -0.7860  0.2371
18 -2.1070 -3.3544
19  1.6070  1.9694
20 -0.6134  0.0885
> print( residuals( fitsur5$eq[[ 2 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.3219 -0.4286  2.4014  1.4106  2.2956  1.2545  1.9262 -4.2868 -2.0779  3.0973 
     11      12      13      14      15      16      17      18      19      20 
-0.4650 -2.1783 -1.8356  0.5292  3.1787 -4.0840  0.2371 -3.3544  1.9694  0.0885 
> 
> print( residuals( fitsuri1r3 ) )
    demand supply
1   0.7952  0.123
2  -0.7614 -1.393
3   2.3039 -0.829
4   1.4250 -0.430
5   2.1792 -1.213
6   1.2979 -0.653
7   1.5795 -1.266
8  -3.0935  2.153
9  -1.0750  1.548
10  2.5876 -1.582
11 -0.0991  0.990
12 -2.3616  0.460
13 -1.6970  1.335
14 -0.2819 -1.054
15  2.0557 -2.339
16 -3.3745  1.734
17 -0.1140 -1.054
18 -2.1822  3.461
19  1.5612  0.318
20 -0.7450 -0.308
> print( residuals( fitsuri1r3$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.7952 -0.7614  2.3039  1.4250  2.1792  1.2979  1.5795 -3.0935 -1.0750  2.5876 
     11      12      13      14      15      16      17      18      19      20 
-0.0991 -2.3616 -1.6970 -0.2819  2.0557 -3.3745 -0.1140 -2.1822  1.5612 -0.7450 
> 
> print( residuals( fitsuri2 ) )
    demand  supply
1   1.1341   6.955
2  -0.0587   7.587
3   2.8946   6.701
4   2.1508   6.768
5   1.7798   1.930
6   1.1200   2.315
7   1.5920   2.230
8  -2.5983   4.980
9  -1.6414  -0.392
10  1.3742  -5.140
11 -0.6115  -3.174
12 -1.9764  -0.804
13 -0.8493   1.012
14 -0.2942  -3.282
15  1.0840  -7.042
16 -3.8500  -4.140
17 -2.3259 -12.628
18 -1.7141  -1.498
19  2.1409  -2.683
20  0.6494   0.305
> print( residuals( fitsuri2$eq[[ 2 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
  6.955   7.587   6.701   6.768   1.930   2.315   2.230   4.980  -0.392  -5.140 
     11      12      13      14      15      16      17      18      19      20 
 -3.174  -0.804   1.012  -3.282  -7.042  -4.140 -12.628  -1.498  -2.683   0.305 
> 
> print( residuals( fitsuri3e ) )
    demand  supply
1   1.1327   6.932
2  -0.0412   7.582
3   2.9085   6.695
4   2.1695   6.766
5   1.7721   1.915
6   1.1185   2.305
7   1.5978   2.229
8  -2.5761   4.982
9  -1.6564  -0.410
10  1.3358  -5.161
11 -0.6458  -3.196
12 -1.9868  -0.807
13 -0.8408   1.021
14 -0.3012  -3.275
15  1.0652  -7.037
16 -3.8545  -4.135
17 -2.3819 -12.646
18 -1.6959  -1.478
19  2.1679  -2.647
20  0.7125   0.366
> print( residuals( fitsuri3e$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 1.1327 -0.0412  2.9085  2.1695  1.7721  1.1185  1.5978 -2.5761 -1.6564  1.3358 
     11      12      13      14      15      16      17      18      19      20 
-0.6458 -1.9868 -0.8408 -0.3012  1.0652 -3.8545 -2.3819 -1.6959  2.1679  0.7125 
> 
> print( residuals( fitsurio4 ) )
    demand supply
1   0.9019  0.240
2  -0.7658 -0.697
3   2.3097  2.184
4   1.4141  1.136
5   2.1571  2.490
6   1.2670  1.356
7   1.5188  1.928
8  -3.2060 -4.430
9  -1.0620 -1.789
10  2.6864  3.589
11  0.1438 -0.248
12 -2.1427 -2.369
13 -1.5629 -2.210
14 -0.2076  0.479
15  2.0012  3.526
16 -3.4530 -3.876
17 -0.0902  1.129
18 -2.2581 -3.539
19  1.4172  1.671
20 -1.0688 -0.569
> print( residuals( fitsurio4$eq[[ 2 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.240 -0.697  2.184  1.136  2.490  1.356  1.928 -4.430 -1.789  3.589 -0.248 
    12     13     14     15     16     17     18     19     20 
-2.369 -2.210  0.479  3.526 -3.876  1.129 -3.539  1.671 -0.569 
> print( residuals( fitsuri4 ) )
    demand  supply
1   0.7146   5.775
2  -0.6076   7.198
3   2.4197   6.280
4   1.5931   6.531
5   2.1268   1.465
6   1.3043   2.021
7   1.6685   2.261
8  -2.8295   5.275
9  -1.2125  -0.890
10  2.1921  -5.945
11 -0.5521  -4.407
12 -2.5920  -1.482
13 -1.7095   0.895
14 -0.3902  -3.220
15  1.9290  -6.617
16 -3.3627  -3.607
17 -0.6125 -12.896
18 -1.9758  -0.562
19  1.8877  -1.126
20  0.0085   3.051
> print( residuals( fitsuri4$eq[[ 2 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
  5.775   7.198   6.280   6.531   1.465   2.021   2.261   5.275  -0.890  -5.945 
     11      12      13      14      15      16      17      18      19      20 
 -4.407  -1.482   0.895  -3.220  -6.617  -3.607 -12.896  -0.562  -1.126   3.051 
> 
> print( residuals( fitsuri4w ) )
     demand  supply
1   0.71463   5.775
2  -0.60754   7.198
3   2.41972   6.280
4   1.59308   6.531
5   2.12679   1.465
6   1.30430   2.021
7   1.66846   2.262
8  -2.82945   5.275
9  -1.21248  -0.890
10  2.19209  -5.946
11 -0.55215  -4.407
12 -2.59194  -1.482
13 -1.70948   0.895
14 -0.39018  -3.220
15  1.92897  -6.617
16 -3.36276  -3.607
17 -0.61256 -12.896
18 -1.97579  -0.562
19  1.88776  -1.126
20  0.00854   3.051
> print( residuals( fitsuri4w$eq[[ 2 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
  5.775   7.198   6.280   6.531   1.465   2.021   2.262   5.275  -0.890  -5.946 
     11      12      13      14      15      16      17      18      19      20 
 -4.407  -1.482   0.895  -3.220  -6.617  -3.607 -12.896  -0.562  -1.126   3.051 
> 
> print( residuals( fitsurio5r2 ) )
   demand  supply
1   0.655  0.0269
2  -1.456 -1.5152
3   1.737  1.5210
4   0.696  0.3020
5   2.530  2.9397
6   1.417  1.5469
7   1.459  1.8336
8  -3.779 -5.0391
9  -0.498 -1.0416
10  3.950  5.0761
11  0.836  0.6398
12 -2.347 -2.5930
13 -2.286 -3.0468
14 -0.137  0.5081
15  2.908  4.5036
16 -3.050 -3.3786
17  2.091  3.6824
18 -2.775 -4.1107
19  0.737  0.7819
20 -2.686 -2.6370
> print( residuals( fitsurio5r2$eq[[ 1 ]] ) )
     1      2      3      4      5      6      7      8      9     10     11 
 0.655 -1.456  1.737  0.696  2.530  1.417  1.459 -3.779 -0.498  3.950  0.836 
    12     13     14     15     16     17     18     19     20 
-2.347 -2.286 -0.137  2.908 -3.050  2.091 -2.775  0.737 -2.686 
> print( residuals( fitsuri5r2 ) )
    demand  supply
1   0.7199   5.756
2  -0.5979   7.202
3   2.4279   6.281
4   1.6030   6.535
5   2.1212   1.472
6   1.3017   2.029
7   1.6683   2.275
8  -2.8233   5.299
9  -1.2202  -0.892
10  2.1760  -5.965
11 -0.5578  -4.458
12 -2.5854  -1.528
13 -1.6970   0.866
14 -0.3899  -3.237
15  1.9153  -6.607
16 -3.3698  -3.593
17 -0.6429 -12.902
18 -1.9698  -0.549
19  1.8949  -1.099
20  0.0259   3.114
> print( residuals( fitsuri5r2$eq[[ 1 ]] ) )
      1       2       3       4       5       6       7       8       9      10 
 0.7199 -0.5979  2.4279  1.6030  2.1212  1.3017  1.6683 -2.8233 -1.2202  2.1760 
     11      12      13      14      15      16      17      18      19      20 
-0.5578 -2.5854 -1.6970 -0.3899  1.9153 -3.3698 -0.6429 -1.9698  1.8949  0.0259 
> 
> 
> ## *************** coefficients *********************
> print( round( coef( fitsur1r3 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            99.225             -0.268              0.292             62.958 
      supply_price   supply_farmPrice       supply_trend 
             0.144              0.207              0.333 
> print( round( coef( fitsur1r3$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
     62.958       0.144       0.207       0.333 
> 
> print( round( coef( fitsuri2 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
           107.368             -0.394              0.338             85.045 
     supply_income   supply_farmPrice       supply_trend 
             0.312             -0.197              0.338 
> print( round( coef( fitsuri2$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
    107.368      -0.394       0.338 
> 
> print( round( coef( fitsur2we ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            98.754             -0.234              0.261             67.888 
      supply_price   supply_farmPrice       supply_trend 
             0.132              0.177              0.261 
> print( round( coef( fitsur2we$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
     98.754      -0.234       0.261 
> 
> print( round( coef( fitsur3 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            98.841             -0.240              0.267             67.428 
      supply_price   supply_farmPrice       supply_trend 
             0.133              0.179              0.267 
> print( round( coef( fitsur3, modified.regMat = TRUE ), digits = 6 ) )
    C1     C2     C3     C4     C5     C6 
98.841 -0.240  0.267 67.428  0.133  0.179 
> print( round( coef( fitsur3$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)       price   farmPrice       trend 
     67.428       0.133       0.179       0.267 
> 
> print( round( coef( fitsur4r2 ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            92.527             -0.230              0.322             48.701 
      supply_price   supply_farmPrice       supply_trend 
             0.270              0.226              0.322 
> print( round( coef( fitsur4r2$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
     92.527      -0.230       0.322 
> 
> print( round( coef( fitsuri5e ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            97.630             -0.258              0.298             89.544 
     supply_income   supply_farmPrice       supply_trend 
             0.242             -0.169              0.298 
> print( round( coef( fitsuri5e, modified.regMat = TRUE ), digits = 6 ) )
    C1     C2     C3     C4     C5     C6 
97.630 -0.258  0.298 89.544  0.242 -0.169 
> print( round( coef( fitsuri5e$eq[[ 2 ]] ), digits = 6 ) )
(Intercept)      income   farmPrice       trend 
     89.544       0.242      -0.169       0.298 
> 
> print( round( coef( fitsur5w ), digits = 6 ) )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
            96.442             -0.275              0.328             52.576 
      supply_price   supply_farmPrice       supply_trend 
             0.225              0.232              0.328 
> print( round( coef( fitsur5w, modified.regMat = TRUE ), digits = 6 ) )
    C1     C2     C3     C4     C5     C6 
96.442 -0.275  0.328 52.576  0.225  0.232 
> print( round( coef( fitsur5w$eq[[ 1 ]] ), digits = 6 ) )
(Intercept)       price      income 
     96.442      -0.275       0.328 
> 
> 
> ## *************** coefficients with stats *********************
> print( round( coef( summary( fitsur1r3 ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   99.225     7.5129   13.21 0.000000
demand_price         -0.268     0.0878   -3.05 0.007262
demand_income         0.292     0.0408    7.15 0.000002
supply_(Intercept)   62.958    10.9850    5.73 0.000031
supply_price          0.144     0.0944    1.53 0.145991
supply_farmPrice      0.207     0.0386    5.37 0.000062
supply_trend          0.333     0.0644    5.18 0.000092
> print( round( coef( summary( fitsur1r3$eq[[ 2 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   62.958    10.9850    5.73 0.000031
price          0.144     0.0944    1.53 0.145991
farmPrice      0.207     0.0386    5.37 0.000062
trend          0.333     0.0644    5.18 0.000092
> 
> print( round( coef( summary( fitsuri2, useDfSys = FALSE ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)  107.368     7.4986   14.32 0.000000
demand_price         -0.394     0.0912   -4.33 0.000459
demand_income         0.338     0.0466    7.25 0.000001
supply_(Intercept)   85.045    12.1069    7.02 0.000003
supply_income         0.312     0.1233    2.53 0.022132
supply_farmPrice     -0.197     0.1157   -1.70 0.107654
supply_trend          0.338     0.0466    7.25 0.000002
> print( round( coef( summary( fitsuri2$eq[[ 1 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)  107.368     7.4986   14.32 0.000000
price         -0.394     0.0912   -4.33 0.000459
income         0.338     0.0466    7.25 0.000001
> 
> print( round( coef( summary( fitsur3 ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   98.841     7.5581   13.08 0.000000
demand_price         -0.240     0.0860   -2.79 0.008613
demand_income         0.267     0.0368    7.25 0.000000
supply_(Intercept)   67.428    10.6647    6.32 0.000000
supply_price          0.133     0.0953    1.40 0.171250
supply_farmPrice      0.179     0.0337    5.33 0.000006
supply_trend          0.267     0.0368    7.25 0.000000
> print( round( coef( summary( fitsur3 ), modified.regMat = TRUE ), digits = 6 ) )
   Estimate Std. Error t value Pr(>|t|)
C1   98.841     7.5581   13.08 0.000000
C2   -0.240     0.0860   -2.79 0.008613
C3    0.267     0.0368    7.25 0.000000
C4   67.428    10.6647    6.32 0.000000
C5    0.133     0.0953    1.40 0.171250
C6    0.179     0.0337    5.33 0.000006
> print( round( coef( summary( fitsur3$eq[[ 2 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   67.428    10.6647    6.32 0.000000
price          0.133     0.0953    1.40 0.171250
farmPrice      0.179     0.0337    5.33 0.000006
trend          0.267     0.0368    7.25 0.000000
> 
> print( round( coef( summary( fitsuri3we ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)  107.806     6.9270   15.56 0.000000
demand_price         -0.399     0.0843   -4.73 0.000038
demand_income         0.338     0.0431    7.84 0.000000
supply_(Intercept)   85.107    10.8288    7.86 0.000000
supply_income         0.311     0.1101    2.82 0.007950
supply_farmPrice     -0.196     0.1034   -1.89 0.066671
supply_trend          0.338     0.0431    7.84 0.000000
> print( round( coef( summary( fitsuri3we ), modified.regMat = TRUE ), digits = 6 ) )
   Estimate Std. Error t value Pr(>|t|)
C1  107.806     6.9270   15.56 0.000000
C2   -0.399     0.0843   -4.73 0.000038
C3    0.338     0.0431    7.84 0.000000
C4   85.107    10.8288    7.86 0.000000
C5    0.311     0.1101    2.82 0.007950
C6   -0.196     0.1034   -1.89 0.066671
> print( round( coef( summary( fitsuri3we$eq[[ 1 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)  107.806     6.9270   15.56  0.0e+00
price         -0.399     0.0843   -4.73  3.8e-05
income         0.338     0.0431    7.84  0.0e+00
> 
> print( round( coef( summary( fitsur4r2 ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   92.527     7.2896   12.69  0.00000
demand_price         -0.230     0.0827   -2.79  0.00855
demand_income         0.322     0.0166   19.37  0.00000
supply_(Intercept)   48.701     7.4034    6.58  0.00000
supply_price          0.270     0.0827    3.26  0.00248
supply_farmPrice      0.226     0.0166   13.62  0.00000
supply_trend          0.322     0.0166   19.37  0.00000
> print( round( coef( summary( fitsur4r2$eq[[ 1 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   92.527     7.2896   12.69  0.00000
price         -0.230     0.0827   -2.79  0.00855
income         0.322     0.0166   19.37  0.00000
> 
> print( round( coef( summary( fitsur4we ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   96.941     6.8894   14.07 0.000000
demand_price         -0.281     0.0766   -3.67 0.000796
demand_income         0.329     0.0181   18.18 0.000000
supply_(Intercept)   52.996     7.0652    7.50 0.000000
supply_price          0.219     0.0766    2.85 0.007215
supply_farmPrice      0.234     0.0183   12.76 0.000000
supply_trend          0.329     0.0181   18.18 0.000000
> print( round( coef( summary( fitsur4we$eq[[ 2 ]] ) ), digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   52.996     7.0652    7.50  0.00000
price          0.219     0.0766    2.85  0.00722
farmPrice      0.234     0.0183   12.76  0.00000
trend          0.329     0.0181   18.18  0.00000
> 
> print( round( coef( summary( fitsuri5e, useDfSys = FALSE ) ), digits = 6 ) )
                   Estimate Std. Error t value Pr(>|t|)
demand_(Intercept)   97.630     6.1560   15.86 0.000000
demand_price         -0.258     0.0709   -3.63 0.002060
demand_income         0.298     0.0403    7.38 0.000001
supply_(Intercept)   89.544     9.3372    9.59 0.000000
supply_income         0.242     0.0709    3.42 0.003516
supply_farmPrice     -0.169     0.0988   -1.71 0.107123
supply_trend          0.298     0.0403    7.38 0.000002
> print( round( coef( summary( fitsuri5e, useDfSys = FALSE ),
+    modified.regMat = TRUE ), digits = 6 ) )
   Estimate Std. Error t value Pr(>|t|)
C1   97.630     6.1560   15.86       NA
C2   -0.258     0.0709   -3.63       NA
C3    0.298     0.0403    7.38       NA
C4   89.544     9.3372    9.59       NA
C5    0.242     0.0709    3.42       NA
C6   -0.169     0.0988   -1.71       NA
> print( round( coef( summary( fitsuri5e$eq[[ 2 ]], useDfSys = FALSE ) ),
+    digits = 6 ) )
            Estimate Std. Error t value Pr(>|t|)
(Intercept)   89.544     9.3372    9.59 0.000000
income         0.242     0.0709    3.42 0.003516
farmPrice     -0.169     0.0988   -1.71 0.107123
trend          0.298     0.0403    7.38 0.000002
> 
> 
> ## *********** variance covariance matrix of the coefficients *******
> print( round( vcov( fitsur1e2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            56.4403     -0.58751      0.025716
demand_price                  -0.5875      0.00769     -0.001866
demand_income                  0.0257     -0.00187      0.001650
supply_(Intercept)            61.0550     -0.40370     -0.209805
supply_price                  -0.6325      0.00579      0.000546
supply_farmPrice               0.0215     -0.00156      0.001379
supply_trend                   0.0327     -0.00237      0.002095
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)             61.055    -0.632489         0.021495
demand_price                   -0.404     0.005792        -0.001559
demand_income                  -0.210     0.000546         0.001379
supply_(Intercept)            120.418    -0.954714        -0.221454
supply_price                   -0.955     0.008900         0.000584
supply_farmPrice               -0.221     0.000584         0.001476
supply_trend                   -0.309     0.000772         0.001950
                   supply_trend
demand_(Intercept)     0.032652
demand_price          -0.002369
demand_income          0.002095
supply_(Intercept)    -0.308674
supply_price           0.000772
supply_farmPrice       0.001950
supply_trend           0.004100
> print( round( vcov( fitsur1e2$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     56.4403 -0.58751  0.02572
price           -0.5875  0.00769 -0.00187
income           0.0257 -0.00187  0.00165
> 
> print( round( vcov( fitsur1r3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            56.4432     -0.58772      0.025901
demand_price                  -0.5877      0.00771     -0.001879
demand_income                  0.0259     -0.00188      0.001662
supply_(Intercept)            60.8607     -0.40086     -0.210729
supply_price                  -0.6307      0.00577      0.000548
supply_farmPrice               0.0216     -0.00157      0.001385
supply_trend                   0.0328     -0.00238      0.002104
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)             60.861    -0.630659         0.021589
demand_price                   -0.401     0.005771        -0.001566
demand_income                  -0.211     0.000548         0.001385
supply_(Intercept)            120.671    -0.955395        -0.223176
supply_price                   -0.955     0.008902         0.000589
supply_farmPrice               -0.223     0.000589         0.001487
supply_trend                   -0.310     0.000776         0.001959
                   supply_trend
demand_(Intercept)     0.032796
demand_price          -0.002379
demand_income          0.002104
supply_(Intercept)    -0.310422
supply_price           0.000776
supply_farmPrice       0.001959
supply_trend           0.004149
> print( round( vcov( fitsur1r3$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     120.671 -0.955395 -0.223176 -0.310422
price            -0.955  0.008902  0.000589  0.000776
farmPrice        -0.223  0.000589  0.001487  0.001959
trend            -0.310  0.000776  0.001959  0.004149
> 
> print( round( vcov( fitsur2e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            48.5631     -0.50188      0.018400
demand_price                  -0.5019      0.00632     -0.001335
demand_income                  0.0184     -0.00134      0.001180
supply_(Intercept)            53.2014     -0.39283     -0.140738
supply_price                  -0.5462      0.00510      0.000373
supply_farmPrice               0.0147     -0.00107      0.000942
supply_trend                   0.0184     -0.00134      0.001180
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)             53.201    -0.546194         0.014689
demand_price                   -0.393     0.005097        -0.001066
demand_income                  -0.141     0.000373         0.000942
supply_(Intercept)             91.607    -0.766739        -0.136644
supply_price                   -0.767     0.007271         0.000368
supply_farmPrice               -0.137     0.000368         0.000931
supply_trend                   -0.141     0.000373         0.000942
                   supply_trend
demand_(Intercept)     0.018400
demand_price          -0.001335
demand_income          0.001180
supply_(Intercept)    -0.140738
supply_price           0.000373
supply_farmPrice       0.000942
supply_trend           0.001180
> print( round( vcov( fitsur2e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     48.5631 -0.50188  0.01840
price           -0.5019  0.00632 -0.00134
income           0.0184 -0.00134  0.00118
> 
> print( round( vcov( fitsur3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            57.1254     -0.58989       0.02116
demand_price                  -0.5899      0.00739      -0.00153
demand_income                  0.0212     -0.00153       0.00136
supply_(Intercept)            64.5952     -0.48211      -0.16560
supply_price                  -0.6626      0.00619       0.00044
supply_farmPrice               0.0173     -0.00126       0.00111
supply_trend                   0.0212     -0.00153       0.00136
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)             64.595    -0.662552         0.017322
demand_price                   -0.482     0.006195        -0.001257
demand_income                  -0.166     0.000440         0.001111
supply_(Intercept)            113.736    -0.956493        -0.165927
supply_price                   -0.956     0.009084         0.000448
supply_farmPrice               -0.166     0.000448         0.001133
supply_trend                   -0.166     0.000440         0.001111
                   supply_trend
demand_(Intercept)      0.02116
demand_price           -0.00153
demand_income           0.00136
supply_(Intercept)     -0.16560
supply_price            0.00044
supply_farmPrice        0.00111
supply_trend            0.00136
> print( round( vcov( fitsur3, modified.regMat = TRUE ), digits = 6 ) )
        C1       C2       C3      C4        C5        C6
C1 57.1254 -0.58989  0.02116  64.595 -0.662552  0.017322
C2 -0.5899  0.00739 -0.00153  -0.482  0.006195 -0.001257
C3  0.0212 -0.00153  0.00136  -0.166  0.000440  0.001111
C4 64.5952 -0.48211 -0.16560 113.736 -0.956493 -0.165927
C5 -0.6626  0.00619  0.00044  -0.956  0.009084  0.000448
C6  0.0173 -0.00126  0.00111  -0.166  0.000448  0.001133
> print( round( vcov( fitsur3$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice    trend
(Intercept)     113.736 -0.956493 -0.165927 -0.16560
price            -0.956  0.009084  0.000448  0.00044
farmPrice        -0.166  0.000448  0.001133  0.00111
trend            -0.166  0.000440  0.001111  0.00136
> 
> print( round( vcov( fitsur3w ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            56.7267     -0.58513      0.020348
demand_price                  -0.5851      0.00729     -0.001476
demand_income                  0.0203     -0.00148      0.001305
supply_(Intercept)            64.8820     -0.48999     -0.160451
supply_price                  -0.6648      0.00623      0.000426
supply_farmPrice               0.0168     -0.00122      0.001077
supply_trend                   0.0203     -0.00148      0.001305
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)             64.882    -0.664819         0.016795
demand_price                   -0.490     0.006231        -0.001219
demand_income                  -0.160     0.000426         0.001077
supply_(Intercept)            113.543    -0.959668        -0.161181
supply_price                   -0.960     0.009129         0.000435
supply_farmPrice               -0.161     0.000435         0.001100
supply_trend                   -0.160     0.000426         0.001077
                   supply_trend
demand_(Intercept)     0.020348
demand_price          -0.001476
demand_income          0.001305
supply_(Intercept)    -0.160451
supply_price           0.000426
supply_farmPrice       0.001077
supply_trend           0.001305
> print( round( vcov( fitsur3w, modified.regMat = TRUE ), digits = 6 ) )
        C1       C2        C3      C4        C5        C6
C1 56.7267 -0.58513  0.020348  64.882 -0.664819  0.016795
C2 -0.5851  0.00729 -0.001476  -0.490  0.006231 -0.001219
C3  0.0203 -0.00148  0.001305  -0.160  0.000426  0.001077
C4 64.8820 -0.48999 -0.160451 113.543 -0.959668 -0.161181
C5 -0.6648  0.00623  0.000426  -0.960  0.009129  0.000435
C6  0.0168 -0.00122  0.001077  -0.161  0.000435  0.001100
> print( round( vcov( fitsur3w$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     56.7267 -0.58513  0.02035
price           -0.5851  0.00729 -0.00148
income           0.0203 -0.00148  0.00130
> 
> print( round( vcov( fitsur4r2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            53.1384    -0.593514      0.065746
demand_price                  -0.5935     0.006838     -0.000927
demand_income                  0.0657    -0.000927      0.000276
supply_(Intercept)            53.3903    -0.599312      0.069540
supply_price                  -0.5935     0.006838     -0.000927
supply_farmPrice               0.0570    -0.000775      0.000210
supply_trend                   0.0657    -0.000927      0.000276
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            53.3903    -0.593514         0.057048
demand_price                  -0.5993     0.006838        -0.000775
demand_income                  0.0695    -0.000927         0.000210
supply_(Intercept)            54.8108    -0.599312         0.048653
supply_price                  -0.5993     0.006838        -0.000775
supply_farmPrice               0.0487    -0.000775         0.000276
supply_trend                   0.0695    -0.000927         0.000210
                   supply_trend
demand_(Intercept)     0.065746
demand_price          -0.000927
demand_income          0.000276
supply_(Intercept)     0.069540
supply_price          -0.000927
supply_farmPrice       0.000210
supply_trend           0.000276
> print( round( vcov( fitsur4r2$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)     53.1384 -0.593514  0.065746
price           -0.5935  0.006838 -0.000927
income           0.0657 -0.000927  0.000276
> 
> print( round( vcov( fitsur5e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            47.8867    -0.516747      0.040579
demand_price                  -0.5167     0.005886     -0.000738
demand_income                  0.0406    -0.000738      0.000340
supply_(Intercept)            48.2187    -0.526670      0.047594
supply_price                  -0.5167     0.005886     -0.000738
supply_farmPrice               0.0334    -0.000562      0.000234
supply_trend                   0.0406    -0.000738      0.000340
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            48.2187    -0.516747         0.033361
demand_price                  -0.5267     0.005886        -0.000562
demand_income                  0.0476    -0.000738         0.000234
supply_(Intercept)            50.4739    -0.526670         0.020109
supply_price                  -0.5267     0.005886        -0.000562
supply_farmPrice               0.0201    -0.000562         0.000348
supply_trend                   0.0476    -0.000738         0.000234
                   supply_trend
demand_(Intercept)     0.040579
demand_price          -0.000738
demand_income          0.000340
supply_(Intercept)     0.047594
supply_price          -0.000738
supply_farmPrice       0.000234
supply_trend           0.000340
> print( round( vcov( fitsur5e, modified.regMat = TRUE ), digits = 6 ) )
        C1        C2        C3      C4        C5        C6
C1 47.8867 -0.516747  0.040579 48.2187 -0.516747  0.033361
C2 -0.5167  0.005886 -0.000738 -0.5267  0.005886 -0.000562
C3  0.0406 -0.000738  0.000340  0.0476 -0.000738  0.000234
C4 48.2187 -0.526670  0.047594 50.4739 -0.526670  0.020109
C5 -0.5167  0.005886 -0.000738 -0.5267  0.005886 -0.000562
C6  0.0334 -0.000562  0.000234  0.0201 -0.000562  0.000348
> print( round( vcov( fitsur5e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     50.4739 -0.526670  0.020109  0.047594
price           -0.5267  0.005886 -0.000562 -0.000738
farmPrice        0.0201 -0.000562  0.000348  0.000234
trend            0.0476 -0.000738  0.000234  0.000340
> 
> print( round( vcov( fitsuri1r3 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            54.5505     -0.55698      0.013891
demand_price                  -0.5570      0.00770     -0.002185
demand_income                  0.0139     -0.00218      0.002098
supply_(Intercept)            -2.7032     -0.08733      0.115993
supply_income                  0.2249     -0.00185     -0.000411
supply_farmPrice              -0.1721      0.00238     -0.000675
supply_trend                  -0.2597      0.00359     -0.001019
                   supply_(Intercept) supply_income supply_farmPrice
demand_(Intercept)            -2.7032      0.224902        -0.172110
demand_price                  -0.0873     -0.001848         0.002379
demand_income                  0.1160     -0.000411        -0.000675
supply_(Intercept)            11.4659     -0.058750        -0.051728
supply_income                 -0.0587      0.001787        -0.001018
supply_farmPrice              -0.0517     -0.001018         0.001368
supply_trend                  -0.0578     -0.001631         0.001794
                   supply_trend
demand_(Intercept)     -0.25970
demand_price            0.00359
demand_income          -0.00102
supply_(Intercept)     -0.05784
supply_income          -0.00163
supply_farmPrice        0.00179
supply_trend            0.00416
> print( round( vcov( fitsuri1r3$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price   income
(Intercept)     54.5505 -0.55698  0.01389
price           -0.5570  0.00770 -0.00218
income           0.0139 -0.00218  0.00210
> 
> print( round( vcov( fitsuri2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            56.2287     -0.59260      0.033216
demand_price                  -0.5926      0.00831     -0.002451
demand_income                  0.0332     -0.00245      0.002173
supply_(Intercept)             5.9548      0.14141     -0.203885
supply_income                 -0.2516      0.00201      0.000518
supply_farmPrice               0.1910     -0.00323      0.001351
supply_trend                   0.0332     -0.00245      0.002173
                   supply_(Intercept) supply_income supply_farmPrice
demand_(Intercept)              5.955     -0.251647          0.19097
demand_price                    0.141      0.002011         -0.00323
demand_income                  -0.204      0.000518          0.00135
supply_(Intercept)            146.577     -0.828954         -0.64122
supply_income                  -0.829      0.015214         -0.00683
supply_farmPrice               -0.641     -0.006835          0.01339
supply_trend                   -0.204      0.000518          0.00135
                   supply_trend
demand_(Intercept)     0.033216
demand_price          -0.002451
demand_income          0.002173
supply_(Intercept)    -0.203885
supply_income          0.000518
supply_farmPrice       0.001351
supply_trend           0.002173
> print( round( vcov( fitsuri2$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)    income farmPrice     trend
(Intercept)     146.577 -0.828954  -0.64122 -0.203885
income           -0.829  0.015214  -0.00683  0.000518
farmPrice        -0.641 -0.006835   0.01339  0.001351
trend            -0.204  0.000518   0.00135  0.002173
> 
> print( round( vcov( fitsuri3e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            47.9834     -0.50592      0.028570
demand_price                  -0.5059      0.00710     -0.002098
demand_income                  0.0286     -0.00210      0.001859
supply_(Intercept)             4.9860      0.11975     -0.172089
supply_income                 -0.2118      0.00170      0.000428
supply_farmPrice               0.1609     -0.00273      0.001147
supply_trend                   0.0286     -0.00210      0.001859
                   supply_(Intercept) supply_income supply_farmPrice
demand_(Intercept)              4.986     -0.211763          0.16090
demand_price                    0.120      0.001700         -0.00273
demand_income                  -0.172      0.000428          0.00115
supply_(Intercept)            117.261     -0.661134         -0.51405
supply_income                  -0.661      0.012132         -0.00545
supply_farmPrice               -0.514     -0.005450          0.01070
supply_trend                   -0.172      0.000428          0.00115
                   supply_trend
demand_(Intercept)     0.028570
demand_price          -0.002098
demand_income          0.001859
supply_(Intercept)    -0.172089
supply_income          0.000428
supply_farmPrice       0.001147
supply_trend           0.001859
> print( round( vcov( fitsuri3e, modified.regMat = TRUE ), digits = 6 ) )
        C1       C2        C3      C4        C5       C6
C1 47.9834 -0.50592  0.028570   4.986 -0.211763  0.16090
C2 -0.5059  0.00710 -0.002098   0.120  0.001700 -0.00273
C3  0.0286 -0.00210  0.001859  -0.172  0.000428  0.00115
C4  4.9860  0.11975 -0.172089 117.261 -0.661134 -0.51405
C5 -0.2118  0.00170  0.000428  -0.661  0.012132 -0.00545
C6  0.1609 -0.00273  0.001147  -0.514 -0.005450  0.01070
> print( round( vcov( fitsuri3e$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)   price   income
(Intercept)     47.9834 -0.5059  0.02857
price           -0.5059  0.0071 -0.00210
income           0.0286 -0.0021  0.00186
> 
> print( round( vcov( fitsurio4e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            47.0268    -0.525375      0.058300
demand_price                  -0.5254     0.006074     -0.000842
demand_income                  0.0583    -0.000842      0.000266
supply_(Intercept)            47.2346    -0.530682      0.061997
supply_price                  -0.5254     0.006074     -0.000842
supply_farmPrice               0.0508    -0.000704      0.000201
supply_trend                   0.0583    -0.000842      0.000266
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            47.2346    -0.525375         0.050751
demand_price                  -0.5307     0.006074        -0.000704
demand_income                  0.0620    -0.000842         0.000201
supply_(Intercept)            48.6183    -0.530682         0.042182
supply_price                  -0.5307     0.006074        -0.000704
supply_farmPrice               0.0422    -0.000704         0.000270
supply_trend                   0.0620    -0.000842         0.000201
                   supply_trend
demand_(Intercept)     0.058300
demand_price          -0.000842
demand_income          0.000266
supply_(Intercept)     0.061997
supply_price          -0.000842
supply_farmPrice       0.000201
supply_trend           0.000266
> print( round( vcov( fitsurio4e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     48.6183 -0.530682  0.042182  0.061997
price           -0.5307  0.006074 -0.000704 -0.000842
farmPrice        0.0422 -0.000704  0.000270  0.000201
trend            0.0620 -0.000842  0.000201  0.000266
> print( round( vcov( fitsuri4e ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            37.8960     -0.36274      -0.01487
demand_price                  -0.3627      0.00503      -0.00144
demand_income                 -0.0149     -0.00144       0.00163
supply_(Intercept)            19.0822     -0.20611       0.01617
supply_income                 -0.3627      0.00503      -0.00144
supply_farmPrice               0.1707     -0.00279       0.00111
supply_trend                  -0.0149     -0.00144       0.00163
                   supply_(Intercept) supply_income supply_farmPrice
demand_(Intercept)            19.0822      -0.36274          0.17073
demand_price                  -0.2061       0.00503         -0.00279
demand_income                  0.0162      -0.00144          0.00111
supply_(Intercept)            87.1827      -0.20611         -0.68294
supply_income                 -0.2061       0.00503         -0.00279
supply_farmPrice              -0.6829      -0.00279          0.00976
supply_trend                   0.0162      -0.00144          0.00111
                   supply_trend
demand_(Intercept)     -0.01487
demand_price           -0.00144
demand_income           0.00163
supply_(Intercept)      0.01617
supply_income          -0.00144
supply_farmPrice        0.00111
supply_trend            0.00163
> print( round( vcov( fitsuri4e$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)   income farmPrice    trend
(Intercept)     87.1827 -0.20611  -0.68294  0.01617
income          -0.2061  0.00503  -0.00279 -0.00144
farmPrice       -0.6829 -0.00279   0.00976  0.00111
trend            0.0162 -0.00144   0.00111  0.00163
> 
> print( round( vcov( fitsurio5r2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            51.3196    -0.579747      0.070528
demand_price                  -0.5797     0.006646     -0.000872
demand_income                  0.0705    -0.000872      0.000171
supply_(Intercept)            51.5518    -0.583025      0.072036
supply_price                  -0.5797     0.006646     -0.000872
supply_farmPrice               0.0617    -0.000751      0.000138
supply_trend                   0.0705    -0.000872      0.000171
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            51.5518    -0.579747         0.061658
demand_price                  -0.5830     0.006646        -0.000751
demand_income                  0.0720    -0.000872         0.000138
supply_(Intercept)            52.2109    -0.583025         0.058794
supply_price                  -0.5830     0.006646        -0.000751
supply_farmPrice               0.0588    -0.000751         0.000154
supply_trend                   0.0720    -0.000872         0.000138
                   supply_trend
demand_(Intercept)     0.070528
demand_price          -0.000872
demand_income          0.000171
supply_(Intercept)     0.072036
supply_price          -0.000872
supply_farmPrice       0.000138
supply_trend           0.000171
> print( round( vcov( fitsurio5r2, modified.regMat = TRUE ), digits = 6 ) )
        C1        C2        C3      C4        C5        C6
C1 51.3196 -0.579747  0.070528 51.5518 -0.579747  0.061658
C2 -0.5797  0.006646 -0.000872 -0.5830  0.006646 -0.000751
C3  0.0705 -0.000872  0.000171  0.0720 -0.000872  0.000138
C4 51.5518 -0.583025  0.072036 52.2109 -0.583025  0.058794
C5 -0.5797  0.006646 -0.000872 -0.5830  0.006646 -0.000751
C6  0.0617 -0.000751  0.000138  0.0588 -0.000751  0.000154
> print( round( vcov( fitsurio5r2$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)     price    income
(Intercept)     51.3196 -0.579747  0.070528
price           -0.5797  0.006646 -0.000872
income           0.0705 -0.000872  0.000171
> print( round( vcov( fitsuri5r2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            45.6881     -0.44008      -0.01517
demand_price                  -0.4401      0.00605      -0.00170
demand_income                 -0.0152     -0.00170       0.00190
supply_(Intercept)            22.8172     -0.23903       0.01186
supply_income                 -0.4401      0.00605      -0.00170
supply_farmPrice               0.2104     -0.00345       0.00138
supply_trend                  -0.0152     -0.00170       0.00190
                   supply_(Intercept) supply_income supply_farmPrice
demand_(Intercept)            22.8172      -0.44008          0.21042
demand_price                  -0.2390       0.00605         -0.00345
demand_income                  0.0119      -0.00170          0.00138
supply_(Intercept)           108.8722      -0.23903         -0.87024
supply_income                 -0.2390       0.00605         -0.00345
supply_farmPrice              -0.8702      -0.00345          0.01234
supply_trend                   0.0119      -0.00170          0.00138
                   supply_trend
demand_(Intercept)     -0.01517
demand_price           -0.00170
demand_income           0.00190
supply_(Intercept)      0.01186
supply_income          -0.00170
supply_farmPrice        0.00138
supply_trend            0.00190
> print( round( vcov( fitsuri5r2, modified.regMat = TRUE ), digits = 6 ) )
        C1       C2       C3       C4       C5       C6
C1 45.6881 -0.44008 -0.01517  22.8172 -0.44008  0.21042
C2 -0.4401  0.00605 -0.00170  -0.2390  0.00605 -0.00345
C3 -0.0152 -0.00170  0.00190   0.0119 -0.00170  0.00138
C4 22.8172 -0.23903  0.01186 108.8722 -0.23903 -0.87024
C5 -0.4401  0.00605 -0.00170  -0.2390  0.00605 -0.00345
C6  0.2104 -0.00345  0.00138  -0.8702 -0.00345  0.01234
> print( round( vcov( fitsuri5r2$eq[[ 1 ]] ), digits = 6 ) )
            (Intercept)    price  income
(Intercept)     45.6881 -0.44008 -0.0152
price           -0.4401  0.00605 -0.0017
income          -0.0152 -0.00170  0.0019
> 
> print( round( vcov( fitsurio5wr2 ), digits = 6 ) )
                   demand_(Intercept) demand_price demand_income
demand_(Intercept)            51.3196    -0.579747      0.070528
demand_price                  -0.5797     0.006646     -0.000872
demand_income                  0.0705    -0.000872      0.000171
supply_(Intercept)            51.5518    -0.583025      0.072036
supply_price                  -0.5797     0.006646     -0.000872
supply_farmPrice               0.0617    -0.000751      0.000138
supply_trend                   0.0705    -0.000872      0.000171
                   supply_(Intercept) supply_price supply_farmPrice
demand_(Intercept)            51.5518    -0.579747         0.061658
demand_price                  -0.5830     0.006646        -0.000751
demand_income                  0.0720    -0.000872         0.000138
supply_(Intercept)            52.2109    -0.583025         0.058794
supply_price                  -0.5830     0.006646        -0.000751
supply_farmPrice               0.0588    -0.000751         0.000154
supply_trend                   0.0720    -0.000872         0.000138
                   supply_trend
demand_(Intercept)     0.070528
demand_price          -0.000872
demand_income          0.000171
supply_(Intercept)     0.072036
supply_price          -0.000872
supply_farmPrice       0.000138
supply_trend           0.000171
> print( round( vcov( fitsurio5wr2, modified.regMat = TRUE ), digits = 6 ) )
        C1        C2        C3      C4        C5        C6
C1 51.3196 -0.579747  0.070528 51.5518 -0.579747  0.061658
C2 -0.5797  0.006646 -0.000872 -0.5830  0.006646 -0.000751
C3  0.0705 -0.000872  0.000171  0.0720 -0.000872  0.000138
C4 51.5518 -0.583025  0.072036 52.2109 -0.583025  0.058794
C5 -0.5797  0.006646 -0.000872 -0.5830  0.006646 -0.000751
C6  0.0617 -0.000751  0.000138  0.0588 -0.000751  0.000154
> print( round( vcov( fitsurio5wr2$eq[[ 2 ]] ), digits = 6 ) )
            (Intercept)     price farmPrice     trend
(Intercept)     52.2109 -0.583025  0.058794  0.072036
price           -0.5830  0.006646 -0.000751 -0.000872
farmPrice        0.0588 -0.000751  0.000154  0.000138
trend            0.0720 -0.000872  0.000138  0.000171
> 
> 
> ## *********** confidence intervals of coefficients *************
> print( confint( fitsur1e2, useDfSys = TRUE ) )
                    2.5 %  97.5 %
demand_(Intercept) 83.927 114.497
demand_price       -0.445  -0.088
demand_income       0.208   0.373
supply_(Intercept) 40.751  85.403
supply_price       -0.048   0.336
supply_farmPrice    0.128   0.285
supply_trend        0.202   0.463
> print( confint( fitsur1e2$eq[[ 2 ]], level = 0.9, useDfSys = TRUE ) )
               5 %   95 %
(Intercept) 44.506 81.648
price       -0.016  0.304
farmPrice    0.141  0.271
trend        0.224  0.441
> 
> print( confint( fitsur1we2, useDfSys = TRUE ) )
                    2.5 %  97.5 %
demand_(Intercept) 83.927 114.497
demand_price       -0.445  -0.088
demand_income       0.208   0.373
supply_(Intercept) 40.751  85.403
supply_price       -0.048   0.336
supply_farmPrice    0.128   0.285
supply_trend        0.202   0.463
> print( confint( fitsur1we2$eq[[ 1 ]], level = 0.9, useDfSys = TRUE ) )
               5 %    95 %
(Intercept) 86.498 111.926
price       -0.415  -0.118
income       0.222   0.360
> 
> print( confint( fitsur2e, level = 0.9 ) )
                      5 %    95 %
demand_(Intercept) 84.618 112.942
demand_price       -0.397  -0.074
demand_income       0.193   0.333
supply_(Intercept) 48.153  87.055
supply_price       -0.040   0.306
supply_farmPrice    0.116   0.240
supply_trend        0.193   0.333
> print( confint( fitsur2e$eq[[ 1 ]], level = 0.99 ) )
             0.5 %  99.5 %
(Intercept) 79.767 117.793
price       -0.452  -0.018
income       0.169   0.357
> 
> print( confint( fitsur3, level = 0.99 ) )
                    0.5 %  99.5 %
demand_(Intercept) 83.481 114.201
demand_price       -0.415  -0.065
demand_income       0.192   0.342
supply_(Intercept) 45.755  89.102
supply_price       -0.060   0.327
supply_farmPrice    0.111   0.248
supply_trend        0.192   0.342
> print( confint( fitsur3$eq[[ 2 ]], level = 0.5 ) )
              25 %   75 %
(Intercept) 60.157 74.699
price        0.068  0.198
farmPrice    0.157  0.202
trend        0.242  0.292
> 
> print( confint( fitsur4r3, level = 0.5 ) )
                     25 %    75 %
demand_(Intercept) 78.344 108.052
demand_price       -0.406  -0.070
demand_income       0.289   0.358
supply_(Intercept) 34.267  64.468
supply_price        0.094   0.430
supply_farmPrice    0.192   0.262
supply_trend        0.289   0.358
> print( confint( fitsur4r3$eq[[ 1 ]], level = 0.25 ) )
            37.5 % 62.5 %
(Intercept) 90.848 95.548
price       -0.265 -0.211
income       0.318  0.329
> 
> print( confint( fitsur5, level = 0.25 ) )
                   37.5 %  62.5 %
demand_(Intercept) 81.670 111.985
demand_price       -0.450  -0.109
demand_income       0.287   0.371
supply_(Intercept) 37.377  68.500
supply_price        0.050   0.391
supply_farmPrice    0.190   0.276
supply_trend        0.287   0.371
> print( confint( fitsur5$eq[[ 2 ]], level = 0.975 ) )
             1.3 % 98.8 %
(Intercept) 34.986 70.891
price        0.024  0.417
farmPrice    0.183  0.282
trend        0.280  0.377
> 
> print( confint( fitsuri1r3, level = 0.975 ) )
                    1.3 %  98.8 %
demand_(Intercept) 77.960 109.125
demand_price       -0.414  -0.043
demand_income       0.213   0.406
supply_(Intercept) 82.005  96.361
supply_income       0.574   0.753
supply_farmPrice   -0.550  -0.393
supply_trend       -0.932  -0.659
> print( confint( fitsuri1r3$eq[[ 1 ]], level = 0.999 ) )
             0.1 %   100 %
(Intercept) 64.257 122.828
price       -0.576   0.119
income       0.128   0.491
> 
> print( confint( fitsuri2, level = 0.999 ) )
                    0.1 %   100 %
demand_(Intercept) 92.129 122.607
demand_price       -0.580  -0.209
demand_income       0.243   0.433
supply_(Intercept) 60.441 109.649
supply_income       0.062   0.563
supply_farmPrice   -0.432   0.038
supply_trend        0.243   0.433
> print( confint( fitsuri2$eq[[ 2 ]], level = 0.1 ) )
              45 %   55 %
(Intercept) 83.512 86.578
income       0.297  0.328
farmPrice   -0.212 -0.183
trend        0.332  0.344
> 
> print( confint( fitsuri3e, level = 0.1 ) )
                     45 %    55 %
demand_(Intercept) 93.728 121.882
demand_price       -0.570  -0.227
demand_income       0.250   0.426
supply_(Intercept) 63.100 107.114
supply_income       0.087   0.534
supply_farmPrice   -0.406   0.014
supply_trend        0.250   0.426
> print( confint( fitsuri3e$eq[[ 1 ]], level = 0.01 ) )
             49.5 %  50.5 %
(Intercept) 107.718 107.893
price        -0.400  -0.398
income        0.337   0.338
> 
> print( confint( fitsurio4, level = 0.01 ) )
                   49.5 %  50.5 %
demand_(Intercept) 77.496 107.356
demand_price       -0.400  -0.055
demand_income       0.283   0.358
supply_(Intercept) 33.588  63.871
supply_price        0.100   0.445
supply_farmPrice    0.185   0.262
supply_trend        0.283   0.358
> print( confint( fitsurio4$eq[[ 2 ]], level = 0.33 ) )
            33.5 % 66.5 %
(Intercept) 45.524 51.935
price        0.236  0.309
farmPrice    0.215  0.231
trend        0.312  0.328
> print( confint( fitsuri4, level = 0.01 ) )
                   49.5 %  50.5 %
demand_(Intercept) 84.345 111.726
demand_price       -0.422  -0.107
demand_income       0.212   0.389
supply_(Intercept) 68.817 111.192
supply_income       0.078   0.393
supply_farmPrice   -0.392   0.058
supply_trend        0.212   0.389
> print( confint( fitsuri4$eq[[ 2 ]], level = 0.33 ) )
            33.5 % 66.5 %
(Intercept) 85.519 94.490
income       0.202  0.269
farmPrice   -0.214 -0.119
trend        0.282  0.319
> 
> print( confint( fitsurio4w, level = 0.01 ) )
                   49.5 %  50.5 %
demand_(Intercept) 77.496 107.356
demand_price       -0.400  -0.055
demand_income       0.283   0.358
supply_(Intercept) 33.587  63.871
supply_price        0.100   0.445
supply_farmPrice    0.185   0.262
supply_trend        0.283   0.358
> print( confint( fitsurio4w$eq[[ 1 ]], level = 0.33 ) )
            33.5 % 66.5 %
(Intercept) 89.266 95.587
price       -0.264 -0.191
income       0.312  0.328
> 
> print( confint( fitsurio5r2, level = 0.33 ) )
                   33.5 % 66.5 %
demand_(Intercept) 63.491 92.577
demand_price       -0.230  0.101
demand_income       0.274  0.327
supply_(Intercept) 19.527 48.865
supply_price        0.270  0.601
supply_farmPrice    0.182  0.232
supply_trend        0.274  0.327
> print( confint( fitsurio5r2$eq[[ 1 ]] ) )
             2.5 % 97.5 %
(Intercept) 63.491 92.577
price       -0.230  0.101
income       0.274  0.327
> print( confint( fitsuri5r2, level = 0.33 ) )
                   33.5 %  66.5 %
demand_(Intercept) 84.498 111.942
demand_price       -0.425  -0.109
demand_income       0.213   0.390
supply_(Intercept) 69.034 111.399
supply_income       0.075   0.391
supply_farmPrice   -0.392   0.059
supply_trend        0.213   0.390
> print( confint( fitsuri5r2$eq[[ 1 ]] ) )
             2.5 %  97.5 %
(Intercept) 84.498 111.942
price       -0.425  -0.109
income       0.213   0.390
> 
> 
> ## *********** fitted values *************
> print( fitted( fitsur1e2 ) )
   demand supply
1    97.9   98.1
2    99.8   99.2
3    99.7   99.4
4    99.9   99.7
5   102.1  101.7
6   101.9  101.7
7   102.3  101.7
8   102.6  103.5
9   101.6  102.4
10  100.7  100.3
11   96.2   96.8
12   95.2   95.4
13   96.4   96.8
14   99.2   98.7
15  103.8  102.9
16  103.5  104.2
17  104.2  104.0
18  101.8  103.1
19  103.2  103.0
20  105.9  105.2
> print( fitted( fitsur1e2$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.1  99.2  99.4  99.7 101.7 101.7 101.7 103.5 102.4 100.3  96.8  95.4  96.8 
   14    15    16    17    18    19    20 
 98.7 102.9 104.2 104.0 103.1 103.0 105.2 
> 
> print( fitted( fitsur2e ) )
   demand supply
1    98.2   98.7
2    99.9   99.7
3    99.9   99.8
4   100.0  100.0
5   102.0  101.7
6   101.8  101.7
7   102.1  101.7
8   102.5  103.2
9   101.5  102.2
10  100.7  100.3
11   96.6   97.3
12   95.8   96.1
13   96.8   97.3
14   99.4   98.9
15  103.5  102.4
16  103.3  103.6
17  103.8  103.3
18  101.8  102.7
19  103.0  102.6
20  105.5  104.5
> print( fitted( fitsur2e$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.2  99.9  99.9 100.0 102.0 101.8 102.1 102.5 101.5 100.7  96.6  95.8  96.8 
   14    15    16    17    18    19    20 
 99.4 103.5 103.3 103.8 101.8 103.0 105.5 
> 
> print( fitted( fitsur2we ) )
   demand supply
1    98.2   98.7
2    99.9   99.7
3    99.9   99.8
4   100.0  100.1
5   102.0  101.7
6   101.8  101.7
7   102.1  101.7
8   102.5  103.2
9   101.5  102.2
10  100.7  100.3
11   96.7   97.4
12   95.8   96.2
13   96.8   97.4
14   99.4   99.0
15  103.5  102.4
16  103.2  103.6
17  103.8  103.3
18  101.8  102.7
19  103.0  102.6
20  105.5  104.5
> print( fitted( fitsur2we$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.7  99.7  99.8 100.1 101.7 101.7 101.7 103.2 102.2 100.3  97.4  96.2  97.4 
   14    15    16    17    18    19    20 
 99.0 102.4 103.6 103.3 102.7 102.6 104.5 
> 
> print( fitted( fitsur3 ) )
   demand supply
1    98.1   98.6
2    99.9   99.6
3    99.9   99.8
4   100.0  100.0
5   102.0  101.7
6   101.8  101.7
7   102.2  101.7
8   102.5  103.2
9   101.5  102.2
10  100.7  100.3
11   96.6   97.3
12   95.7   96.1
13   96.8   97.3
14   99.3   98.9
15  103.6  102.5
16  103.3  103.7
17  103.8  103.3
18  101.8  102.7
19  103.0  102.6
20  105.6  104.6
> print( fitted( fitsur3$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.6  99.6  99.8 100.0 101.7 101.7 101.7 103.2 102.2 100.3  97.3  96.1  97.3 
   14    15    16    17    18    19    20 
 98.9 102.5 103.7 103.3 102.7 102.6 104.6 
> 
> print( fitted( fitsur4r3 ) )
   demand supply
1    97.6   98.2
2    99.9   99.8
3    99.8   99.9
4   100.0  100.3
5   102.1  101.8
6   102.0  101.9
7   102.5  102.1
8   103.1  104.3
9   101.4  102.2
10  100.2   99.3
11   95.3   95.7
12   94.5   94.7
13   96.0   96.6
14   99.0   98.2
15  103.9  102.4
16  103.7  104.2
17  103.8  102.6
18  102.2  103.4
19  103.8  103.5
20  107.2  106.7
> print( fitted( fitsur4r3$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.6  99.9  99.8 100.0 102.1 102.0 102.5 103.1 101.4 100.2  95.3  94.5  96.0 
   14    15    16    17    18    19    20 
 99.0 103.9 103.7 103.8 102.2 103.8 107.2 
> 
> print( fitted( fitsur5 ) )
   demand supply
1    97.5   98.2
2    99.7   99.6
3    99.7   99.8
4    99.9  100.1
5   102.2  101.9
6   102.0  102.0
7   102.5  102.1
8   102.9  104.2
9   101.6  102.4
10  100.5   99.7
11   95.5   95.9
12   94.5   94.6
13   95.8   96.4
14   99.0   98.2
15  104.1  102.6
16  103.8  104.3
17  104.3  103.3
18  102.0  103.3
19  103.6  103.3
20  106.8  106.1
> print( fitted( fitsur5$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.2  99.6  99.8 100.1 101.9 102.0 102.1 104.2 102.4  99.7  95.9  94.6  96.4 
   14    15    16    17    18    19    20 
 98.2 102.6 104.3 103.3 103.3 103.3 106.1 
> 
> print( fitted( fitsuri1r3 ) )
   demand supply
1    97.7  100.2
2    99.9  105.7
3    99.9  104.3
4   100.1  104.9
5   102.1   99.2
6   101.9  100.1
7   102.4  102.3
8   103.0  102.6
9   101.4   94.9
10  100.2   92.8
11   95.5   92.1
12   94.8   98.3
13   96.2  101.6
14   99.0   99.8
15  103.7   97.5
16  103.6   96.7
17  103.6   87.6
18  102.1  100.6
19  103.7  105.5
20  107.0  113.8
> print( fitted( fitsuri1r3$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.7  99.9  99.9 100.1 102.1 101.9 102.4 103.0 101.4 100.2  95.5  94.8  96.2 
   14    15    16    17    18    19    20 
 99.0 103.7 103.6 103.6 102.1 103.7 107.0 
> 
> print( fitted( fitsuri1wr3 ) )
   demand supply
1    97.7  100.2
2    99.9  105.7
3    99.9  104.3
4   100.1  104.9
5   102.1   99.2
6   101.9  100.1
7   102.4  102.3
8   103.0  102.6
9   101.4   94.9
10  100.2   92.8
11   95.5   92.1
12   94.8   98.3
13   96.2  101.6
14   99.0   99.8
15  103.7   97.5
16  103.6   96.7
17  103.6   87.6
18  102.1  100.6
19  103.7  105.5
20  107.0  113.8
> print( fitted( fitsuri1wr3$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
100.2 105.7 104.3 104.9  99.2 100.1 102.3 102.6  94.9  92.8  92.1  98.3 101.6 
   14    15    16    17    18    19    20 
 99.8  97.5  96.7  87.6 100.6 105.5 113.8 
> 
> print( fitted( fitsuri2 ) )
   demand supply
1    97.4   93.4
2    99.2   96.7
3    99.3   96.7
4    99.4   97.7
5   102.5   96.1
6   102.1   97.1
7   102.4   98.8
8   102.5   99.8
9   102.0   96.8
10  101.4   96.4
11   96.0   96.3
12   94.4   99.6
13   95.4  101.9
14   99.1  102.0
15  104.7  102.2
16  104.1  102.6
17  105.8   99.1
18  101.6  105.5
19  103.1  108.5
20  105.6  113.2
> print( fitted( fitsuri2$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 93.4  96.7  96.7  97.7  96.1  97.1  98.8  99.8  96.8  96.4  96.3  99.6 101.9 
   14    15    16    17    18    19    20 
102.0 102.2 102.6  99.1 105.5 108.5 113.2 
> 
> print( fitted( fitsuri3e ) )
   demand supply
1    97.4   93.4
2    99.2   96.7
3    99.3   96.7
4    99.3   97.7
5   102.5   96.1
6   102.1   97.2
7   102.4   98.8
8   102.5   99.8
9   102.0   96.9
10  101.5   96.4
11   96.1   96.3
12   94.4   99.6
13   95.4  101.9
14   99.1  102.0
15  104.7  102.2
16  104.1  102.6
17  105.9   99.1
18  101.6  105.5
19  103.1  108.4
20  105.5  113.1
> print( fitted( fitsuri3e$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.4  99.2  99.3  99.3 102.5 102.1 102.4 102.5 102.0 101.5  96.1  94.4  95.4 
   14    15    16    17    18    19    20 
 99.1 104.7 104.1 105.9 101.6 103.1 105.5 
> 
> print( fitted( fitsurio4 ) )
   demand supply
1    97.6   98.2
2   100.0   99.9
3    99.9  100.0
4   100.1  100.4
5   102.1  101.8
6   102.0  101.9
7   102.5  102.1
8   103.1  104.3
9   101.4  102.1
10  100.1   99.2
11   95.3   95.7
12   94.6   94.8
13   96.1   96.7
14   99.0   98.3
15  103.8  102.3
16  103.7  104.1
17  103.6  102.4
18  102.2  103.5
19  103.8  103.6
20  107.3  106.8
> print( fitted( fitsurio4$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 98.2  99.9 100.0 100.4 101.8 101.9 102.1 104.3 102.1  99.2  95.7  94.8  96.7 
   14    15    16    17    18    19    20 
 98.3 102.3 104.1 102.4 103.5 103.6 106.8 
> print( fitted( fitsuri4 ) )
   demand supply
1    97.8   94.5
2    99.8   97.1
3    99.7   97.2
4    99.9   98.0
5   102.1   96.5
6   101.9   97.4
7   102.3   98.8
8   102.7   99.5
9   101.6   97.3
10  100.6   97.2
11   96.0   97.5
12   95.0  100.3
13   96.2  102.0
14   99.1  102.0
15  103.9  101.7
16  103.6  102.1
17  104.1   99.4
18  101.9  104.6
19  103.3  106.9
20  106.2  110.4
> print( fitted( fitsuri4$eq[[ 2 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 94.5  97.1  97.2  98.0  96.5  97.4  98.8  99.5  97.3  97.2  97.5 100.3 102.0 
   14    15    16    17    18    19    20 
102.0 101.7 102.1  99.4 104.6 106.9 110.4 
> 
> print( fitted( fitsurio5r2 ) )
   demand supply
1    97.8   98.5
2   100.6  100.7
3   100.4  100.6
4   100.8  101.2
5   101.7  101.3
6   101.8  101.7
7   102.5  102.2
8   103.7  104.9
9   100.8  101.4
10   98.9   97.7
11   94.6   94.8
12   94.8   95.0
13   96.8   97.6
14   98.9   98.2
15  102.9  101.3
16  103.3  103.6
17  101.4   99.8
18  102.7  104.0
19  104.5  104.4
20  108.9  108.9
> print( fitted( fitsurio5r2$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.8 100.6 100.4 100.8 101.7 101.8 102.5 103.7 100.8  98.9  94.6  94.8  96.8 
   14    15    16    17    18    19    20 
 98.9 102.9 103.3 101.4 102.7 104.5 108.9 
> print( fitted( fitsuri5r2 ) )
   demand supply
1    97.8   94.6
2    99.8   97.1
3    99.7   97.2
4    99.9   98.0
5   102.1   96.5
6   101.9   97.4
7   102.3   98.8
8   102.7   99.5
9   101.6   97.3
10  100.6   97.2
11   96.0   97.5
12   95.0  100.3
13   96.2  102.0
14   99.1  102.0
15  103.9  101.7
16  103.6  102.0
17  104.2   99.4
18  101.9  104.6
19  103.3  106.9
20  106.2  110.4
> print( fitted( fitsuri5r2$eq[[ 1 ]] ) )
    1     2     3     4     5     6     7     8     9    10    11    12    13 
 97.8  99.8  99.7  99.9 102.1 101.9 102.3 102.7 101.6 100.6  96.0  95.0  96.2 
   14    15    16    17    18    19    20 
 99.1 103.9 103.6 104.2 101.9 103.3 106.2 
> 
> 
> ## *********** predicted values *************
> predictData <- Kmenta
> predictData$consump <- NULL
> predictData$price <- Kmenta$price * 0.9
> predictData$income <- Kmenta$income * 1.1
> 
> print( predict( fitsur1e2, se.fit = TRUE, interval = "prediction",
+    useDfSys = TRUE ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         97.9         0.607       93.7      102.1        98.1         0.780
2         99.8         0.569       95.6      104.0        99.2         0.793
3         99.7         0.537       95.6      103.9        99.4         0.728
4         99.9         0.575       95.7      104.1        99.7         0.755
5        102.1         0.493       97.9      106.3       101.7         0.652
6        101.9         0.458       97.8      106.0       101.7         0.605
7        102.3         0.475       98.1      106.4       101.7         0.592
8        102.6         0.593       98.4      106.8       103.5         0.835
9        101.6         0.523       97.4      105.8       102.4         0.717
10       100.7         0.788       96.4      105.1       100.3         0.980
11        96.2         0.898       91.8      100.7        96.8         1.081
12        95.2         0.898       90.8       99.7        95.4         1.159
13        96.4         0.816       92.0      100.7        96.8         1.019
14        99.2         0.495       95.1      103.4        98.7         0.710
15       103.8         0.724       99.5      108.1       102.9         0.816
16       103.5         0.586       99.3      107.7       104.2         0.830
17       104.2         1.240       99.4      108.9       104.0         1.540
18       101.8         0.533       97.7      106.0       103.1         0.770
19       103.2         0.666       98.9      107.4       103.0         0.862
20       105.9         1.240      101.1      110.7       105.2         1.517
   supply.lwr supply.upr
1        92.6        104
2        93.7        105
3        94.0        105
4        94.2        105
5        96.3        107
6        96.3        107
7        96.4        107
8        98.0        109
9        97.0        108
10       94.7        106
11       91.2        103
12       89.7        101
13       91.2        102
14       93.3        104
15       97.4        108
16       98.7        110
17       97.9        110
18       97.7        109
19       97.5        109
20       99.2        111
> print( predict( fitsur1e2$eq[[ 2 ]], se.fit = TRUE, interval = "prediction",
+    useDfSys = TRUE ) )
     fit se.fit  lwr upr
1   98.1  0.780 92.6 104
2   99.2  0.793 93.7 105
3   99.4  0.728 94.0 105
4   99.7  0.755 94.2 105
5  101.7  0.652 96.3 107
6  101.7  0.605 96.3 107
7  101.7  0.592 96.4 107
8  103.5  0.835 98.0 109
9  102.4  0.717 97.0 108
10 100.3  0.980 94.7 106
11  96.8  1.081 91.2 103
12  95.4  1.159 89.7 101
13  96.8  1.019 91.2 102
14  98.7  0.710 93.3 104
15 102.9  0.816 97.4 108
16 104.2  0.830 98.7 110
17 104.0  1.540 97.9 110
18 103.1  0.770 97.7 109
19 103.0  0.862 97.5 109
20 105.2  1.517 99.2 111
> 
> print( predict( fitsur2e, se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1          103           2.23       99.8        106        97.4           2.80
2          105           2.22      102.0        108        98.3           2.71
3          105           2.23      101.8        108        98.4           2.72
4          105           2.23      102.1        108        98.7           2.70
5          107           2.42      102.3        111       100.4           2.83
6          107           2.39      102.5        111       100.4           2.79
7          107           2.37      103.0        111       100.4           2.75
8          108           2.34      103.8        112       101.8           2.70
9          106           2.44      101.7        111       100.9           2.87
10         105           2.54       99.8        111        99.1           3.05
11         101           2.39       96.5        105        96.1           3.05
12         100           2.24       97.0        103        94.8           2.96
13         101           2.17       99.1        104        96.0           2.83
14         104           2.30      100.5        108        97.6           2.85
15         108           2.58      102.9        114       101.2           2.91
16         108           2.49      103.4        113       102.3           2.83
17         108           2.85      101.3        115       102.1           3.26
18         107           2.31      103.2        111       101.3           2.70
19         108           2.36      104.3        113       101.2           2.68
20         112           2.52      106.4        117       103.0           2.66
   supply.lwr supply.upr
1        93.6      101.1
2        95.5      101.1
3        95.5      101.3
4        96.0      101.3
5        96.4      104.4
6        96.7      104.1
7        97.1      103.7
8        99.2      104.5
9        96.5      105.3
10       93.4      104.8
11       90.3      101.8
12       89.7       99.9
13       91.9      100.0
14       93.4      101.8
15       96.4      105.9
16       98.3      106.4
17       95.1      109.2
18       98.6      103.9
19       98.9      103.5
20      101.0      105.1
> print( predict( fitsur2e$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    level = 0.999, newdata = predictData ) )
   fit se.pred   lwr upr
1  103    2.23  99.8 106
2  105    2.22 102.0 108
3  105    2.23 101.8 108
4  105    2.23 102.1 108
5  107    2.42 102.3 111
6  107    2.39 102.5 111
7  107    2.37 103.0 111
8  108    2.34 103.8 112
9  106    2.44 101.7 111
10 105    2.54  99.8 111
11 101    2.39  96.5 105
12 100    2.24  97.0 103
13 101    2.17  99.1 104
14 104    2.30 100.5 108
15 108    2.58 102.9 114
16 108    2.49 103.4 113
17 108    2.85 101.3 115
18 107    2.31 103.2 111
19 108    2.36 104.3 113
20 112    2.52 106.4 117
> 
> print( predict( fitsur3, se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
   demand.pred demand.se.pred demand.lwr demand.upr supply.pred supply.se.pred
1         98.1           2.13       93.1        103        98.6           2.67
2         99.9           2.13       94.9        105        99.6           2.69
3         99.9           2.12       94.9        105        99.8           2.68
4        100.0           2.13       95.0        105       100.0           2.69
5        102.0           2.11       97.0        107       101.7           2.67
6        101.8           2.10       96.9        107       101.7           2.66
7        102.2           2.11       97.2        107       101.7           2.66
8        102.5           2.14       97.5        108       103.2           2.72
9        101.5           2.12       96.5        106       102.2           2.69
10       100.7           2.20       95.5        106       100.3           2.78
11        96.6           2.23       91.3        102        97.3           2.80
12        95.7           2.22       90.5        101        96.1           2.81
13        96.8           2.19       91.6        102        97.3           2.77
14        99.3           2.11       94.4        104        98.9           2.69
15       103.6           2.17       98.5        109       102.5           2.71
16       103.3           2.13       98.3        108       103.7           2.69
17       103.8           2.39       98.2        109       103.3           2.99
18       101.8           2.12       96.8        107       102.7           2.69
19       103.0           2.16       98.0        108       102.6           2.71
20       105.6           2.39      100.0        111       104.6           2.97
   supply.lwr supply.upr
1        92.4        105
2        93.3        106
3        93.5        106
4        93.7        106
5        95.4        108
6        95.5        108
7        95.5        108
8        96.8        110
9        95.9        109
10       93.8        107
11       90.7        104
12       89.5        103
13       90.8        104
14       92.6        105
15       96.1        109
16       97.3        110
17       96.3        110
18       96.4        109
19       96.3        109
20       97.6        112
> print( predict( fitsur3$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.975 ) )
     fit se.pred  lwr upr
1   98.6    2.67 92.4 105
2   99.6    2.69 93.3 106
3   99.8    2.68 93.5 106
4  100.0    2.69 93.7 106
5  101.7    2.67 95.4 108
6  101.7    2.66 95.5 108
7  101.7    2.66 95.5 108
8  103.2    2.72 96.8 110
9  102.2    2.69 95.9 109
10 100.3    2.78 93.8 107
11  97.3    2.80 90.7 104
12  96.1    2.81 89.5 103
13  97.3    2.77 90.8 104
14  98.9    2.69 92.6 105
15 102.5    2.71 96.1 109
16 103.7    2.69 97.3 110
17 103.3    2.99 96.3 110
18 102.7    2.69 96.4 109
19 102.6    2.71 96.3 109
20 104.6    2.97 97.6 112
> 
> print( predict( fitsur4r3, se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         97.6         0.474       97.4       97.7        98.2         0.571
2         99.9         0.558       99.7      100.1        99.8         0.699
3         99.8         0.523       99.6      100.0        99.9         0.651
4        100.0         0.567       99.9      100.2       100.3         0.701
5        102.1         0.476      102.0      102.3       101.8         0.620
6        102.0         0.443      101.8      102.1       101.9         0.574
7        102.5         0.440      102.3      102.6       102.1         0.559
8        103.1         0.532      102.9      103.3       104.3         0.646
9        101.4         0.520      101.3      101.6       102.2         0.692
10       100.2         0.774      100.0      100.4        99.3         0.939
11        95.3         0.612       95.1       95.5        95.7         0.732
12        94.5         0.525       94.4       94.7        94.7         0.687
13        96.0         0.603       95.8       96.2        96.6         0.791
14        99.0         0.444       98.8       99.1        98.2         0.580
15       103.9         0.643      103.7      104.1       102.4         0.759
16       103.7         0.494      103.6      103.9       104.2         0.634
17       103.8         1.191      103.4      104.1       102.6         1.456
18       102.2         0.510      102.0      102.3       103.4         0.622
19       103.8         0.570      103.6      104.0       103.5         0.714
20       107.2         0.973      106.9      107.6       106.7         1.183
   supply.lwr supply.upr
1        98.0       98.4
2        99.6      100.0
3        99.7      100.1
4       100.1      100.5
5       101.6      102.0
6       101.7      102.1
7       101.9      102.3
8       104.1      104.5
9       102.0      102.4
10       99.0       99.6
11       95.5       95.9
12       94.5       94.9
13       96.4       96.9
14       98.1       98.4
15      102.1      102.6
16      104.0      104.4
17      102.1      103.1
18      103.2      103.6
19      103.3      103.7
20      106.3      107.1
> print( predict( fitsur4r3$eq[[ 1 ]], se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
     fit se.fit   lwr   upr
1   97.6  0.474  97.4  97.7
2   99.9  0.558  99.7 100.1
3   99.8  0.523  99.6 100.0
4  100.0  0.567  99.9 100.2
5  102.1  0.476 102.0 102.3
6  102.0  0.443 101.8 102.1
7  102.5  0.440 102.3 102.6
8  103.1  0.532 102.9 103.3
9  101.4  0.520 101.3 101.6
10 100.2  0.774 100.0 100.4
11  95.3  0.612  95.1  95.5
12  94.5  0.525  94.4  94.7
13  96.0  0.603  95.8  96.2
14  99.0  0.444  98.8  99.1
15 103.9  0.643 103.7 104.1
16 103.7  0.494 103.6 103.9
17 103.8  1.191 103.4 104.1
18 102.2  0.510 102.0 102.3
19 103.8  0.570 103.6 104.0
20 107.2  0.973 106.9 107.6
> 
> print( predict( fitsur4we, se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         97.5         0.445       97.3       97.6        98.2         0.519
2         99.7         0.514       99.6       99.9        99.6         0.636
3         99.7         0.482       99.5       99.8        99.8         0.591
4         99.9         0.523       99.7      100.0       100.1         0.636
5        102.2         0.438      102.1      102.4       102.0         0.568
6        102.0         0.408      101.9      102.2       102.0         0.523
7        102.5         0.409      102.3      102.6       102.1         0.508
8        102.9         0.503      102.8      103.1       104.2         0.603
9        101.6         0.479      101.4      101.7       102.4         0.631
10       100.5         0.724      100.3      100.8        99.7         0.856
11        95.5         0.612       95.3       95.7        95.9         0.694
12        94.4         0.520       94.3       94.6        94.6         0.677
13        95.8         0.565       95.6       96.0        96.3         0.748
14        99.0         0.414       98.8       99.1        98.2         0.540
15       104.1         0.592      103.9      104.3       102.6         0.690
16       103.8         0.458      103.7      104.0       104.3         0.581
17       104.3         1.100      104.0      104.7       103.3         1.334
18       102.0         0.477      101.9      102.2       103.3         0.564
19       103.6         0.545      103.4      103.8       103.2         0.651
20       106.8         0.958      106.5      107.1       106.1         1.091
   supply.lwr supply.upr
1        98.0       98.3
2        99.4       99.8
3        99.6       99.9
4        99.9      100.3
5       101.8      102.1
6       101.8      102.2
7       101.9      102.2
8       104.0      104.4
9       102.2      102.6
10       99.5      100.0
11       95.7       96.1
12       94.4       94.8
13       96.1       96.6
14       98.0       98.4
15      102.4      102.9
16      104.1      104.5
17      102.9      103.8
18      103.1      103.5
19      103.0      103.5
20      105.8      106.5
> print( predict( fitsur4we$eq[[ 2 ]], se.fit = TRUE, interval = "confidence",
+    level = 0.25 ) )
     fit se.fit   lwr   upr
1   98.2  0.519  98.0  98.3
2   99.6  0.636  99.4  99.8
3   99.8  0.591  99.6  99.9
4  100.1  0.636  99.9 100.3
5  102.0  0.568 101.8 102.1
6  102.0  0.523 101.8 102.2
7  102.1  0.508 101.9 102.2
8  104.2  0.603 104.0 104.4
9  102.4  0.631 102.2 102.6
10  99.7  0.856  99.5 100.0
11  95.9  0.694  95.7  96.1
12  94.6  0.677  94.4  94.8
13  96.3  0.748  96.1  96.6
14  98.2  0.540  98.0  98.4
15 102.6  0.690 102.4 102.9
16 104.3  0.581 104.1 104.5
17 103.3  1.334 102.9 103.8
18 103.3  0.564 103.1 103.5
19 103.2  0.651 103.0 103.5
20 106.1  1.091 105.8 106.5
> 
> print( predict( fitsur5, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1        103.2         0.911           2.14      101.7        105        96.0
2        105.9         0.786           2.09      104.4        107        97.3
3        105.7         0.824           2.11      104.3        107        97.5
4        106.0         0.780           2.09      104.6        107        97.8
5        108.2         1.233           2.30      106.7        110        99.8
6        108.1         1.143           2.25      106.6        110        99.8
7        108.7         1.076           2.22      107.2        110        99.8
8        109.4         0.919           2.15      108.0        111       101.9
9        107.5         1.295           2.33      105.9        109       100.3
10       106.0         1.568           2.49      104.3        108        97.7
11       100.5         1.292           2.33       98.9        102        93.8
12        99.7         0.921           2.15       98.3        101        92.4
13       101.5         0.720           2.07      100.1        103        94.1
14       104.7         1.054           2.21      103.2        106        96.1
15       110.1         1.485           2.44      108.5        112       100.5
16       110.0         1.284           2.33      108.4        112       102.1
17       109.9         2.013           2.80      108.0        112       101.4
18       108.4         0.906           2.14      106.9        110       101.0
19       110.2         0.911           2.14      108.8        112       100.9
20       114.2         0.898           2.14      112.7        116       103.6
   supply.se.fit supply.se.pred supply.lwr supply.upr
1          0.916           2.68       94.1       97.8
2          0.715           2.62       95.5       99.1
3          0.760           2.63       95.7       99.3
4          0.708           2.62       96.0       99.6
5          1.213           2.80       97.9      101.7
6          1.100           2.75       97.9      101.7
7          0.982           2.70       98.0      101.7
8          0.825           2.65      100.1      103.7
9          1.339           2.85       98.4      102.2
10         1.631           3.00       95.7       99.8
11         1.375           2.87       91.9       95.8
12         1.025           2.72       90.6       94.3
13         0.831           2.65       92.3       95.9
14         1.033           2.72       94.2       97.9
15         1.434           2.90       98.5      102.5
16         1.249           2.81      100.2      104.1
17         2.163           3.32       99.1      103.6
18         0.809           2.65       99.2      102.8
19         0.712           2.62       99.1      102.7
20         0.572           2.58      101.9      105.4
> print( predict( fitsur5$eq[[ 2 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = predictData ) )
     fit se.fit se.pred   lwr   upr
1   96.0  0.916    2.68  94.1  97.8
2   97.3  0.715    2.62  95.5  99.1
3   97.5  0.760    2.63  95.7  99.3
4   97.8  0.708    2.62  96.0  99.6
5   99.8  1.213    2.80  97.9 101.7
6   99.8  1.100    2.75  97.9 101.7
7   99.8  0.982    2.70  98.0 101.7
8  101.9  0.825    2.65 100.1 103.7
9  100.3  1.339    2.85  98.4 102.2
10  97.7  1.631    3.00  95.7  99.8
11  93.8  1.375    2.87  91.9  95.8
12  92.4  1.025    2.72  90.6  94.3
13  94.1  0.831    2.65  92.3  95.9
14  96.1  1.033    2.72  94.2  97.9
15 100.5  1.434    2.90  98.5 102.5
16 102.1  1.249    2.81 100.2 104.1
17 101.4  2.163    3.32  99.1 103.6
18 101.0  0.809    2.65  99.2 102.8
19 100.9  0.712    2.62  99.1 102.7
20 103.6  0.572    2.58 101.9 105.4
> 
> print( predict( fitsuri1r3, se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99 ) )
   demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         97.7         0.653           2.09       95.8       99.6       100.2
2         99.9         0.578           2.07       98.3      101.6       105.7
3         99.9         0.548           2.06       98.3      101.4       104.3
4        100.1         0.583           2.07       98.4      101.8       104.9
5        102.1         0.509           2.05      100.6      103.5        99.2
6        101.9         0.474           2.04      100.6      103.3       100.1
7        102.4         0.496           2.04      101.0      103.9       102.3
8        103.0         0.615           2.08      101.2      104.8       102.6
9        101.4         0.531           2.05       99.9      103.0        94.9
10       100.2         0.785           2.13       98.0      102.5        92.8
11        95.5         0.971           2.21       92.7       98.3        92.1
12        94.8         0.996           2.22       91.9       97.7        98.3
13        96.2         0.880           2.17       93.7       98.8       101.6
14        99.0         0.521           2.05       97.5      100.5        99.8
15       103.7         0.752           2.12      101.6      105.9        97.5
16       103.6         0.622           2.08      101.8      105.4        96.7
17       103.6         1.241           2.34      100.0      107.2        87.6
18       102.1         0.546           2.06      100.5      103.7       100.6
19       103.7         0.696           2.10      101.6      105.7       105.5
20       107.0         1.299           2.37      103.2      110.7       113.8
   supply.se.fit supply.se.pred supply.lwr supply.upr
1          0.599           1.72       98.4      101.9
2          0.604           1.72      103.9      107.4
3          0.539           1.70      102.7      105.8
4          0.536           1.70      103.4      106.5
5          0.486           1.69       97.8      100.6
6          0.448           1.68       98.8      101.4
7          0.444           1.67      101.0      103.6
8          0.522           1.70      101.1      104.1
9          0.542           1.70       93.3       96.5
10         0.579           1.72       91.1       94.5
11         0.812           1.81       89.7       94.5
12         0.865           1.83       95.8      100.9
13         0.747           1.78       99.4      103.8
14         0.507           1.69       98.3      101.3
15         0.509           1.69       96.0       98.9
16         0.596           1.72       95.0       98.5
17         0.975           1.89       84.7       90.4
18         0.500           1.69       99.1      102.0
19         0.649           1.74      103.6      107.3
20         1.124           1.97      110.5      117.1
> print( predict( fitsuri1r3$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.99 ) )
     fit se.fit se.pred   lwr   upr
1   97.7  0.653    2.09  95.8  99.6
2   99.9  0.578    2.07  98.3 101.6
3   99.9  0.548    2.06  98.3 101.4
4  100.1  0.583    2.07  98.4 101.8
5  102.1  0.509    2.05 100.6 103.5
6  101.9  0.474    2.04 100.6 103.3
7  102.4  0.496    2.04 101.0 103.9
8  103.0  0.615    2.08 101.2 104.8
9  101.4  0.531    2.05  99.9 103.0
10 100.2  0.785    2.13  98.0 102.5
11  95.5  0.971    2.21  92.7  98.3
12  94.8  0.996    2.22  91.9  97.7
13  96.2  0.880    2.17  93.7  98.8
14  99.0  0.521    2.05  97.5 100.5
15 103.7  0.752    2.12 101.6 105.9
16 103.6  0.622    2.08 101.8 105.4
17 103.6  1.241    2.34 100.0 107.2
18 102.1  0.546    2.06 100.5 103.7
19 103.7  0.696    2.10 101.6 105.7
20 107.0  1.299    2.37 103.2 110.7
> 
> print( predict( fitsuri2, se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1          104         0.960      100.5        108        96.1          1.37
2          107         1.011      102.9        110        99.7          1.69
3          107         1.032      102.8        110        99.8          1.61
4          107         1.019      103.0        111       100.8          1.76
5          110         1.547      105.4        114        99.2          2.00
6          109         1.468      105.3        114       100.3          1.94
7          110         1.465      105.7        114       102.1          2.12
8          110         1.423      106.1        114       103.2          2.60
9          109         1.543      104.8        113        99.9          1.80
10         108         1.699      103.6        112        99.1          1.35
11         102         1.299       98.2        106        98.6          2.25
12         101         0.939       97.2        105       102.0          3.10
13         102         0.731       98.7        106       104.5          3.01
14         106         1.164      102.1        110       104.9          2.27
15         112         1.896      107.3        117       105.4          2.20
16         112         1.733      107.1        116       105.9          2.40
17         113         2.316      107.4        118       102.1          2.02
18         109         1.316      105.2        113       108.8          2.75
19         111         1.497      106.8        115       111.9          3.73
20         114         1.918      109.7        119       117.2          5.62
   supply.lwr supply.upr
1        86.2        106
2        89.7        110
3        89.7        110
4        90.7        111
5        89.0        109
6        90.1        110
7        91.8        112
8        92.6        114
9        89.7        110
10       89.2        109
11       88.2        109
12       91.0        113
13       93.6        115
14       94.5        115
15       95.0        116
16       95.4        116
17       91.9        112
18       98.1        119
19      100.4        123
20      103.6        131
> print( predict( fitsuri2$eq[[ 2 ]], se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
     fit se.fit   lwr upr
1   96.1   1.37  86.2 106
2   99.7   1.69  89.7 110
3   99.8   1.61  89.7 110
4  100.8   1.76  90.7 111
5   99.2   2.00  89.0 109
6  100.3   1.94  90.1 110
7  102.1   2.12  91.8 112
8  103.2   2.60  92.6 114
9   99.9   1.80  89.7 110
10  99.1   1.35  89.2 109
11  98.6   2.25  88.2 109
12 102.0   3.10  91.0 113
13 104.5   3.01  93.6 115
14 104.9   2.27  94.5 115
15 105.4   2.20  95.0 116
16 105.9   2.40  95.4 116
17 102.1   2.02  91.9 112
18 108.8   2.75  98.1 119
19 111.9   3.73 100.4 123
20 117.2   5.62 103.6 131
> 
> print( predict( fitsuri2w, se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
   demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1          104         0.960      100.5        108        96.1          1.37
2          107         1.011      102.9        110        99.7          1.69
3          107         1.032      102.8        110        99.8          1.61
4          107         1.019      103.0        111       100.8          1.76
5          110         1.547      105.4        114        99.2          2.00
6          109         1.468      105.3        114       100.3          1.94
7          110         1.465      105.7        114       102.1          2.12
8          110         1.423      106.1        114       103.2          2.60
9          109         1.543      104.8        113        99.9          1.80
10         108         1.699      103.6        112        99.1          1.35
11         102         1.299       98.2        106        98.6          2.25
12         101         0.939       97.2        105       102.0          3.10
13         102         0.731       98.7        106       104.5          3.01
14         106         1.164      102.1        110       104.9          2.27
15         112         1.896      107.3        117       105.4          2.20
16         112         1.733      107.1        116       105.9          2.40
17         113         2.316      107.4        118       102.1          2.02
18         109         1.316      105.2        113       108.8          2.75
19         111         1.497      106.8        115       111.9          3.73
20         114         1.918      109.7        119       117.2          5.62
   supply.lwr supply.upr
1        86.2        106
2        89.7        110
3        89.7        110
4        90.7        111
5        89.0        109
6        90.1        110
7        91.8        112
8        92.6        114
9        89.7        110
10       89.2        109
11       88.2        109
12       91.0        113
13       93.6        115
14       94.5        115
15       95.0        116
16       95.4        116
17       91.9        112
18       98.1        119
19      100.4        123
20      103.6        131
> print( predict( fitsuri2w$eq[[ 2 ]], se.fit = TRUE, interval = "prediction",
+    level = 0.9, newdata = predictData ) )
     fit se.fit   lwr upr
1   96.1   1.37  86.2 106
2   99.7   1.69  89.7 110
3   99.8   1.61  89.7 110
4  100.8   1.76  90.7 111
5   99.2   2.00  89.0 109
6  100.3   1.94  90.1 110
7  102.1   2.12  91.8 112
8  103.2   2.60  92.6 114
9   99.9   1.80  89.7 110
10  99.1   1.35  89.2 109
11  98.6   2.25  88.2 109
12 102.0   3.10  91.0 113
13 104.5   3.01  93.6 115
14 104.9   2.27  94.5 115
15 105.4   2.20  95.0 116
16 105.9   2.40  95.4 116
17 102.1   2.02  91.9 112
18 108.8   2.75  98.1 119
19 111.9   3.73 100.4 123
20 117.2   5.62 103.6 131
> 
> print( predict( fitsuri3e, interval = "prediction", level = 0.925 ) )
   demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1         97.4       93.5      101.2        93.4       82.5        104
2         99.2       95.4      103.0        96.7       86.0        107
3         99.3       95.5      103.0        96.7       86.0        107
4         99.3       95.5      103.1        97.7       87.0        108
5        102.5       98.7      106.2        96.1       85.1        107
6        102.1       98.4      105.9        97.2       86.3        108
7        102.4       98.6      106.2        98.8       88.1        110
8        102.5       98.7      106.3        99.8       88.9        111
9        102.0       98.2      105.8        96.9       85.9        108
10       101.5       97.6      105.4        96.4       85.5        107
11        96.1       92.1      100.1        96.3       84.9        108
12        94.4       90.4       98.4        99.6       87.9        111
13        95.4       91.4       99.3       101.9       90.4        113
14        99.1       95.3      102.8       102.0       91.1        113
15       104.7      100.8      108.6       102.2       91.4        113
16       104.1      100.3      107.9       102.6       91.8        113
17       105.9      101.6      110.2        99.1       88.1        110
18       101.6       97.9      105.4       105.5       94.6        116
19       103.1       99.2      106.9       108.4       97.1        120
20       105.5      101.3      109.8       113.1      100.7        126
> print( predict( fitsuri3e$eq[[ 1 ]], interval = "prediction", level = 0.925 ) )
     fit   lwr   upr
1   97.4  93.5 101.2
2   99.2  95.4 103.0
3   99.3  95.5 103.0
4   99.3  95.5 103.1
5  102.5  98.7 106.2
6  102.1  98.4 105.9
7  102.4  98.6 106.2
8  102.5  98.7 106.3
9  102.0  98.2 105.8
10 101.5  97.6 105.4
11  96.1  92.1 100.1
12  94.4  90.4  98.4
13  95.4  91.4  99.3
14  99.1  95.3 102.8
15 104.7 100.8 108.6
16 104.1 100.3 107.9
17 105.9 101.6 110.2
18 101.6  97.9 105.4
19 103.1  99.2 106.9
20 105.5 101.3 109.8
> 
> print( predict( fitsurio4, interval = "confidence", newdata = predictData ) )
   demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1        102.7      100.8        105        95.5       93.6       97.4
2        105.5      103.8        107        97.0       95.5       98.5
3        105.3      103.6        107        97.2       95.6       98.8
4        105.6      104.0        107        97.5       96.0       99.0
5        107.5      105.0        110        99.1       96.5      101.6
6        107.5      105.1        110        99.2       96.9      101.5
7        108.1      105.9        110        99.3       97.2      101.4
8        108.9      107.1        111       101.5       99.7      103.2
9        106.7      104.0        109        99.5       96.7      102.3
10       105.1      101.8        108        96.7       93.4      100.1
11        99.8       97.2        102        93.1       90.4       95.9
12        99.3       97.4        101        92.1       90.1       94.1
13       101.1       99.7        103        93.9       92.3       95.5
14       104.1      101.9        106        95.6       93.5       97.7
15       109.3      106.2        112        99.7       96.7      102.7
16       109.3      106.6        112       101.4       98.8      104.0
17       108.7      104.5        113       100.0       95.5      104.5
18       107.9      106.0        110       100.6       98.9      102.3
19       109.8      107.9        112       100.7       99.2      102.2
20       114.0      112.3        116       103.7      102.5      104.9
> print( predict( fitsurio4$eq[[ 2 ]], interval = "confidence",
+    newdata = predictData ) )
     fit   lwr   upr
1   95.5  93.6  97.4
2   97.0  95.5  98.5
3   97.2  95.6  98.8
4   97.5  96.0  99.0
5   99.1  96.5 101.6
6   99.2  96.9 101.5
7   99.3  97.2 101.4
8  101.5  99.7 103.2
9   99.5  96.7 102.3
10  96.7  93.4 100.1
11  93.1  90.4  95.9
12  92.1  90.1  94.1
13  93.9  92.3  95.5
14  95.6  93.5  97.7
15  99.7  96.7 102.7
16 101.4  98.8 104.0
17 100.0  95.5 104.5
18 100.6  98.9 102.3
19 100.7  99.2 102.2
20 103.7 102.5 104.9
> print( predict( fitsuri4, interval = "confidence", newdata = predictData ) )
   demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1        103.1      101.3        105        96.6       93.9       99.3
2        105.5      103.7        107        99.4       96.2      102.5
3        105.4      103.5        107        99.4       96.4      102.5
4        105.6      103.8        107       100.3       97.1      103.5
5        107.7      105.0        110        98.9       94.9      102.9
6        107.6      105.0        110        99.8       96.1      103.5
7        108.1      105.5        111       101.2       97.6      104.9
8        108.7      106.1        111       102.0       97.7      106.4
9        107.0      104.3        110        99.6       96.0      103.2
10       105.7      102.7        109        99.3       96.6      102.0
11       100.7       98.3        103        99.3       95.0      103.5
12        99.9       98.2        102       102.1       95.8      108.4
13       101.5      100.2        103       104.0       97.9      110.1
14       104.5      102.4        107       104.1       99.8      108.4
15       109.5      106.1        113       104.2      100.8      107.5
16       109.4      106.3        112       104.5      100.9      108.2
17       109.3      105.3        113       101.7       97.7      105.6
18       107.8      105.4        110       107.0      103.1      110.9
19       109.5      106.7        112       109.5      104.4      114.6
20       113.0      109.4        117       113.4      106.3      120.6
> print( predict( fitsuri4$eq[[ 2 ]], interval = "confidence",
+    newdata = predictData ) )
     fit   lwr   upr
1   96.6  93.9  99.3
2   99.4  96.2 102.5
3   99.4  96.4 102.5
4  100.3  97.1 103.5
5   98.9  94.9 102.9
6   99.8  96.1 103.5
7  101.2  97.6 104.9
8  102.0  97.7 106.4
9   99.6  96.0 103.2
10  99.3  96.6 102.0
11  99.3  95.0 103.5
12 102.1  95.8 108.4
13 104.0  97.9 110.1
14 104.1  99.8 108.4
15 104.2 100.8 107.5
16 104.5 100.9 108.2
17 101.7  97.7 105.6
18 107.0 103.1 110.9
19 109.5 104.4 114.6
20 113.4 106.3 120.6
> 
> print( predict( fitsurio5r2 ) )
   demand.pred supply.pred
1         97.8        98.5
2        100.6       100.7
3        100.4       100.6
4        100.8       101.2
5        101.7       101.3
6        101.8       101.7
7        102.5       102.2
8        103.7       104.9
9        100.8       101.4
10        98.9        97.7
11        94.6        94.8
12        94.8        95.0
13        96.8        97.6
14        98.9        98.2
15       102.9       101.3
16       103.3       103.6
17       101.4        99.8
18       102.7       104.0
19       104.5       104.4
20       108.9       108.9
> print( predict( fitsurio5r2$eq[[ 1 ]] ) )
     fit
1   97.8
2  100.6
3  100.4
4  100.8
5  101.7
6  101.8
7  102.5
8  103.7
9  100.8
10  98.9
11  94.6
12  94.8
13  96.8
14  98.9
15 102.9
16 103.3
17 101.4
18 102.7
19 104.5
20 108.9
> print( predict( fitsuri5r2 ) )
   demand.pred supply.pred
1         97.8        94.6
2         99.8        97.1
3         99.7        97.2
4         99.9        98.0
5        102.1        96.5
6        101.9        97.4
7        102.3        98.8
8        102.7        99.5
9        101.6        97.3
10       100.6        97.2
11        96.0        97.5
12        95.0       100.3
13        96.2       102.0
14        99.1       102.0
15       103.9       101.7
16       103.6       102.0
17       104.2        99.4
18       101.9       104.6
19       103.3       106.9
20       106.2       110.4
> print( predict( fitsuri5r2$eq[[ 1 ]] ) )
     fit
1   97.8
2   99.8
3   99.7
4   99.9
5  102.1
6  101.9
7  102.3
8  102.7
9  101.6
10 100.6
11  96.0
12  95.0
13  96.2
14  99.1
15 103.9
16 103.6
17 104.2
18 101.9
19 103.3
20 106.2
> 
> # predict just one observation
> smallData <- data.frame( price = 130, income = 150, farmPrice = 120,
+    trend = 25 )
> 
> print( predict( fitsur1e2, newdata = smallData ) )
  demand.pred supply.pred
1         108         115
> print( predict( fitsur1e2$eq[[ 1 ]], newdata = smallData ) )
  fit
1 108
> 
> print( predict( fitsur2e, se.fit = TRUE, level = 0.9,
+    newdata = smallData ) )
  demand.pred demand.se.fit supply.pred supply.se.fit
1         108          2.21         113             3
> print( predict( fitsur2e$eq[[ 1 ]], se.pred = TRUE, level = 0.99,
+    newdata = smallData ) )
  fit se.pred
1 108    3.03
> 
> print( predict( fitsur3, interval = "prediction", level = 0.975,
+    newdata = smallData ) )
  demand.pred demand.lwr demand.upr supply.pred supply.lwr supply.upr
1         108        100        115         113        103        123
> print( predict( fitsur3$eq[[ 1 ]], interval = "confidence", level = 0.8,
+    newdata = smallData ) )
  fit lwr upr
1 108 105 111
> 
> print( predict( fitsur4r3, se.fit = TRUE, interval = "confidence",
+    level = 0.999, newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         111          2.06        103        118         119          2.22
  supply.lwr supply.upr
1        111        127
> print( predict( fitsur4r3$eq[[ 2 ]], se.pred = TRUE, interval = "prediction",
+    level = 0.75, newdata = smallData ) )
  fit se.pred lwr upr
1 119    3.41 115 123
> 
> print( predict( fitsur5, se.fit = TRUE, interval = "prediction",
+    newdata = smallData ) )
  demand.pred demand.se.fit demand.lwr demand.upr supply.pred supply.se.fit
1         110          2.15        104        116         118          2.29
  supply.lwr supply.upr
1        111        125
> print( predict( fitsur5$eq[[ 1 ]], se.pred = TRUE, interval = "confidence",
+    newdata = smallData ) )
  fit se.pred lwr upr
1 110     2.9 105 114
> 
> print( predict( fitsurio5r2, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         115          1.98           3.09        113        117         123
  supply.se.fit supply.se.pred supply.lwr supply.upr
1          2.17           3.82        121        126
> print( predict( fitsurio5r2$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
  fit se.fit se.pred lwr upr
1 115   1.98    3.09 114 115
> print( predict( fitsuri5r2, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         109          2.35           3.06        107        111         113
  supply.se.fit supply.se.pred supply.lwr supply.upr
1          3.91           6.87        108        117
> print( predict( fitsuri5r2$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
  fit se.fit se.pred lwr upr
1 109   2.35    3.06 108 109
> 
> print( predict( fitsuri5wr2, se.fit = TRUE, se.pred = TRUE,
+    interval = "prediction", level = 0.5, newdata = smallData ) )
  demand.pred demand.se.fit demand.se.pred demand.lwr demand.upr supply.pred
1         109          2.35           3.06        107        111         113
  supply.se.fit supply.se.pred supply.lwr supply.upr
1          3.91           6.87        108        117
> print( predict( fitsuri5wr2$eq[[ 1 ]], se.fit = TRUE, se.pred = TRUE,
+    interval = "confidence", level = 0.25, newdata = smallData ) )
  fit se.fit se.pred lwr upr
1 109   2.35    3.06 108 109
> 
> 
> ## ************ correlation of predicted values ***************
> print( correlation.systemfit( fitsur1e2, 2, 1 ) )
       [,1]
 [1,] 0.849
 [2,] 0.856
 [3,] 0.864
 [4,] 0.882
 [5,] 0.844
 [6,] 0.861
 [7,] 0.875
 [8,] 0.877
 [9,] 0.884
[10,] 0.918
[11,] 0.903
[12,] 0.884
[13,] 0.880
[14,] 0.863
[15,] 0.896
[16,] 0.897
[17,] 0.914
[18,] 0.839
[19,] 0.867
[20,] 0.902
> 
> print( correlation.systemfit( fitsur2e, 1, 2 ) )
       [,1]
 [1,] 0.942
 [2,] 0.944
 [3,] 0.942
 [4,] 0.941
 [5,] 0.902
 [6,] 0.909
 [7,] 0.917
 [8,] 0.903
 [9,] 0.910
[10,] 0.941
[11,] 0.923
[12,] 0.902
[13,] 0.901
[14,] 0.893
[15,] 0.925
[16,] 0.952
[17,] 0.944
[18,] 0.935
[19,] 0.930
[20,] 0.938
> 
> print( correlation.systemfit( fitsur3, 2, 1 ) )
       [,1]
 [1,] 0.939
 [2,] 0.943
 [3,] 0.941
 [4,] 0.940
 [5,] 0.902
 [6,] 0.909
 [7,] 0.918
 [8,] 0.903
 [9,] 0.910
[10,] 0.941
[11,] 0.922
[12,] 0.900
[13,] 0.899
[14,] 0.892
[15,] 0.923
[16,] 0.952
[17,] 0.943
[18,] 0.936
[19,] 0.929
[20,] 0.937
> 
> print( correlation.systemfit( fitsur3w, 2, 1 ) )
       [,1]
 [1,] 0.940
 [2,] 0.946
 [3,] 0.944
 [4,] 0.944
 [5,] 0.908
 [6,] 0.914
 [7,] 0.922
 [8,] 0.907
 [9,] 0.914
[10,] 0.944
[11,] 0.926
[12,] 0.904
[13,] 0.903
[14,] 0.897
[15,] 0.926
[16,] 0.954
[17,] 0.946
[18,] 0.940
[19,] 0.932
[20,] 0.940
> 
> print( correlation.systemfit( fitsur4r3, 1, 2 ) )
       [,1]
 [1,] 0.963
 [2,] 0.971
 [3,] 0.971
 [4,] 0.973
 [5,] 0.940
 [6,] 0.944
 [7,] 0.947
 [8,] 0.942
 [9,] 0.947
[10,] 0.973
[11,] 0.910
[12,] 0.858
[13,] 0.914
[14,] 0.923
[15,] 0.977
[16,] 0.964
[17,] 0.978
[18,] 0.969
[19,] 0.946
[20,] 0.941
> 
> print( correlation.systemfit( fitsur5, 2, 1 ) )
       [,1]
 [1,] 0.938
 [2,] 0.948
 [3,] 0.948
 [4,] 0.951
 [5,] 0.892
 [6,] 0.897
 [7,] 0.903
 [8,] 0.900
 [9,] 0.907
[10,] 0.952
[11,] 0.853
[12,] 0.784
[13,] 0.858
[14,] 0.867
[15,] 0.961
[16,] 0.935
[17,] 0.961
[18,] 0.944
[19,] 0.907
[20,] 0.904
> 
> print( correlation.systemfit( fitsuri1r3, 1, 2 ) )
        [,1]
 [1,] -0.662
 [2,] -0.656
 [3,] -0.664
 [4,] -0.689
 [5,] -0.629
 [6,] -0.664
 [7,] -0.696
 [8,] -0.675
 [9,] -0.722
[10,] -0.757
[11,] -0.759
[12,] -0.732
[13,] -0.710
[14,] -0.669
[15,] -0.728
[16,] -0.737
[17,] -0.741
[18,] -0.583
[19,] -0.684
[20,] -0.746
> 
> print( correlation.systemfit( fitsuri2, 2, 1 ) )
       [,1]
 [1,] 0.360
 [2,] 0.337
 [3,] 0.337
 [4,] 0.336
 [5,] 0.286
 [6,] 0.299
 [7,] 0.317
 [8,] 0.275
 [9,] 0.322
[10,] 0.318
[11,] 0.334
[12,] 0.334
[13,] 0.318
[14,] 0.286
[15,] 0.358
[16,] 0.432
[17,] 0.367
[18,] 0.362
[19,] 0.333
[20,] 0.335
> 
> print( correlation.systemfit( fitsuri2w, 1, 2 ) )
       [,1]
 [1,] 0.360
 [2,] 0.337
 [3,] 0.337
 [4,] 0.336
 [5,] 0.286
 [6,] 0.299
 [7,] 0.317
 [8,] 0.275
 [9,] 0.322
[10,] 0.318
[11,] 0.334
[12,] 0.334
[13,] 0.318
[14,] 0.286
[15,] 0.358
[16,] 0.432
[17,] 0.367
[18,] 0.362
[19,] 0.333
[20,] 0.335
> 
> print( correlation.systemfit( fitsuri3e, 1, 2 ) )
       [,1]
 [1,] 0.368
 [2,] 0.345
 [3,] 0.344
 [4,] 0.344
 [5,] 0.292
 [6,] 0.305
 [7,] 0.323
 [8,] 0.280
 [9,] 0.329
[10,] 0.325
[11,] 0.340
[12,] 0.340
[13,] 0.324
[14,] 0.291
[15,] 0.366
[16,] 0.441
[17,] 0.375
[18,] 0.369
[19,] 0.340
[20,] 0.342
> 
> print( correlation.systemfit( fitsurio4, 2, 1 ) )
       [,1]
 [1,] 0.961
 [2,] 0.971
 [3,] 0.971
 [4,] 0.973
 [5,] 0.940
 [6,] 0.944
 [7,] 0.947
 [8,] 0.939
 [9,] 0.947
[10,] 0.972
[11,] 0.904
[12,] 0.861
[13,] 0.917
[14,] 0.922
[15,] 0.976
[16,] 0.964
[17,] 0.978
[18,] 0.967
[19,] 0.942
[20,] 0.934
> print( correlation.systemfit( fitsuri4, 2, 1 ) )
        [,1]
 [1,] 0.0384
 [2,] 0.1213
 [3,] 0.0975
 [4,] 0.1381
 [5,] 0.1295
 [6,] 0.0937
 [7,] 0.0630
 [8,] 0.1056
 [9,] 0.2180
[10,] 0.4042
[11,] 0.1074
[12,] 0.0337
[13,] 0.0760
[14,] 0.0701
[15,] 0.0680
[16,] 0.1263
[17,] 0.3859
[18,] 0.2715
[19,] 0.2850
[20,] 0.3967
> 
> print( correlation.systemfit( fitsurio5r2, 1, 2 ) )
       [,1]
 [1,] 0.986
 [2,] 0.991
 [3,] 0.991
 [4,] 0.991
 [5,] 0.981
 [6,] 0.983
 [7,] 0.984
 [8,] 0.980
 [9,] 0.982
[10,] 0.991
[11,] 0.968
[12,] 0.947
[13,] 0.970
[14,] 0.975
[15,] 0.991
[16,] 0.989
[17,] 0.992
[18,] 0.990
[19,] 0.982
[20,] 0.978
> print( correlation.systemfit( fitsuri5r2, 1, 2 ) )
        [,1]
 [1,] 0.0440
 [2,] 0.1279
 [3,] 0.1045
 [4,] 0.1451
 [5,] 0.1375
 [6,] 0.1021
 [7,] 0.0719
 [8,] 0.1124
 [9,] 0.2252
[10,] 0.4097
[11,] 0.1145
[12,] 0.0410
[13,] 0.0834
[14,] 0.0778
[15,] 0.0750
[16,] 0.1344
[17,] 0.3900
[18,] 0.2789
[19,] 0.2897
[20,] 0.4005
> 
> 
> ## ************ Log-Likelihood values ***************
> print( logLik( fitsur1e2 ) )
'log Lik.' -50.9 (df=10)
> print( logLik( fitsur1e2, residCovDiag = TRUE ) )
'log Lik.' -85.4 (df=10)
> 
> print( logLik( fitsur2e ) )
'log Lik.' -52 (df=9)
> print( logLik( fitsur2e, residCovDiag = TRUE ) )
'log Lik.' -86.5 (df=9)
> 
> print( logLik( fitsur3 ) )
'log Lik.' -52.2 (df=9)
> print( logLik( fitsur3, residCovDiag = TRUE ) )
'log Lik.' -86.4 (df=9)
> 
> print( logLik( fitsur4r3 ) )
'log Lik.' -58.4 (df=8)
> print( logLik( fitsur4r3, residCovDiag = TRUE ) )
'log Lik.' -85.5 (df=8)
> 
> print( logLik( fitsur5 ) )
'log Lik.' -58.5 (df=8)
> print( logLik( fitsur5, residCovDiag = TRUE ) )
'log Lik.' -84.6 (df=8)
> 
> print( logLik( fitsur5w ) )
'log Lik.' -58.5 (df=8)
> print( logLik( fitsur5w, residCovDiag = TRUE ) )
'log Lik.' -84.7 (df=8)
> 
> print( logLik( fitsuri1r3 ) )
'log Lik.' -67.8 (df=10)
> print( logLik( fitsuri1r3, residCovDiag = TRUE ) )
'log Lik.' -76.2 (df=10)
> 
> print( logLik( fitsuri2 ) )
'log Lik.' -99.9 (df=9)
> print( logLik( fitsuri2, residCovDiag = TRUE ) )
'log Lik.' -101 (df=9)
> 
> print( logLik( fitsuri3e ) )
'log Lik.' -99.9 (df=9)
> print( logLik( fitsuri3e, residCovDiag = TRUE ) )
'log Lik.' -102 (df=9)
> 
> print( logLik( fitsurio4 ) )
'log Lik.' -58.5 (df=8)
> print( logLik( fitsurio4, residCovDiag = TRUE ) )
'log Lik.' -85.9 (df=8)
> 
> print( logLik( fitsuri4 ) )
'log Lik.' -101 (df=8)
> print( logLik( fitsuri4, residCovDiag = TRUE ) )
'log Lik.' -101 (df=8)
> 
> print( logLik( fitsuri4w ) )
'log Lik.' -101 (df=8)
> print( logLik( fitsuri4w, residCovDiag = TRUE ) )
'log Lik.' -101 (df=8)
> 
> print( logLik( fitsurio5r2 ) )
'log Lik.' -59.8 (df=8)
> print( logLik( fitsurio5r2, residCovDiag = TRUE ) )
'log Lik.' -93.1 (df=8)
> 
> print( logLik( fitsuri5r2 ) )
'log Lik.' -101 (df=8)
> print( logLik( fitsuri5r2, residCovDiag = TRUE ) )
'log Lik.' -101 (df=8)
> 
> 
> ## *********** likelihood ratio tests *************
> # testing first restriction
> # non-iterating, methodResidCov = 1
> print( lrtest( fitsur2, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur2
Model 2: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -52.2                    
2  10  -51.6  1  1.19       0.28
> print( lrtest( fitsur3, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur3
Model 2: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -52.2                    
2  10  -51.6  1  1.19       0.28
> # non-iterating, methodResidCov = 0
> print( lrtest( fitsur2e, fitsur1e ) )
Likelihood ratio test

Model 1: fitsur2e
Model 2: fitsur1e
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -52.0                    
2  10  -51.6  1   0.7        0.4
> print( lrtest( fitsur3e, fitsur1e ) )
Likelihood ratio test

Model 1: fitsur3e
Model 2: fitsur1e
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -52.0                    
2  10  -51.6  1   0.7        0.4
> # iterating, methodResidCov = 1
> print( lrtest( fitsuri2, fitsuri1 ) )
Likelihood ratio test

Model 1: fitsuri2
Model 2: fitsuri1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   9  -99.9                        
2  10  -67.8  1  64.3    1.1e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsuri3, fitsuri1 ) )
Likelihood ratio test

Model 1: fitsuri3
Model 2: fitsuri1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   9  -99.9                        
2  10  -67.8  1  64.3    1.1e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # iterating, methodResidCov = 0
> print( lrtest( fitsuri2e, fitsuri1e ) )
Likelihood ratio test

Model 1: fitsuri2e
Model 2: fitsuri1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   9  -99.9                        
2  10  -67.8  1  64.3    1.1e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsuri3e, fitsuri1e ) )
Likelihood ratio test

Model 1: fitsuri3e
Model 2: fitsuri1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   9  -99.9                        
2  10  -67.8  1  64.3    1.1e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # non-iterating, methodResidCov = 1, WSUR
> print( lrtest( fitsur3w, fitsur1w ) )
Likelihood ratio test

Model 1: fitsur3w
Model 2: fitsur1w
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -52.1                    
2  10  -51.6  1  0.87       0.35
> 
> # testing second restriction
> # non-iterating, methodResidCov = 1
> print( lrtest( fitsur4, fitsur2 ) )
Likelihood ratio test

Model 1: fitsur4
Model 2: fitsur2
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1  12.7    0.00037 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur4, fitsur3 ) )
Likelihood ratio test

Model 1: fitsur4
Model 2: fitsur3
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1  12.7    0.00037 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur5, fitsur2 ) )
Likelihood ratio test

Model 1: fitsur5
Model 2: fitsur2
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1  12.7    0.00037 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur5, fitsur3 ) )
Likelihood ratio test

Model 1: fitsur5
Model 2: fitsur3
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1  12.7    0.00037 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # non-iterating, methodResidCov = 0
> print( lrtest( fitsur4e, fitsur2e ) )
Likelihood ratio test

Model 1: fitsur4e
Model 2: fitsur2e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.6                        
2   9  -52.0  1  13.2    0.00028 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur4e, fitsur3e ) )
Likelihood ratio test

Model 1: fitsur4e
Model 2: fitsur3e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.6                        
2   9  -52.0  1  13.2    0.00028 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur5e, fitsur2e ) )
Likelihood ratio test

Model 1: fitsur5e
Model 2: fitsur2e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.6                        
2   9  -52.0  1  13.2    0.00028 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur5e, fitsur3e ) )
Likelihood ratio test

Model 1: fitsur5e
Model 2: fitsur3e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.6                        
2   9  -52.0  1  13.2    0.00028 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # iterating, methodResidCov = 1
> print( lrtest( fitsurio4, fitsuri2 ) )
Likelihood ratio test

Model 1: fitsurio4
Model 2: fitsuri2
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -99.9  1  82.9     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio4, fitsuri2) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio4, fitsuri3 ) )
Likelihood ratio test

Model 1: fitsurio4
Model 2: fitsuri3
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -99.9  1  82.9     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio4, fitsuri3) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio5, fitsuri2 ) )
Likelihood ratio test

Model 1: fitsurio5
Model 2: fitsuri2
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -99.9  1  82.9     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio5, fitsuri2) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio5, fitsuri3 ) )
Likelihood ratio test

Model 1: fitsurio5
Model 2: fitsuri3
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -99.9  1  82.9     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio5, fitsuri3) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
>    # corrected
> print( lrtest( fitsuri2, fitsuri4 ) )
Likelihood ratio test

Model 1: fitsuri2
Model 2: fitsuri4
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> print( lrtest( fitsuri3, fitsuri4 ) )
Likelihood ratio test

Model 1: fitsuri3
Model 2: fitsuri4
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> print( lrtest( fitsuri2, fitsuri5 ) )
Likelihood ratio test

Model 1: fitsuri2
Model 2: fitsuri5
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> print( lrtest( fitsuri3, fitsuri5 ) )
Likelihood ratio test

Model 1: fitsuri3
Model 2: fitsuri5
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> 
> # iterating, methodResidCov = 0
> print( lrtest( fitsurio4e, fitsuri2e ) )
Likelihood ratio test

Model 1: fitsurio4e
Model 2: fitsuri2e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.4                        
2   9  -99.9  1    83     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio4e, fitsuri2e) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio4e, fitsuri3e ) )
Likelihood ratio test

Model 1: fitsurio4e
Model 2: fitsuri3e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.4                        
2   9  -99.9  1    83     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio4e, fitsuri3e) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio5e, fitsuri2e ) )
Likelihood ratio test

Model 1: fitsurio5e
Model 2: fitsuri2e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.4                        
2   9  -99.9  1    83     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio5e, fitsuri2e) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio5e, fitsuri3e ) )
Likelihood ratio test

Model 1: fitsurio5e
Model 2: fitsuri3e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.4                        
2   9  -99.9  1    83     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio5e, fitsuri3e) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
>    # corrected
> print( lrtest( fitsuri2e, fitsuri4e ) )
Likelihood ratio test

Model 1: fitsuri2e
Model 2: fitsuri4e
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> print( lrtest( fitsuri3e, fitsuri4e ) )
Likelihood ratio test

Model 1: fitsuri3e
Model 2: fitsuri4e
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> print( lrtest( fitsuri2e, fitsuri5e ) )
Likelihood ratio test

Model 1: fitsuri2e
Model 2: fitsuri5e
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> print( lrtest( fitsuri3e, fitsuri5e ) )
Likelihood ratio test

Model 1: fitsuri3e
Model 2: fitsuri5e
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> 
> # non-iterating, methodResidCov = 0, WSUR
> print( lrtest( fitsur4we, fitsur2we ) )
Likelihood ratio test

Model 1: fitsur4we
Model 2: fitsur2we
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.6                        
2   9  -51.8  1  13.5    0.00024 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> # iterating, methodResidCov = 1, WSUR
> print( lrtest( fitsuri2w, fitsuri4w ) )
Likelihood ratio test

Model 1: fitsuri2w
Model 2: fitsuri4w
  #Df LogLik Df Chisq Pr(>Chisq)
1   9  -99.9                    
2   8 -100.9 -1   1.9       0.17
> 
> # testing both of the restrictions
> # non-iterating, methodResidCov = 1
> print( lrtest( fitsur4, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur4
Model 2: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2  10  -51.6  2  13.8    0.00098 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur5, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur5
Model 2: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2  10  -51.6  2  13.8    0.00098 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # non-iterating, methodResidCov = 0
> print( lrtest( fitsur4e, fitsur1e ) )
Likelihood ratio test

Model 1: fitsur4e
Model 2: fitsur1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.6                        
2  10  -51.6  2  13.9    0.00095 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur5e, fitsur1e ) )
Likelihood ratio test

Model 1: fitsur5e
Model 2: fitsur1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.6                        
2  10  -51.6  2  13.9    0.00095 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # iterating, methodResidCov = 1
> print( lrtest( fitsurio4, fitsuri1 ) )
Likelihood ratio test

Model 1: fitsurio4
Model 2: fitsuri1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2  10  -67.8  2  18.6      9e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio4, fitsuri1) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio5, fitsuri1 ) )
Likelihood ratio test

Model 1: fitsurio5
Model 2: fitsuri1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2  10  -67.8  2  18.6      9e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio5, fitsuri1) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
>    # corrected
> print( lrtest( fitsuri1, fitsuri4 ) )
Likelihood ratio test

Model 1: fitsuri1
Model 2: fitsuri4
  #Df LogLik Df Chisq Pr(>Chisq)    
1  10  -67.8                        
2   8 -100.9 -2  66.2    4.2e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsuri1, fitsuri5 ) )
Likelihood ratio test

Model 1: fitsuri1
Model 2: fitsuri5
  #Df LogLik Df Chisq Pr(>Chisq)    
1  10  -67.8                        
2   8 -100.9 -2  66.2    4.2e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # iterating, methodResidCov = 0
> print( lrtest( fitsurio4e, fitsuri1e ) )
Likelihood ratio test

Model 1: fitsurio4e
Model 2: fitsuri1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.4                        
2  10  -67.8  2  18.7    8.9e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio4e, fitsuri1e) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
> print( lrtest( fitsurio5e, fitsuri1e ) )
Likelihood ratio test

Model 1: fitsurio5e
Model 2: fitsuri1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.4                        
2  10  -67.8  2  18.7    8.9e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
Warning message:
In lrtest.systemfit(fitsurio5e, fitsuri1e) :
  model '2' has a smaller log-likelihood value than the more restricted model '1'
>    # corrected
> print( lrtest( fitsuri1e, fitsuri4e ) )
Likelihood ratio test

Model 1: fitsuri1e
Model 2: fitsuri4e
  #Df LogLik Df Chisq Pr(>Chisq)    
1  10  -67.8                        
2   8 -100.9 -2  66.2    4.2e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsuri1e, fitsuri5e ) )
Likelihood ratio test

Model 1: fitsuri1e
Model 2: fitsuri5e
  #Df LogLik Df Chisq Pr(>Chisq)    
1  10  -67.8                        
2   8 -100.9 -2  66.2    4.2e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # non-iterating, methodResidCov = 1, WSUR
> print( lrtest( fitsur5w, fitsur1w ) )
Likelihood ratio test

Model 1: fitsur5w
Model 2: fitsur1w
  #Df LogLik Df Chisq Pr(>Chisq)   
1   8  -58.5                       
2  10  -51.6  2  13.8      0.001 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> # testing the two restrictions with one call
> # non-iterating, methodResidCov = 1
> print( lrtest( fitsur4, fitsur2, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur4
Model 2: fitsur2
Model 3: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1 12.66    0.00037 ***
3  10  -51.6  1  1.19    0.27520    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur5, fitsur3, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur5
Model 2: fitsur3
Model 3: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1 12.66    0.00037 ***
3  10  -51.6  1  1.19    0.27520    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur1, fitsur3, fitsur5 ) )
Likelihood ratio test

Model 1: fitsur1
Model 2: fitsur3
Model 3: fitsur5
  #Df LogLik Df Chisq Pr(>Chisq)    
1  10  -51.6                        
2   9  -52.2 -1  1.19    0.27520    
3   8  -58.5 -1 12.66    0.00037 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( object = fitsur5, fitsur3, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur5
Model 2: fitsur3
Model 3: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1 12.66    0.00037 ***
3  10  -51.6  1  1.19    0.27520    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur3, object = fitsur5, fitsur1 ) )
Likelihood ratio test

Model 1: fitsur5
Model 2: fitsur3
Model 3: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1 12.66    0.00037 ***
3  10  -51.6  1  1.19    0.27520    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsur3, fitsur1, object = fitsur5 ) )
Likelihood ratio test

Model 1: fitsur5
Model 2: fitsur3
Model 3: fitsur1
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8  -58.5                        
2   9  -52.2  1 12.66    0.00037 ***
3  10  -51.6  1  1.19    0.27520    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> # iterating, methodResidCov = 0
> print( lrtest( fitsuri4e, fitsuri2e, fitsuri1e ) )
Likelihood ratio test

Model 1: fitsuri4e
Model 2: fitsuri2e
Model 3: fitsuri1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8 -100.9                        
2   9  -99.9  1   1.9       0.17    
3  10  -67.8  1  64.3    1.1e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( lrtest( fitsuri5e, fitsuri3e, fitsuri1e ) )
Likelihood ratio test

Model 1: fitsuri5e
Model 2: fitsuri3e
Model 3: fitsuri1e
  #Df LogLik Df Chisq Pr(>Chisq)    
1   8 -100.9                        
2   9  -99.9  1   1.9       0.17    
3  10  -67.8  1  64.3    1.1e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> ## ************** F tests ****************
> # testing first restriction
> print( linearHypothesis( fitsur1, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 1.24   0.27
> linearHypothesis( fitsur1, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 1.24   0.27
> 
> print( linearHypothesis( fitsur1r2, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1r2

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 1.65   0.21
> linearHypothesis( fitsur1r2, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1r2

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 1.65   0.21
> 
> print( linearHypothesis( fitsuri1e2, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df   F  Pr(>F)    
1     34                   
2     33  1 140 2.1e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1e2, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df   F  Pr(>F)    
1     34                   
2     33  1 140 2.1e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri1r3, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1r3

  Res.Df Df   F  Pr(>F)    
1     34                   
2     33  1 141 1.9e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1r3, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1r3

  Res.Df Df   F  Pr(>F)    
1     34                   
2     33  1 141 1.9e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsur1we2, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1we2

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 1.65   0.21
> linearHypothesis( fitsur1we2, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1we2

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 1.65   0.21
> 
> print( linearHypothesis( fitsuri1wr3, restrm ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1wr3

  Res.Df Df   F  Pr(>F)    
1     34                   
2     33  1 141 1.9e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1wr3, restrict )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1wr3

  Res.Df Df   F  Pr(>F)    
1     34                   
2     33  1 141 1.9e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> # testing second restriction
> restrOnly2m <- matrix(0,1,7)
> restrOnly2q <- 0.5
> restrOnly2m[1,2] <- -1
> restrOnly2m[1,5] <-  1
> restrictOnly2 <- "- demand_price + supply_price = 0.5"
> restrictOnly2i <- "- demand_price + supply_income = 0.5"
> # first restriction not imposed 
> print( linearHypothesis( fitsur1e2, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1e2

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 2.36   0.13
> linearHypothesis( fitsur1e2, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1e2

  Res.Df Df    F Pr(>F)
1     34               
2     33  1 2.36   0.13
> 
> print( linearHypothesis( fitsuri1, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1

  Res.Df Df    F Pr(>F)   
1     34                  
2     33  1 12.2 0.0014 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1, restrictOnly2i )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1

  Res.Df Df    F Pr(>F)   
1     34                  
2     33  1 12.2 0.0014 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> # first restriction imposed
> print( linearHypothesis( fitsur2, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur2

  Res.Df Df   F Pr(>F)  
1     35                
2     34  1 5.5  0.025 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsur2, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur2

  Res.Df Df   F Pr(>F)  
1     35                
2     34  1 5.5  0.025 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsur3, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur3

  Res.Df Df   F Pr(>F)  
1     35                
2     34  1 5.5  0.025 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsur3, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur3

  Res.Df Df   F Pr(>F)  
1     35                
2     34  1 5.5  0.025 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri2e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri2e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 2.35   0.13
> linearHypothesis( fitsuri2e, restrictOnly2i )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri2e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 2.35   0.13
> 
> print( linearHypothesis( fitsuri3e, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri3e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 2.35   0.13
> linearHypothesis( fitsuri3e, restrictOnly2i )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri3e

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 2.35   0.13
> 
> print( linearHypothesis( fitsur2we, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur2we

  Res.Df Df    F Pr(>F)  
1     35                 
2     34  1 6.26  0.017 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsur2we, restrictOnly2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur2we

  Res.Df Df    F Pr(>F)  
1     35                 
2     34  1 6.26  0.017 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri3we, restrOnly2m, restrOnly2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri3we

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 2.35   0.13
> linearHypothesis( fitsuri3we, restrictOnly2i )
Linear hypothesis test (Theil's F test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri3we

  Res.Df Df    F Pr(>F)
1     35               
2     34  1 2.35   0.13
> 
> # testing both of the restrictions
> print( linearHypothesis( fitsur1r3, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1r3

  Res.Df Df   F Pr(>F)  
1     35                
2     33  2 2.6  0.089 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsur1r3, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1r3

  Res.Df Df   F Pr(>F)  
1     35                
2     33  2 2.6  0.089 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri1e2, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df    F Pr(>F)    
1     35                   
2     33  2 89.1  5e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1e2, restrict2i )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df    F Pr(>F)    
1     35                   
2     33  2 89.1  5e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsur1w, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1w

  Res.Df Df   F Pr(>F)
1     35              
2     33  2 1.8   0.18
> linearHypothesis( fitsur1w, restrict2 )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1w

  Res.Df Df   F Pr(>F)
1     35              
2     33  2 1.8   0.18
> 
> print( linearHypothesis( fitsuri1wr3, restr2m, restr2q ) )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1wr3

  Res.Df Df    F  Pr(>F)    
1     35                    
2     33  2 89.6 4.6e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1wr3, restrict2i )
Linear hypothesis test (Theil's F test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1wr3

  Res.Df Df    F  Pr(>F)    
1     35                    
2     33  2 89.6 4.6e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> 
> ## ************** Wald tests ****************
> # testing first restriction
> print( linearHypothesis( fitsur1, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.81       0.37
> linearHypothesis( fitsur1, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.81       0.37
> 
> print( linearHypothesis( fitsur1r2, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1r2

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  1.12       0.29
> linearHypothesis( fitsur1r2, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1r2

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  1.12       0.29
> 
> print( linearHypothesis( fitsuri1e2, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df Chisq Pr(>Chisq)    
1     34                        
2     33  1   147     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1e2, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df Chisq Pr(>Chisq)    
1     34                        
2     33  1   147     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri1r3, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1r3

  Res.Df Df Chisq Pr(>Chisq)    
1     34                        
2     33  1   147     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1r3, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsuri1r3

  Res.Df Df Chisq Pr(>Chisq)    
1     34                        
2     33  1   147     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsur1w, restrm, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1w

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.81       0.37
> linearHypothesis( fitsur1w, restrict, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0

Model 1: restricted model
Model 2: fitsur1w

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1  0.81       0.37
> 
> # testing second restriction
> # first restriction not imposed
> print( linearHypothesis( fitsur1e2, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1e2

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1   1.6       0.21
> linearHypothesis( fitsur1e2, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1e2

  Res.Df Df Chisq Pr(>Chisq)
1     34                    
2     33  1   1.6       0.21
> 
> print( linearHypothesis( fitsuri1, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1

  Res.Df Df Chisq Pr(>Chisq)    
1     34                        
2     33  1  12.2    0.00047 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1, restrictOnly2i, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1

  Res.Df Df Chisq Pr(>Chisq)    
1     34                        
2     33  1  12.2    0.00047 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> # first restriction imposed
> print( linearHypothesis( fitsur2, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur2

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  3.95      0.047 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsur2, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur2

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  3.95      0.047 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsur3, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur3

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  3.95      0.047 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsur3, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur3

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  3.95      0.047 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri2e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri2e

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  2.76      0.096 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri2e, restrictOnly2i, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri2e

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  2.76      0.096 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri3e, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri3e

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  2.76      0.096 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri3e, restrictOnly2i, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri3e

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  2.76      0.096 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsuri2w, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri2w

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1   2.2       0.14
> linearHypothesis( fitsuri2w, restrictOnly2i, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri2w

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     34  1   2.2       0.14
> 
> print( linearHypothesis( fitsur3w, restrOnly2m, restrOnly2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur3w

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  4.26      0.039 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsur3w, restrictOnly2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur3w

  Res.Df Df Chisq Pr(>Chisq)  
1     35                      
2     34  1  4.26      0.039 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> 
> # testing both of the restrictions
> print( linearHypothesis( fitsur1r3, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1r3

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  3.51       0.17
> linearHypothesis( fitsur1r3, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1r3

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  3.51       0.17
> 
> print( linearHypothesis( fitsuri1e2, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df Chisq Pr(>Chisq)    
1     35                        
2     33  2   188     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1e2, restrict2i, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1e2

  Res.Df Df Chisq Pr(>Chisq)    
1     35                        
2     33  2   188     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( linearHypothesis( fitsur1we2, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1we2

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  3.66       0.16
> linearHypothesis( fitsur1we2, restrict2, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_price = 0.5

Model 1: restricted model
Model 2: fitsur1we2

  Res.Df Df Chisq Pr(>Chisq)
1     35                    
2     33  2  3.66       0.16
> 
> print( linearHypothesis( fitsuri1wr3, restr2m, restr2q, test = "Chisq" ) )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1wr3

  Res.Df Df Chisq Pr(>Chisq)    
1     35                        
2     33  2   187     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> linearHypothesis( fitsuri1wr3, restrict2i, test = "Chisq" )
Linear hypothesis test (Chi^2 statistic of a Wald test)

Hypothesis:
demand_income - supply_trend = 0
- demand_price  + supply_income = 0.5

Model 1: restricted model
Model 2: fitsuri1wr3

  Res.Df Df Chisq Pr(>Chisq)    
1     35                        
2     33  2   187     <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> 
> ## ****************** model frame **************************
> print( mf <- model.frame( fitsur1e2 ) )
   consump price income farmPrice trend
1     98.5 100.3   87.4      98.0     1
2     99.2 104.3   97.6      99.1     2
3    102.2 103.4   96.7      99.1     3
4    101.5 104.5   98.2      98.1     4
5    104.2  98.0   99.8     110.8     5
6    103.2  99.5  100.5     108.2     6
7    104.0 101.1  103.2     105.6     7
8     99.9 104.8  107.8     109.8     8
9    100.3  96.4   96.6     108.7     9
10   102.8  91.2   88.9     100.6    10
11    95.4  93.1   75.1      81.0    11
12    92.4  98.8   76.9      68.6    12
13    94.5 102.9   84.6      70.9    13
14    98.8  98.8   90.6      81.4    14
15   105.8  95.1  103.1     102.3    15
16   100.2  98.5  105.1     105.0    16
17   103.5  86.5   96.4     110.5    17
18    99.9 104.0  104.4      92.5    18
19   105.2 105.8  110.7      89.3    19
20   106.2 113.5  127.1      93.0    20
> print( mf1 <- model.frame( fitsur1e2$eq[[ 1 ]] ) )
   consump price income
1     98.5 100.3   87.4
2     99.2 104.3   97.6
3    102.2 103.4   96.7
4    101.5 104.5   98.2
5    104.2  98.0   99.8
6    103.2  99.5  100.5
7    104.0 101.1  103.2
8     99.9 104.8  107.8
9    100.3  96.4   96.6
10   102.8  91.2   88.9
11    95.4  93.1   75.1
12    92.4  98.8   76.9
13    94.5 102.9   84.6
14    98.8  98.8   90.6
15   105.8  95.1  103.1
16   100.2  98.5  105.1
17   103.5  86.5   96.4
18    99.9 104.0  104.4
19   105.2 105.8  110.7
20   106.2 113.5  127.1
> print( attributes( mf1 )$terms )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> print( mf2 <- model.frame( fitsur1e2$eq[[ 2 ]] ) )
   consump price farmPrice trend
1     98.5 100.3      98.0     1
2     99.2 104.3      99.1     2
3    102.2 103.4      99.1     3
4    101.5 104.5      98.1     4
5    104.2  98.0     110.8     5
6    103.2  99.5     108.2     6
7    104.0 101.1     105.6     7
8     99.9 104.8     109.8     8
9    100.3  96.4     108.7     9
10   102.8  91.2     100.6    10
11    95.4  93.1      81.0    11
12    92.4  98.8      68.6    12
13    94.5 102.9      70.9    13
14    98.8  98.8      81.4    14
15   105.8  95.1     102.3    15
16   100.2  98.5     105.0    16
17   103.5  86.5     110.5    17
18    99.9 104.0      92.5    18
19   105.2 105.8      89.3    19
20   106.2 113.5      93.0    20
> print( attributes( mf2 )$terms )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> print( all.equal( mf, model.frame( fitsur1w ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsur1w$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsur2e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsur2e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsur3 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitsur3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsur4r3 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsur4r3$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsur4we ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitsur4we$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsur5 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitsur5$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsuri1r3 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsuri1r3$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsuri2 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsuri2$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsuri3e ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsuri3e$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsurio4 ) ) )
[1] TRUE
> print( all.equal( mf2, model.frame( fitsurio4$eq[[ 2 ]] ) ) )
[1] TRUE
> print( all.equal( mf, model.frame( fitsuri4 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsuri4$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsurio5r2 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsurio5r2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mf, model.frame( fitsuri5r2 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsuri5r2$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> print( all.equal( mf, model.frame( fitsuri5wr2 ) ) )
[1] TRUE
> print( all.equal( mf1, model.frame( fitsuri5wr2$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> 
> ## **************** model matrix ************************
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitsur1e2$eq[[ 1 ]]$x ) )
[1] TRUE
> print( mm <- model.matrix( fitsur1e2 ) )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1                   1        100.3          87.4                  0
demand_2                   1        104.3          97.6                  0
demand_3                   1        103.4          96.7                  0
demand_4                   1        104.5          98.2                  0
demand_5                   1         98.0          99.8                  0
demand_6                   1         99.5         100.5                  0
demand_7                   1        101.1         103.2                  0
demand_8                   1        104.8         107.8                  0
demand_9                   1         96.4          96.6                  0
demand_10                  1         91.2          88.9                  0
demand_11                  1         93.1          75.1                  0
demand_12                  1         98.8          76.9                  0
demand_13                  1        102.9          84.6                  0
demand_14                  1         98.8          90.6                  0
demand_15                  1         95.1         103.1                  0
demand_16                  1         98.5         105.1                  0
demand_17                  1         86.5          96.4                  0
demand_18                  1        104.0         104.4                  0
demand_19                  1        105.8         110.7                  0
demand_20                  1        113.5         127.1                  0
supply_1                   0          0.0           0.0                  1
supply_2                   0          0.0           0.0                  1
supply_3                   0          0.0           0.0                  1
supply_4                   0          0.0           0.0                  1
supply_5                   0          0.0           0.0                  1
supply_6                   0          0.0           0.0                  1
supply_7                   0          0.0           0.0                  1
supply_8                   0          0.0           0.0                  1
supply_9                   0          0.0           0.0                  1
supply_10                  0          0.0           0.0                  1
supply_11                  0          0.0           0.0                  1
supply_12                  0          0.0           0.0                  1
supply_13                  0          0.0           0.0                  1
supply_14                  0          0.0           0.0                  1
supply_15                  0          0.0           0.0                  1
supply_16                  0          0.0           0.0                  1
supply_17                  0          0.0           0.0                  1
supply_18                  0          0.0           0.0                  1
supply_19                  0          0.0           0.0                  1
supply_20                  0          0.0           0.0                  1
          supply_price supply_farmPrice supply_trend
demand_1           0.0              0.0            0
demand_2           0.0              0.0            0
demand_3           0.0              0.0            0
demand_4           0.0              0.0            0
demand_5           0.0              0.0            0
demand_6           0.0              0.0            0
demand_7           0.0              0.0            0
demand_8           0.0              0.0            0
demand_9           0.0              0.0            0
demand_10          0.0              0.0            0
demand_11          0.0              0.0            0
demand_12          0.0              0.0            0
demand_13          0.0              0.0            0
demand_14          0.0              0.0            0
demand_15          0.0              0.0            0
demand_16          0.0              0.0            0
demand_17          0.0              0.0            0
demand_18          0.0              0.0            0
demand_19          0.0              0.0            0
demand_20          0.0              0.0            0
supply_1         100.3             98.0            1
supply_2         104.3             99.1            2
supply_3         103.4             99.1            3
supply_4         104.5             98.1            4
supply_5          98.0            110.8            5
supply_6          99.5            108.2            6
supply_7         101.1            105.6            7
supply_8         104.8            109.8            8
supply_9          96.4            108.7            9
supply_10         91.2            100.6           10
supply_11         93.1             81.0           11
supply_12         98.8             68.6           12
supply_13        102.9             70.9           13
supply_14         98.8             81.4           14
supply_15         95.1            102.3           15
supply_16         98.5            105.0           16
supply_17         86.5            110.5           17
supply_18        104.0             92.5           18
supply_19        105.8             89.3           19
supply_20        113.5             93.0           20
> print( mm1 <- model.matrix( fitsur1e2$eq[[ 1 ]] ) )
   (Intercept) price income
1            1 100.3   87.4
2            1 104.3   97.6
3            1 103.4   96.7
4            1 104.5   98.2
5            1  98.0   99.8
6            1  99.5  100.5
7            1 101.1  103.2
8            1 104.8  107.8
9            1  96.4   96.6
10           1  91.2   88.9
11           1  93.1   75.1
12           1  98.8   76.9
13           1 102.9   84.6
14           1  98.8   90.6
15           1  95.1  103.1
16           1  98.5  105.1
17           1  86.5   96.4
18           1 104.0  104.4
19           1 105.8  110.7
20           1 113.5  127.1
attr(,"assign")
[1] 0 1 2
> print( mm2 <- model.matrix( fitsur1e2$eq[[ 2 ]] ) )
   (Intercept) price farmPrice trend
1            1 100.3      98.0     1
2            1 104.3      99.1     2
3            1 103.4      99.1     3
4            1 104.5      98.1     4
5            1  98.0     110.8     5
6            1  99.5     108.2     6
7            1 101.1     105.6     7
8            1 104.8     109.8     8
9            1  96.4     108.7     9
10           1  91.2     100.6    10
11           1  93.1      81.0    11
12           1  98.8      68.6    12
13           1 102.9      70.9    13
14           1  98.8      81.4    14
15           1  95.1     102.3    15
16           1  98.5     105.0    16
17           1  86.5     110.5    17
18           1 104.0      92.5    18
19           1 105.8      89.3    19
20           1 113.5      93.0    20
attr(,"assign")
[1] 0 1 2 3
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsur1r2 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur1r2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur1r2$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitsur1r2$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitsur2e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitsur2e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur2e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur2e$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsur2 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur2$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitsur2$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitsur2we$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitsur2we ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur2we$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur2we$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsur2 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur2$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitsuri2$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitsur3e$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitsur3e ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur3e$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur3e$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsur3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur3$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitsur3$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitsur3w$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitsur3w ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur3w$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur3w$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsur3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur3$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitsuri3$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitsur4r3$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitsur4r3 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur4r3$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur4r3$eq[[ 2 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsur4we ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur4we$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm2, model.matrix( fitsur4we$eq[[ 2 ]] ) ) )
[1] TRUE
> print( !is.null( fitsur4we$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> # with x (returnModelMatrix) = TRUE
> print( !is.null( fitsurio5r2$eq[[ 1 ]]$x ) )
[1] TRUE
> print( !is.null( fitsur5$eq[[ 1 ]]$x ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitsurio5r2 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsurio5r2$eq[[ 1 ]] ) ) )
[1] TRUE
> print( all.equal( mm, model.matrix( fitsur5 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur5$eq[[ 1 ]] ) ) )
[1] TRUE
> #print( all.equal( mm2, model.matrix( fitsuri5r2$eq[[ 2 ]] ) ) )
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsurio5 ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsurio5$eq[[ 1 ]] ) ) )
[1] TRUE
> 
> # with x (returnModelMatrix) = FALSE
> print( all.equal( mm, model.matrix( fitsur5w ) ) )
[1] TRUE
> print( all.equal( mm1, model.matrix( fitsur5w$eq[[ 1 ]] ) ) )
[1] TRUE
> #print( all.equal( mm2, model.matrix( fitsuri5r2$eq[[ 1 ]] ) ) )
> print( !is.null( fitsurio5$eq[[ 1 ]]$x ) )
[1] FALSE
> print( !is.null( fitsur5w$eq[[ 1 ]]$x ) )
[1] FALSE
> 
> 
> ## **************** formulas ************************
> formula( fitsur1e2 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsur1e2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitsur2e )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsur2e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitsur2we )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsur2we$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitsur3 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsur3$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitsur4r3 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsur4r3$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitsur5 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsur5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> 
> formula( fitsuri1r3 )
$demand
consump ~ price + income

$supply
price ~ income + farmPrice + trend

> formula( fitsuri1r3$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitsuri2 )
$demand
consump ~ price + income

$supply
price ~ income + farmPrice + trend

> formula( fitsuri2$eq[[ 2 ]] )
price ~ income + farmPrice + trend
> 
> formula( fitsuri3e )
$demand
consump ~ price + income

$supply
price ~ income + farmPrice + trend

> formula( fitsuri3e$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitsurio4 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsurio4$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
> formula( fitsuri4 )
$demand
consump ~ price + income

$supply
price ~ income + farmPrice + trend

> formula( fitsuri4$eq[[ 2 ]] )
price ~ income + farmPrice + trend
> 
> formula( fitsurio5r2 )
$demand
consump ~ price + income

$supply
consump ~ price + farmPrice + trend

> formula( fitsurio5r2$eq[[ 1 ]] )
consump ~ price + income
> formula( fitsuri5r2 )
$demand
consump ~ price + income

$supply
price ~ income + farmPrice + trend

> formula( fitsuri5r2$eq[[ 1 ]] )
consump ~ price + income
> 
> formula( fitsuri5wr2 )
$demand
consump ~ price + income

$supply
price ~ income + farmPrice + trend

> formula( fitsuri5wr2$eq[[ 1 ]] )
consump ~ price + income
> 
> 
> ## **************** model terms *******************
> terms( fitsur1e2 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsur1e2$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitsur2e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsur2e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitsur3 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsur3$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitsur3w )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsur3w$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitsur4r3 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsur4r3$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitsur4we )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsur4we$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitsur5 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsur5$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitsuri1r3 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
price ~ income + farmPrice + trend
attr(,"variables")
list(price, income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
price          0         0     0
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(price, income, farmPrice, trend)
attr(,"dataClasses")
    price    income farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsuri1r3$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitsuri2 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
price ~ income + farmPrice + trend
attr(,"variables")
list(price, income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
price          0         0     0
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(price, income, farmPrice, trend)
attr(,"dataClasses")
    price    income farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsuri2$eq[[ 2 ]] )
price ~ income + farmPrice + trend
attr(,"variables")
list(price, income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
price          0         0     0
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(price, income, farmPrice, trend)
attr(,"dataClasses")
    price    income farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitsuri3e )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
price ~ income + farmPrice + trend
attr(,"variables")
list(price, income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
price          0         0     0
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(price, income, farmPrice, trend)
attr(,"dataClasses")
    price    income farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsuri3e$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> terms( fitsurio4 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsurio4$eq[[ 2 ]] )
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> terms( fitsuri4 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
price ~ income + farmPrice + trend
attr(,"variables")
list(price, income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
price          0         0     0
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(price, income, farmPrice, trend)
attr(,"dataClasses")
    price    income farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsuri4$eq[[ 2 ]] )
price ~ income + farmPrice + trend
attr(,"variables")
list(price, income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
price          0         0     0
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(price, income, farmPrice, trend)
attr(,"dataClasses")
    price    income farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 
> 
> terms( fitsurio5r2 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
consump ~ price + farmPrice + trend
attr(,"variables")
list(consump, price, farmPrice, trend)
attr(,"factors")
          price farmPrice trend
consump       0         0     0
price         1         0     0
farmPrice     0         1     0
trend         0         0     1
attr(,"term.labels")
[1] "price"     "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, farmPrice, trend)
attr(,"dataClasses")
  consump     price farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsurio5r2$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> terms( fitsuri5r2 )
$demand
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 

$supply
price ~ income + farmPrice + trend
attr(,"variables")
list(price, income, farmPrice, trend)
attr(,"factors")
          income farmPrice trend
price          0         0     0
income         1         0     0
farmPrice      0         1     0
trend          0         0     1
attr(,"term.labels")
[1] "income"    "farmPrice" "trend"    
attr(,"order")
[1] 1 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(price, income, farmPrice, trend)
attr(,"dataClasses")
    price    income farmPrice     trend 
"numeric" "numeric" "numeric" "numeric" 

> terms( fitsuri5r2$eq[[ 1 ]] )
consump ~ price + income
attr(,"variables")
list(consump, price, income)
attr(,"factors")
        price income
consump     0      0
price       1      0
income      0      1
attr(,"term.labels")
[1] "price"  "income"
attr(,"order")
[1] 1 1
attr(,"intercept")
[1] 1
attr(,"response")
[1] 1
attr(,".Environment")
<environment: R_GlobalEnv>
attr(,"predvars")
list(consump, price, income)
attr(,"dataClasses")
  consump     price    income 
"numeric" "numeric" "numeric" 
> 
> 
> ## **************** estfun ************************
> library( "sandwich" )
> 
> estfun( fitsur1 )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1              0.9083        91.12         79.38            -0.6496
demand_2             -0.7320       -76.32        -71.44             0.5235
demand_3              3.2023       331.23        309.66            -2.2902
demand_4              2.1435       224.00        210.49            -1.5330
demand_5              2.7516       269.66        274.61            -1.9679
demand_6              1.7015       169.22        171.00            -1.2169
demand_7              2.2068       223.03        227.74            -1.5783
demand_8             -3.5946      -376.58       -387.50             2.5708
demand_9             -1.6348      -157.67       -157.92             1.1692
demand_10             2.7103       247.26        240.95            -1.9384
demand_11            -0.8810       -82.01        -66.16             0.6301
demand_12            -3.4554      -341.39       -265.72             2.4712
demand_13            -2.2246      -228.93       -188.20             1.5910
demand_14            -0.5461       -53.93        -49.48             0.3906
demand_15             2.4619       234.17        253.82            -1.7607
demand_16            -4.3873      -431.94       -461.11             3.1378
demand_17            -0.9942       -85.99        -95.84             0.7110
demand_18            -2.5012      -260.17       -261.13             1.7888
demand_19             2.5805       272.93        285.66            -1.8455
demand_20             0.2846        32.30         36.17            -0.2036
supply_1             -0.4396       -44.11        -38.42             0.3959
supply_2             -0.0184        -1.92         -1.79             0.0166
supply_3             -2.5916      -268.06       -250.60             2.3337
supply_4             -1.7132      -179.04       -168.24             1.5428
supply_5             -2.3049      -225.88       -230.03             2.0756
supply_6             -1.3780      -137.06       -138.49             1.2410
supply_7             -2.0596      -208.16       -212.55             1.8547
supply_8              3.4200       358.29        368.68            -3.0798
supply_9              1.9576       188.80        189.10            -1.7628
supply_10            -2.3620      -215.48       -209.98             2.1270
supply_11             1.1852       110.32         89.01            -1.0673
supply_12             2.6183       258.69        201.34            -2.3578
supply_13             1.9874       204.52        168.14            -1.7897
supply_14            -0.1072       -10.59         -9.72             0.0966
supply_15            -2.6839      -255.29       -276.71             2.4169
supply_16             3.8259       376.66        402.10            -3.4452
supply_17             0.5270        45.59         50.80            -0.4746
supply_18             3.0021       312.27        313.42            -2.7035
supply_19            -2.0184      -213.48       -223.44             1.8176
supply_20            -0.8466       -96.08       -107.60             0.7623
          supply_price supply_farmPrice supply_trend
demand_1        -65.17           -63.66      -0.6496
demand_2         54.58            51.88       1.0470
demand_3       -236.89          -226.96      -6.8707
demand_4       -160.20          -150.38      -6.1319
demand_5       -192.86          -218.05      -9.8397
demand_6       -121.02          -131.66      -7.3012
demand_7       -159.51          -166.67     -11.0480
demand_8        269.33           282.28      20.5665
demand_9        112.76           127.09      10.5227
demand_10      -176.84          -195.00     -19.3840
demand_11        58.65            51.04       6.9309
demand_12       244.16           169.53      29.6547
demand_13       163.73           112.80      20.6833
demand_14        38.57            31.79       5.4681
demand_15      -167.48          -180.12     -26.4104
demand_16       308.92           329.47      50.2044
demand_17        61.50            78.57      12.0871
demand_18       186.07           165.47      32.1991
demand_19      -195.20          -164.81     -35.0650
demand_20       -23.10           -18.93      -4.0710
supply_1         39.72            38.80       0.3959
supply_2          1.73             1.64       0.0331
supply_3        241.39           231.27       7.0012
supply_4        161.23           151.34       6.1710
supply_5        203.41           229.98      10.3781
supply_6        123.42           134.27       7.4457
supply_7        187.45           195.86      12.9829
supply_8       -322.64          -338.16     -24.6380
supply_9       -170.02          -191.62     -15.8653
supply_10       194.04           213.98      21.2699
supply_11       -99.35           -86.45     -11.7402
supply_12      -232.95          -161.74     -28.2933
supply_13      -184.18          -126.89     -23.2663
supply_14         9.54             7.86       1.3521
supply_15       229.90           247.25      36.2539
supply_16      -339.19          -361.75     -55.1237
supply_17       -41.05           -52.44      -8.0678
supply_18      -281.20          -250.07     -48.6623
supply_19       192.24           162.31      34.5341
supply_20        86.52            70.90      15.2466
> round( colSums( estfun( fitsur1 ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitsur1e2 )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1             1.09034      109.386        95.295           -0.80605
demand_2            -1.05992     -110.511      -103.448            0.78356
demand_3             4.28760      443.488       414.611           -3.16968
demand_4             2.85253      298.107       280.119           -2.10878
demand_5             3.80226      372.625       379.466           -2.81088
demand_6             2.36197      234.912       237.378           -1.74612
demand_7             3.06088      309.351       315.883           -2.26280
demand_8            -4.81806     -504.754      -519.386            3.56182
demand_9            -2.17915     -210.170      -210.506            1.61097
demand_10            3.70159      337.689       329.071           -2.73646
demand_11           -1.39799     -130.132      -104.989            1.03349
demand_12           -4.96091     -490.143      -381.494            3.66743
demand_13           -3.24623     -334.063      -274.631            2.39983
demand_14           -0.81794      -80.776       -74.105            0.60467
demand_15            3.49861      332.784       360.707           -2.58640
demand_16           -5.83443     -574.406      -613.199            4.31320
demand_17           -1.15650     -100.035      -111.487            0.85496
demand_18           -3.36717     -350.239      -351.532            2.48923
demand_19            3.59870      380.631       398.376           -2.66040
demand_20            0.58382       66.257        74.203           -0.43160
supply_1            -0.54811      -54.988       -47.905            0.47751
supply_2             0.00819        0.854         0.799           -0.00713
supply_3            -3.61236     -373.644      -349.315            3.14703
supply_4            -2.38151     -248.882      -233.865            2.07474
supply_5            -3.32295     -325.653      -331.631            2.89490
supply_6            -2.00948     -199.855      -201.953            1.75063
supply_7            -2.95622     -298.773      -305.081            2.57541
supply_8             4.67628      489.901       504.103           -4.07390
supply_9             2.65680      256.238       256.647           -2.31456
supply_10           -3.31875     -302.763      -295.037            2.89124
supply_11            1.84429      171.676       138.506           -1.60672
supply_12            3.95003      390.267       303.757           -3.44120
supply_13            3.01568      310.338       255.127           -2.62722
supply_14           -0.02452       -2.421        -2.221            0.02136
supply_15           -3.84791     -366.010      -396.720            3.35224
supply_16            5.24831      516.701       551.597           -4.57224
supply_17            0.59732       51.667        57.582           -0.52037
supply_18            4.17631      434.404       436.007           -3.63834
supply_19           -2.86060     -302.562      -316.668            2.49211
supply_20           -1.29079     -146.492      -164.060            1.12452
          supply_price supply_farmPrice supply_trend
demand_1       -80.865          -78.993      -0.8060
demand_2        81.697           77.651       1.5671
demand_3      -327.856         -314.115      -9.5090
demand_4      -220.380         -206.871      -8.4351
demand_5      -275.469         -311.446     -14.0544
demand_6      -173.662         -188.931     -10.4767
demand_7      -228.692         -238.952     -15.8396
demand_8       373.147          391.088      28.4946
demand_9       155.372          175.113      14.4987
demand_10     -249.642         -275.288     -27.3646
demand_11       96.202           83.712      11.3683
demand_12      362.346          251.586      44.0092
demand_13      246.962          170.148      31.1978
demand_14       59.715           49.220       8.4654
demand_15     -246.016         -264.589     -38.7961
demand_16      424.638          452.886      69.0111
demand_17       73.953           94.473      14.5344
demand_18      258.920          230.254      44.8061
demand_19     -281.388         -237.573     -50.5475
demand_20      -48.982          -40.138      -8.6319
supply_1        47.905           46.796       0.4775
supply_2        -0.744           -0.707      -0.0143
supply_3       325.513          311.871       9.4411
supply_4       216.822          203.532       8.2989
supply_5       283.704          320.755      14.4745
supply_6       174.111          189.418      10.5038
supply_7       260.286          271.963      18.0279
supply_8      -426.794         -447.314     -32.5912
supply_9      -223.230         -251.593     -20.8310
supply_10      263.762          290.859      28.9124
supply_11     -149.561         -130.144     -17.6739
supply_12     -339.994         -236.066     -41.2944
supply_13     -270.361         -186.270     -34.1538
supply_14        2.109            1.739       0.2990
supply_15      318.862          342.934      50.2836
supply_16     -450.142         -480.085     -73.1559
supply_17      -45.011          -57.501      -8.8464
supply_18     -378.445         -336.546     -65.4901
supply_19      263.588          222.545      47.3500
supply_20      127.621          104.580      22.4903
> round( colSums( estfun( fitsur1e2 ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitsur1r3 )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1             1.07229      107.575        93.718           -0.79049
demand_2            -1.02096     -106.450       -99.646            0.75265
demand_3             4.16424      430.729       402.682           -3.06988
demand_4             2.77231      289.723       272.240           -2.04374
demand_5             3.68037      360.680       367.301           -2.71316
demand_6             2.28513      227.270       229.656           -1.68460
demand_7             2.96157      299.314       305.634           -2.18327
demand_8            -4.67889     -490.175      -504.385            3.44927
demand_9            -2.11749     -204.223      -204.549            1.56101
demand_10            3.58740      327.271       318.920           -2.64463
demand_11           -1.33464     -124.235      -100.231            0.98389
demand_12           -4.78276     -472.541      -367.794            3.52584
demand_13           -3.12449     -321.535      -264.332            2.30337
demand_14           -0.78522      -77.545       -71.141            0.57886
demand_15            3.37652      321.171       348.119           -2.48917
demand_16           -5.67080     -558.296      -596.001            4.18051
demand_17           -1.14172      -98.757      -110.062            0.84168
demand_18           -3.26836     -339.962      -341.217            2.40943
demand_19            3.47995      368.071       385.231           -2.56542
demand_20            0.54555       61.914        69.339           -0.40218
supply_1            -0.53834      -54.008       -47.051            0.47031
supply_2             0.00335        0.349         0.327           -0.00293
supply_3            -3.49682     -361.694      -338.143            3.05492
supply_4            -2.30621     -241.013      -226.470            2.01477
supply_5            -3.20507     -314.100      -319.866            2.80004
supply_6            -1.93606     -192.553      -194.574            1.69139
supply_7            -2.85248     -288.289      -294.376            2.49200
supply_8             4.53460      475.059       488.830           -3.96155
supply_9             2.57840      248.676       249.073           -2.25256
supply_10           -3.20906     -292.756      -285.286            2.80352
supply_11            1.76494      164.289       132.547           -1.54190
supply_12            3.79168      374.622       291.580           -3.31251
supply_13            2.89330      297.744       244.773           -2.52766
supply_14           -0.03625       -3.580        -3.284            0.03167
supply_15           -3.71220     -353.101      -382.728            3.24307
supply_16            5.08854      500.972       534.805           -4.44548
supply_17            0.59312       51.303        57.176           -0.51816
supply_18            4.04346      420.584       422.137           -3.53247
supply_19           -2.76240     -292.176      -305.797            2.41330
supply_20           -1.23648     -140.329      -157.157            1.08023
          supply_price supply_farmPrice supply_trend
demand_1       -79.304           -77.47     -0.79049
demand_2        78.475            74.59      1.50531
demand_3      -317.533          -304.22     -9.20963
demand_4      -213.583          -200.49     -8.17496
demand_5      -265.893          -300.62    -13.56581
demand_6      -167.543          -182.27    -10.10759
demand_7      -220.654          -230.55    -15.28289
demand_8       361.356           378.73     27.59420
demand_9       150.553           169.68     14.04907
demand_10     -241.264          -266.05    -26.44627
demand_11       91.586            79.70     10.82281
demand_12      348.357           241.87     42.31014
demand_13      237.035           163.31     29.94383
demand_14       57.166            47.12      8.10410
demand_15     -236.767          -254.64    -37.33751
demand_16      411.575           438.95     66.88809
demand_17       72.803            93.01     14.30850
demand_18      250.619           222.87     43.36977
demand_19     -271.341          -229.09    -48.74290
demand_20      -45.643           -37.40     -8.04353
supply_1        47.183            46.09      0.47031
supply_2        -0.305            -0.29     -0.00585
supply_3       315.985           302.74      9.16476
supply_4       210.555           197.65      8.05908
supply_5       274.406           310.24     14.00018
supply_6       168.219           183.01     10.14835
supply_7       251.857           263.16     17.44401
supply_8      -415.024          -434.98    -31.69241
supply_9      -217.250          -244.85    -20.27300
supply_10      255.760           282.03     28.03523
supply_11     -143.528          -124.89    -16.96088
supply_12     -327.279          -227.24    -39.75013
supply_13     -260.117          -179.21    -32.85963
supply_14        3.128             2.58      0.44339
supply_15      308.478           331.77     48.64611
supply_16     -437.662          -466.78    -71.12773
supply_17      -44.820           -57.26     -8.80876
supply_18     -367.434          -326.75    -63.58452
supply_19      255.253           215.51     45.85274
supply_20      122.595           100.46     21.60450
> round( colSums( estfun( fitsur1r3 ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitsur1w )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1              0.9083        91.12         79.38            -0.6496
demand_2             -0.7320       -76.32        -71.44             0.5235
demand_3              3.2023       331.23        309.66            -2.2902
demand_4              2.1435       224.00        210.49            -1.5330
demand_5              2.7516       269.66        274.61            -1.9679
demand_6              1.7015       169.22        171.00            -1.2169
demand_7              2.2068       223.03        227.74            -1.5783
demand_8             -3.5946      -376.58       -387.50             2.5708
demand_9             -1.6348      -157.67       -157.92             1.1692
demand_10             2.7103       247.26        240.95            -1.9384
demand_11            -0.8810       -82.01        -66.16             0.6301
demand_12            -3.4554      -341.39       -265.72             2.4712
demand_13            -2.2246      -228.93       -188.20             1.5910
demand_14            -0.5461       -53.93        -49.48             0.3906
demand_15             2.4619       234.17        253.82            -1.7607
demand_16            -4.3873      -431.94       -461.11             3.1378
demand_17            -0.9942       -85.99        -95.84             0.7110
demand_18            -2.5012      -260.17       -261.13             1.7888
demand_19             2.5805       272.93        285.66            -1.8455
demand_20             0.2846        32.30         36.17            -0.2036
supply_1             -0.4396       -44.11        -38.42             0.3959
supply_2             -0.0184        -1.92         -1.79             0.0166
supply_3             -2.5916      -268.06       -250.60             2.3337
supply_4             -1.7132      -179.04       -168.24             1.5428
supply_5             -2.3049      -225.88       -230.03             2.0756
supply_6             -1.3780      -137.06       -138.49             1.2410
supply_7             -2.0596      -208.16       -212.55             1.8547
supply_8              3.4200       358.29        368.68            -3.0798
supply_9              1.9576       188.80        189.10            -1.7628
supply_10            -2.3620      -215.48       -209.98             2.1270
supply_11             1.1852       110.32         89.01            -1.0673
supply_12             2.6183       258.69        201.34            -2.3578
supply_13             1.9874       204.52        168.14            -1.7897
supply_14            -0.1072       -10.59         -9.72             0.0966
supply_15            -2.6839      -255.29       -276.71             2.4169
supply_16             3.8259       376.66        402.10            -3.4452
supply_17             0.5270        45.59         50.80            -0.4746
supply_18             3.0021       312.27        313.42            -2.7035
supply_19            -2.0184      -213.48       -223.44             1.8176
supply_20            -0.8466       -96.08       -107.60             0.7623
          supply_price supply_farmPrice supply_trend
demand_1        -65.17           -63.66      -0.6496
demand_2         54.58            51.88       1.0470
demand_3       -236.89          -226.96      -6.8707
demand_4       -160.20          -150.38      -6.1319
demand_5       -192.86          -218.05      -9.8397
demand_6       -121.02          -131.66      -7.3012
demand_7       -159.51          -166.67     -11.0480
demand_8        269.33           282.28      20.5665
demand_9        112.76           127.09      10.5227
demand_10      -176.84          -195.00     -19.3840
demand_11        58.65            51.04       6.9309
demand_12       244.16           169.53      29.6547
demand_13       163.73           112.80      20.6833
demand_14        38.57            31.79       5.4681
demand_15      -167.48          -180.12     -26.4104
demand_16       308.92           329.47      50.2044
demand_17        61.50            78.57      12.0871
demand_18       186.07           165.47      32.1991
demand_19      -195.20          -164.81     -35.0650
demand_20       -23.10           -18.93      -4.0710
supply_1         39.72            38.80       0.3959
supply_2          1.73             1.64       0.0331
supply_3        241.39           231.27       7.0012
supply_4        161.23           151.34       6.1710
supply_5        203.41           229.98      10.3781
supply_6        123.42           134.27       7.4457
supply_7        187.45           195.86      12.9829
supply_8       -322.64          -338.16     -24.6380
supply_9       -170.02          -191.62     -15.8653
supply_10       194.04           213.98      21.2699
supply_11       -99.35           -86.45     -11.7402
supply_12      -232.95          -161.74     -28.2933
supply_13      -184.18          -126.89     -23.2663
supply_14         9.54             7.86       1.3521
supply_15       229.90           247.25      36.2539
supply_16      -339.19          -361.75     -55.1237
supply_17       -41.05           -52.44      -8.0678
supply_18      -281.20          -250.07     -48.6623
supply_19       192.24           162.31      34.5341
supply_20        86.52            70.90      15.2466
> round( colSums( estfun( fitsur1w ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
      supply_price   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitsuri1e )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1              0.5467        54.84         47.78             0.5219
demand_2             -0.5182       -54.03        -50.58            -0.4947
demand_3              1.5799       163.41        152.77             1.5082
demand_4              0.9787       102.28         96.11             0.9343
demand_5              1.4899       146.02        148.70             1.4224
demand_6              0.8875        88.27         89.19             0.8472
demand_7              1.0809       109.24        111.55             1.0319
demand_8             -2.1165      -221.73       -228.15            -2.0205
demand_9             -0.7383       -71.21        -71.32            -0.7049
demand_10             1.7668       161.19        157.07             1.6867
demand_11            -0.0682        -6.35         -5.12            -0.0651
demand_12            -1.6133      -159.40       -124.07            -1.5402
demand_13            -1.1570      -119.06        -97.88            -1.1045
demand_14            -0.1925       -19.01        -17.44            -0.1838
demand_15             1.4026       133.41        144.61             1.3390
demand_16            -2.3128      -227.70       -243.08            -2.2080
demand_17            -0.0876        -7.58         -8.44            -0.0836
demand_18            -1.4924      -155.23       -155.81            -1.4247
demand_19             1.0702       113.20        118.47             1.0217
demand_20            -0.5064       -57.47        -64.36            -0.4834
supply_1              0.1054        10.57          9.21             0.1789
supply_2             -0.8882       -92.60        -86.68            -1.5080
supply_3             -0.5218       -53.97        -50.46            -0.8859
supply_4             -0.2644       -27.63        -25.96            -0.4489
supply_5             -0.7666       -75.13        -76.51            -1.3016
supply_6             -0.4056       -40.34        -40.77            -0.6887
supply_7             -0.8114       -82.00        -83.74            -1.3777
supply_8              1.4243       149.22        153.54             2.4183
supply_9              1.0270        99.05         99.21             1.7438
supply_10            -1.0278       -93.77        -91.37            -1.7451
supply_11             0.6336        58.98         47.58             1.0758
supply_12             0.2724        26.92         20.95             0.4626
supply_13             0.8434        86.79         71.35             1.4319
supply_14            -0.7107       -70.19        -64.39            -1.2067
supply_15            -1.5343      -145.94       -158.18            -2.6050
supply_16             1.1276       111.01        118.51             1.9145
supply_17            -0.6907       -59.75        -66.58            -1.1727
supply_18             2.2394       232.94        233.79             3.8022
supply_19             0.1792        18.96         19.84             0.3043
supply_20            -0.2309       -26.21        -29.35            -0.3921
          supply_income supply_farmPrice supply_trend
demand_1          45.61            51.15        0.522
demand_2         -48.28           -49.03       -0.989
demand_3         145.85           149.47        4.525
demand_4          91.75            91.66        3.737
demand_5         141.95           157.60        7.112
demand_6          85.15            91.67        5.083
demand_7         106.49           108.97        7.223
demand_8        -217.81          -221.85      -16.164
demand_9         -68.09           -76.62       -6.344
demand_10        149.95           169.69       16.867
demand_11         -4.89            -5.28       -0.717
demand_12       -118.44          -105.66      -18.482
demand_13        -93.44           -78.31      -14.359
demand_14        -16.65           -14.96       -2.573
demand_15        138.05           136.98       20.085
demand_16       -232.06          -231.84      -35.327
demand_17         -8.06            -9.24       -1.421
demand_18       -148.74          -131.79      -25.645
demand_19        113.10            91.24       19.412
demand_20        -61.44           -44.96       -9.668
supply_1          15.64            17.53        0.179
supply_2        -147.18          -149.44       -3.016
supply_3         -85.67           -87.79       -2.658
supply_4         -44.08           -44.04       -1.796
supply_5        -129.90          -144.21       -6.508
supply_6         -69.22           -74.52       -4.132
supply_7        -142.17          -145.48       -9.644
supply_8         260.69           265.53       19.346
supply_9         168.45           189.55       15.694
supply_10       -155.14          -175.56      -17.451
supply_11         80.79            87.14       11.833
supply_12         35.57            31.73        5.551
supply_13        121.14           101.52       18.615
supply_14       -109.33           -98.23      -16.894
supply_15       -268.57          -266.49      -39.075
supply_16        201.22           201.03       30.633
supply_17       -113.05          -129.59      -19.937
supply_18        396.95           351.71       68.440
supply_19         33.69            27.18        5.782
supply_20        -49.83           -36.46       -7.841
> round( colSums( estfun( fitsuri1e ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
     supply_income   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitsuri1wr3 )
          demand_(Intercept) demand_price demand_income supply_(Intercept)
demand_1              0.5102        51.19         44.59             0.4867
demand_2             -0.4886       -50.94        -47.68            -0.4661
demand_3              1.4782       152.90        142.94             1.4102
demand_4              0.9143        95.55         89.79             0.8722
demand_5              1.3982       137.03        139.54             1.3339
demand_6              0.8327        82.82         83.69             0.7944
demand_7              1.0134       102.42        104.59             0.9668
demand_8             -1.9849      -207.94       -213.97            -1.8935
demand_9             -0.6897       -66.52        -66.63            -0.6580
demand_10             1.6602       151.46        147.60             1.5838
demand_11            -0.0636        -5.92         -4.77            -0.0606
demand_12            -1.5152      -149.71       -116.52            -1.4455
demand_13            -1.0888      -112.05        -92.11            -1.0387
demand_14            -0.1809       -17.86        -16.39            -0.1726
demand_15             1.3190       125.46        135.99             1.2583
demand_16            -2.1651      -213.16       -227.55            -2.0655
demand_17            -0.0731        -6.33         -7.05            -0.0698
demand_18            -1.4001      -145.63       -146.17            -1.3357
demand_19             1.0017       105.95        110.89             0.9556
demand_20            -0.4780       -54.25        -60.76            -0.4560
supply_1              0.0755         7.57          6.60             0.1193
supply_2             -0.8526       -88.90        -83.22            -1.3478
supply_3             -0.5074       -52.48        -49.07            -0.8021
supply_4             -0.2631       -27.49        -25.83            -0.4159
supply_5             -0.7425       -72.77        -74.10            -1.1737
supply_6             -0.3998       -39.77        -40.18            -0.6320
supply_7             -0.7750       -78.33        -79.98            -1.2251
supply_8              1.3178       138.06        142.06             2.0831
supply_9              0.9476        91.39         91.54             1.4979
supply_10            -0.9683       -88.34        -86.08            -1.5306
supply_11             0.6060        56.40         45.51             0.9578
supply_12             0.2813        27.79         21.63             0.4446
supply_13             0.8170        84.07         69.12             1.2914
supply_14            -0.6451       -63.71        -58.44            -1.0197
supply_15            -1.4315      -136.17       -147.59            -2.2629
supply_16             1.0615       104.50        111.56             1.6779
supply_17            -0.6453       -55.82        -62.21            -1.0200
supply_18             2.1183       220.33        221.15             3.3484
supply_19             0.1946        20.58         21.54             0.3076
supply_20            -0.1888       -21.42        -23.99            -0.2984
          supply_income supply_farmPrice supply_trend
demand_1          42.54            47.70        0.487
demand_2         -45.49           -46.19       -0.932
demand_3         136.37           139.75        4.231
demand_4          85.65            85.57        3.489
demand_5         133.12           147.79        6.669
demand_6          79.84            85.95        4.766
demand_7          99.77           102.09        6.768
demand_8        -204.12          -207.91      -15.148
demand_9         -63.56           -71.52       -5.922
demand_10        140.80           159.34       15.838
demand_11         -4.55            -4.91       -0.667
demand_12       -111.16           -99.16      -17.346
demand_13        -87.88           -73.64      -13.503
demand_14        -15.63           -14.05       -2.416
demand_15        129.73           128.72       18.874
demand_16       -217.08          -216.88      -33.048
demand_17         -6.73            -7.71       -1.186
demand_18       -139.45          -123.55      -24.042
demand_19        105.78            85.33       18.156
demand_20        -57.96           -42.41       -9.120
supply_1          10.43            11.69        0.119
supply_2        -131.54          -133.56       -2.696
supply_3         -77.56           -79.49       -2.406
supply_4         -40.84           -40.80       -1.663
supply_5        -117.13          -130.04       -5.868
supply_6         -63.52           -68.39       -3.792
supply_7        -126.43          -129.37       -8.575
supply_8         224.56           228.72       16.665
supply_9         144.70           162.82       13.481
supply_10       -136.07          -153.98      -15.306
supply_11         71.93            77.58       10.536
supply_12         34.19            30.50        5.335
supply_13        109.25            91.56       16.788
supply_14        -92.38           -83.00      -14.276
supply_15       -233.30          -231.49      -33.943
supply_16        176.34           176.17       26.846
supply_17        -98.33          -112.71      -17.341
supply_18        349.57           309.73       60.271
supply_19         34.05            27.47        5.845
supply_20        -37.92           -27.75       -5.967
> round( colSums( estfun( fitsuri1wr3 ) ), digits = 7 )
demand_(Intercept)       demand_price      demand_income supply_(Intercept) 
                 0                  0                  0                  0 
     supply_income   supply_farmPrice       supply_trend 
                 0                  0                  0 
> 
> estfun( fitsurS1 )
       eq1_consump eq2_(Intercept) eq2_consump eq2_trend
eq1_1        7.162         0.02160       2.127    0.0216
eq1_2       15.562         0.04659       4.621    0.0932
eq1_3        6.026         0.01752       1.789    0.0525
eq1_4       10.524         0.03079       3.125    0.1232
eq1_5      -14.099        -0.04017      -4.187   -0.2008
eq1_6       -7.426        -0.02136      -2.205   -0.1282
eq1_7       -5.141        -0.01468      -1.527   -0.1028
eq1_8       15.138         0.04500       4.495    0.3600
eq1_9       -7.596        -0.02248      -2.256   -0.2023
eq1_10     -28.217        -0.08150      -8.379   -0.8150
eq1_11      -3.498        -0.01088      -1.039   -0.1197
eq1_12      17.457         0.05609       5.184    0.6731
eq1_13      22.800         0.07162       6.771    0.9311
eq1_14       2.479         0.00746       0.736    0.1044
eq1_15     -26.446        -0.07423      -7.853   -1.1135
eq1_16      -2.054        -0.00609      -0.610   -0.0974
eq1_17     -42.973        -0.12327     -12.761   -2.0956
eq1_18      13.132         0.03902       3.900    0.7024
eq1_19       4.307         0.01216       1.279    0.2310
eq1_20      22.866         0.06392       6.790    1.2784
eq2_1       -1.322        -0.02928      -2.884   -0.0293
eq2_2       -0.971        -0.02136      -2.118   -0.0427
eq2_3       -5.293        -0.11298     -11.542   -0.3389
eq2_4       -4.273        -0.09180      -9.318   -0.3672
eq2_5        1.836         0.03840       4.003    0.1920
eq2_6        2.119         0.04477       4.622    0.2686
eq2_7       -0.532        -0.01115      -1.160   -0.0781
eq2_8       10.068         0.21978      21.956    1.7582
eq2_9        9.192         0.19974      20.044    1.7977
eq2_10      -0.465        -0.00986      -1.014   -0.0986
eq2_11      -2.679        -0.06122      -5.843   -0.6735
eq2_12      -6.257        -0.14762     -13.644   -1.7715
eq2_13      -7.360        -0.16978     -16.050   -2.2072
eq2_14      -5.865        -0.12951     -12.790   -1.8131
eq2_15      -0.730        -0.01505      -1.593   -0.2258
eq2_16      11.188         0.24342      24.396    3.8947
eq2_17      11.047         0.23271      24.091    3.9561
eq2_18       3.346         0.07302       7.297    1.3144
eq2_19      -7.478        -0.15498     -16.307   -2.9445
eq2_20      -5.570        -0.11434     -12.146   -2.2868
> round( colSums( estfun( fitsurS1 ) ), digits = 7 )
    eq1_consump eq2_(Intercept)     eq2_consump       eq2_trend 
              0               0               0               0 
> 
> estfun( fitsurS2 )
       eq1_price eq2_trend
eq1_1   -5.42871 -0.000114
eq1_2  -13.14782 -0.000531
eq1_3   -4.34907 -0.000266
eq1_4   -8.39779 -0.000677
eq1_5   12.19030  0.001310
eq1_6    6.97176  0.000886
eq1_7    5.14513  0.000750
eq1_8  -12.72321 -0.002046
eq1_9    7.04895  0.001385
eq1_10  22.20478  0.005126
eq1_11   3.65437  0.000909
eq1_12 -15.21951 -0.003893
eq1_13 -20.44077 -0.005438
eq1_14  -1.31641 -0.000393
eq1_15  21.18383  0.007035
eq1_16   2.54257  0.000870
eq1_17  31.47441  0.013026
eq1_18 -10.84129 -0.003951
eq1_19  -2.78655 -0.001054
eq1_20 -19.91341 -0.007390
eq2_1    0.42448  0.037215
eq2_2    0.40866  0.068949
eq2_3    0.38411  0.097989
eq2_4    0.34891  0.117463
eq2_5    0.30591  0.137281
eq2_6    0.27161  0.144126
eq2_7    0.24474  0.149098
eq2_8    0.19771  0.132796
eq2_9    0.15083  0.123801
eq2_10   0.12174  0.117373
eq2_11   0.06024  0.062610
eq2_12   0.01611  0.017205
eq2_13  -0.00856 -0.009507
eq2_14  -0.02284 -0.028474
eq2_15  -0.02363 -0.032773
eq2_16  -0.08383 -0.119831
eq2_17  -0.09018 -0.155889
eq2_18  -0.16161 -0.245985
eq2_19  -0.17473 -0.276076
eq2_20  -0.22123 -0.342915
> round( colSums( estfun( fitsurS2 ) ), digits = 7 )
eq1_price eq2_trend 
        0         0 
> 
> estfun( fitsurS3 )
       eq1_trend eq2_trend
eq1_1      2.069    -2.039
eq1_2      3.833    -3.777
eq1_3      5.448    -5.369
eq1_4      6.531    -6.436
eq1_5      7.634    -7.523
eq1_6      8.015    -7.899
eq1_7      8.293    -8.173
eq1_8      7.389    -7.281
eq1_9      6.890    -6.790
eq1_10     6.535    -6.440
eq1_11     3.493    -3.443
eq1_12     0.972    -0.958
eq1_13    -0.510     0.503
eq1_14    -1.562     1.539
eq1_15    -1.798     1.772
eq1_16    -6.634     6.537
eq1_17    -8.634     8.509
eq1_18   -13.639    13.441
eq1_19   -15.308    15.085
eq1_20   -19.019    18.743
eq2_1     -2.082     2.089
eq2_2     -4.012     4.027
eq2_3     -5.472     5.491
eq2_4     -6.736     6.760
eq2_5     -6.873     6.897
eq2_6     -7.460     7.486
eq2_7     -7.809     7.837
eq2_8     -8.276     8.305
eq2_9     -6.161     6.182
eq2_10    -4.039     4.053
eq2_11    -3.098     3.109
eq2_12    -2.949     2.960
eq2_13    -2.261     2.269
eq2_14     1.160    -1.164
eq2_15     4.921    -4.939
eq2_16     6.677    -6.701
eq2_17    14.428   -14.479
eq2_18    11.167   -11.207
eq2_19    14.155   -14.205
eq2_20    14.719   -14.771
> round( colSums( estfun( fitsurS3 ) ), digits = 7 )
eq1_trend eq2_trend 
        0         0 
> 
> try( estfun( fitsurS4 ) )
Error in estfun.systemfit(fitsurS4) : 
  returning the estimation function for models with restrictions has not yet been implemented.
> 
> estfun( fitsurS5 )
       eq1_(Intercept) eq2_(Intercept)
eq1_1         -0.17267         0.01074
eq1_2         -0.12244         0.00761
eq1_3          0.09050        -0.00563
eq1_4          0.04335        -0.00270
eq1_5          0.23912        -0.01487
eq1_6          0.16778        -0.01043
eq1_7          0.22144        -0.01377
eq1_8         -0.07143         0.00444
eq1_9         -0.03923         0.00244
eq1_10         0.13751        -0.00855
eq1_11        -0.39091         0.02431
eq1_12        -0.60636         0.03770
eq1_13        -0.45531         0.02831
eq1_14        -0.15321         0.00953
eq1_15         0.35053        -0.02180
eq1_16        -0.04817         0.00300
eq1_17         0.18774        -0.01167
eq1_18        -0.06935         0.00431
eq1_19         0.30946        -0.01924
eq1_20         0.38165        -0.02373
eq2_1         -0.00135         0.00874
eq2_2         -0.01889         0.12205
eq2_3         -0.01520         0.09821
eq2_4         -0.01996         0.12901
eq2_5          0.00898        -0.05802
eq2_6          0.00251        -0.01619
eq2_7         -0.00466         0.03010
eq2_8         -0.02111         0.13640
eq2_9          0.01590        -0.10273
eq2_10         0.03911        -0.25276
eq2_11         0.03085        -0.19937
eq2_12         0.00542        -0.03502
eq2_13        -0.01285         0.08306
eq2_14         0.00562        -0.03631
eq2_15         0.02180        -0.14088
eq2_16         0.00698        -0.04508
eq2_17         0.06016        -0.38875
eq2_18        -0.01778         0.11492
eq2_19        -0.02558         0.16532
eq2_20        -0.05994         0.38731
> round( colSums( estfun( fitsurS5 ) ), digits = 7 )
eq1_(Intercept) eq2_(Intercept) 
              0               0 
> 
> 
> ## **************** bread ************************
> round( bread( fitsur1 ), digits = 7 )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]           2258.680     -23.5779        1.0971            2354.23
[2,]            -23.578       0.3134       -0.0796             -15.01
[3,]              1.097      -0.0796        0.0704              -8.66
[4,]           2354.232     -15.0109       -8.6593            4911.36
[5,]            -24.454       0.2225        0.0225             -38.45
[6,]              0.887      -0.0644        0.0569              -9.51
[7,]              1.348      -0.0978        0.0864             -12.94
     supply_price supply_farmPrice supply_trend
[1,]     -24.4536           0.8871       1.3477
[2,]       0.2225          -0.0644      -0.0978
[3,]       0.0225           0.0569       0.0864
[4,]     -38.4456          -9.5077     -12.9352
[5,]       0.3567           0.0252       0.0320
[6,]       0.0252           0.0636       0.0807
[7,]       0.0320           0.0807       0.1845
> 
> round( bread( fitsur1e2 ), digits = 7 )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]            2257.61     -23.5004        1.0286            2442.20
[2,]             -23.50       0.3077       -0.0746             -16.15
[3,]               1.03      -0.0746        0.0660              -8.39
[4,]            2442.20     -16.1480       -8.3922            4816.72
[5,]             -25.30       0.2317        0.0218             -38.19
[6,]               0.86      -0.0624        0.0552              -8.86
[7,]               1.31      -0.0948        0.0838             -12.35
     supply_price supply_farmPrice supply_trend
[1,]     -25.2995           0.8598       1.3061
[2,]       0.2317          -0.0624      -0.0948
[3,]       0.0218           0.0552       0.0838
[4,]     -38.1886          -8.8582     -12.3470
[5,]       0.3560           0.0234       0.0309
[6,]       0.0234           0.0590       0.0780
[7,]       0.0309           0.0780       0.1640
> 
> round( bread( fitsur1r3 ), digits = 7 )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]           2257.728     -23.5088        1.0361            2434.43
[2,]            -23.509       0.3083       -0.0752             -16.03
[3,]              1.036      -0.0752        0.0665              -8.43
[4,]           2434.429     -16.0346       -8.4292            4826.83
[5,]            -25.226       0.2308        0.0219             -38.22
[6,]              0.864      -0.0627        0.0554              -8.93
[7,]              1.312      -0.0952        0.0842             -12.42
     supply_price supply_farmPrice supply_trend
[1,]     -25.2264           0.8636       1.3118
[2,]       0.2308          -0.0627      -0.0952
[3,]       0.0219           0.0554       0.0842
[4,]     -38.2158          -8.9270     -12.4169
[5,]       0.3561           0.0235       0.0310
[6,]       0.0235           0.0595       0.0784
[7,]       0.0310           0.0784       0.1660
> 
> round( bread( fitsur1w ), digits = 7 )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]           2258.680     -23.5779        1.0971            2354.23
[2,]            -23.578       0.3134       -0.0796             -15.01
[3,]              1.097      -0.0796        0.0704              -8.66
[4,]           2354.232     -15.0109       -8.6593            4911.36
[5,]            -24.454       0.2225        0.0225             -38.45
[6,]              0.887      -0.0644        0.0569              -9.51
[7,]              1.348      -0.0978        0.0864             -12.94
     supply_price supply_farmPrice supply_trend
[1,]     -24.4536           0.8871       1.3477
[2,]       0.2225          -0.0644      -0.0978
[3,]       0.0225           0.0569       0.0864
[4,]     -38.4456          -9.5077     -12.9352
[5,]       0.3567           0.0252       0.0320
[6,]       0.0252           0.0636       0.0807
[7,]       0.0320           0.0807       0.1845
> 
> round( bread( fitsuri1e ), digits = 7 )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]           1876.862     -19.2519        0.5677             -81.89
[2,]            -19.252       0.2661       -0.0755              -2.81
[3,]              0.568      -0.0755        0.0716               3.68
[4,]            -81.887      -2.8102        3.6811             363.96
[5,]              7.186      -0.0595       -0.0127              -1.84
[6,]             -5.538       0.0766       -0.0217              -1.67
[7,]             -8.357       0.1155       -0.0328              -1.82
     supply_income supply_farmPrice supply_trend
[1,]        7.1857          -5.5385      -8.3572
[2,]       -0.0595           0.0766       0.1155
[3,]       -0.0127          -0.0217      -0.0328
[4,]       -1.8380          -1.6714      -1.8169
[5,]        0.0569          -0.0327      -0.0527
[6,]       -0.0327           0.0441       0.0571
[7,]       -0.0527           0.0571       0.1367
> 
> round( bread( fitsuri1wr3 ), digits = 7 )
     demand_(Intercept) demand_price demand_income supply_(Intercept)
[1,]           2182.020     -22.2793        0.5557            -108.13
[2,]            -22.279       0.3080       -0.0874              -3.49
[3,]              0.556      -0.0874        0.0839               4.64
[4,]           -108.127      -3.4932        4.6397             458.64
[5,]              8.996      -0.0739       -0.0164              -2.35
[6,]             -6.884       0.0952       -0.0270              -2.07
[7,]            -10.388       0.1436       -0.0408              -2.31
     supply_income supply_farmPrice supply_trend
[1,]        8.9961          -6.8844     -10.3882
[2,]       -0.0739           0.0952       0.1436
[3,]       -0.0164          -0.0270      -0.0408
[4,]       -2.3500          -2.0691      -2.3134
[5,]        0.0715          -0.0407      -0.0653
[6,]       -0.0407           0.0547       0.0717
[7,]       -0.0653           0.0717       0.1662
> 
> round( bread( fitsurS1 ), digits = 7 )
     eq1_consump eq2_(Intercept) eq2_consump eq2_trend
[1,]     0.00876             0.0   -4.02e-03     0.000
[2,]     0.00000         91218.4   -9.08e+02    48.892
[3,]    -0.00402          -908.0    9.09e+00    -0.866
[4,]     0.00000            48.9   -8.66e-01     3.664
> 
> round( bread( fitsurS2 ), digits = 7 )
     eq1_price eq2_trend
[1,]   0.00903  -0.00752
[2,]  -0.00752  34.11430
> 
> round( bread( fitsurS3 ), digits = 7 )
     eq1_trend eq2_trend
[1,]      34.1      34.0
[2,]      34.0      34.5
> 
> try( bread( fitsurS4 ) )
Error in bread.systemfit(fitsurS4) : 
  returning the 'bread' for models with restrictions has not yet been implemented.
> 
> proc.time()
   user  system elapsed 
  3.896   0.136   4.028 
